<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">
<pdf2xml producer="poppler" version="23.04.0">
<page number="1" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font0" size="17" family="NimbusRomNo9L-Medi" color="#000000"/>
	<fontspec id="font1" size="10" family="NimbusRomNo9L-Medi" color="#000000"/>
	<fontspec id="font2" size="7" family="CMSY7" color="#0000ff"/>
	<fontspec id="font3" size="10" family="NimbusRomNo9L-Regu" color="#000000"/>
	<fontspec id="font4" size="7" family="CMSY7" color="#000000"/>
	<fontspec id="font5" size="10" family="SFTT1000" color="#000000"/>
	<fontspec id="font6" size="12" family="NimbusRomNo9L-Medi" color="#000000"/>
	<fontspec id="font7" size="10" family="NimbusRomNo9L-Regu" color="#00308e"/>
	<fontspec id="font8" size="6" family="CMSY6" color="#000000"/>
	<fontspec id="font9" size="9" family="NimbusRomNo9L-Regu" color="#000000"/>
	<fontspec id="font10" size="20" family="Times" color="#7f7f7f"/>
<text top="101" left="173" width="267" height="15" font="font0" id="p1_t1" reading_order_no="1" segment_no="0" tag_type="title">Secure Distributed Training at Scale</text>
<text top="160" left="125" width="82" height="11" font="font1" id="p1_t2" reading_order_no="2" segment_no="1" tag_type="text">Eduard Gorbunov ∗<a href="deeplearning_paper1.html#1">v</a></text>
<text top="173" left="149" width="30" height="9" font="font3" id="p1_t3" reading_order_no="3" segment_no="1" tag_type="text">Yandex<a href="deeplearning_paper1.html#1">∗</a></text>
<text top="184" left="152" width="24" height="9" font="font3" id="p1_t4" reading_order_no="4" segment_no="1" tag_type="text">MIPT</text>
<text top="160" left="226" width="92" height="11" font="font1" id="p1_t5" reading_order_no="5" segment_no="2" tag_type="text">Alexander Borzunov ∗</text>
<text top="173" left="255" width="30" height="9" font="font3" id="p1_t6" reading_order_no="6" segment_no="2" tag_type="text">Yandex</text>
<text top="184" left="239" width="63" height="9" font="font3" id="p1_t7" reading_order_no="7" segment_no="2" tag_type="text">HSE University</text>
<text top="162" left="337" width="64" height="9" font="font1" id="p1_t8" reading_order_no="8" segment_no="3" tag_type="text">Michael Diskin</text>
<text top="173" left="354" width="30" height="9" font="font3" id="p1_t9" reading_order_no="9" segment_no="3" tag_type="text">Yandex</text>
<text top="184" left="338" width="63" height="9" font="font3" id="p1_t10" reading_order_no="10" segment_no="3" tag_type="text">HSE University</text>
<text top="162" left="425" width="61" height="9" font="font1" id="p1_t11" reading_order_no="11" segment_no="4" tag_type="text">Max Ryabinin</text>
<text top="173" left="441" width="30" height="9" font="font3" id="p1_t12" reading_order_no="12" segment_no="4" tag_type="text">Yandex</text>
<text top="184" left="424" width="63" height="9" font="font3" id="p1_t13" reading_order_no="13" segment_no="4" tag_type="text">HSE University</text>
<text top="207" left="239" width="146" height="8" font="font5" id="p1_t14" reading_order_no="14" segment_no="5" tag_type="text">eduard.gorbunov@phystech.edu</text>
<text top="218" left="155" width="314" height="8" font="font5" id="p1_t15" reading_order_no="15" segment_no="5" tag_type="text">{borzunov.alexander, michael.s.diskin, mryabinin0}@gmail.com</text>
<text top="244" left="284" width="44" height="11" font="font6" id="p1_t16" reading_order_no="16" segment_no="6" tag_type="title">Abstract</text>
<text top="268" left="144" width="324" height="9" font="font3" id="p1_t17" reading_order_no="17" segment_no="7" tag_type="text">Some of the hardest problems in deep learning can be solved with the combined</text>
<text top="279" left="144" width="324" height="9" font="font3" id="p1_t18" reading_order_no="18" segment_no="7" tag_type="text">effort of many independent parties, as is the case for volunteer computing and</text>
<text top="290" left="144" width="326" height="9" font="font3" id="p1_t19" reading_order_no="19" segment_no="7" tag_type="text">federated learning. These setups rely on high numbers of peers to provide compu-</text>
<text top="300" left="144" width="324" height="9" font="font3" id="p1_t20" reading_order_no="20" segment_no="7" tag_type="text">tational resources or train on decentralized datasets. Unfortunately, participants</text>
<text top="311" left="144" width="324" height="9" font="font3" id="p1_t21" reading_order_no="21" segment_no="7" tag_type="text">in such systems are not always reliable. Any single participant can jeopardize</text>
<text top="322" left="144" width="325" height="9" font="font3" id="p1_t22" reading_order_no="22" segment_no="7" tag_type="text">the entire training run by sending incorrect updates, whether deliberately or by</text>
<text top="333" left="144" width="324" height="9" font="font3" id="p1_t23" reading_order_no="23" segment_no="7" tag_type="text">mistake. Training in presence of such peers requires specialized distributed training</text>
<text top="344" left="144" width="325" height="9" font="font3" id="p1_t24" reading_order_no="24" segment_no="7" tag_type="text">algorithms with Byzantine tolerance. These algorithms often sacrifice efficiency</text>
<text top="355" left="144" width="324" height="9" font="font3" id="p1_t25" reading_order_no="25" segment_no="7" tag_type="text">by introducing redundant communication or passing all updates through a trusted</text>
<text top="366" left="144" width="326" height="9" font="font3" id="p1_t26" reading_order_no="26" segment_no="7" tag_type="text">server. As a result, it can be infeasible to apply such algorithms to large-scale dis-</text>
<text top="377" left="144" width="326" height="9" font="font3" id="p1_t27" reading_order_no="27" segment_no="7" tag_type="text">tributed deep learning, where models can have billions of parameters. In this work,</text>
<text top="388" left="144" width="325" height="9" font="font3" id="p1_t28" reading_order_no="28" segment_no="7" tag_type="text">we propose a novel protocol for secure (Byzantine-tolerant) decentralized training</text>
<text top="399" left="144" width="326" height="9" font="font3" id="p1_t29" reading_order_no="29" segment_no="7" tag_type="text">that emphasizes communication efficiency. We rigorously analyze this protocol:</text>
<text top="410" left="144" width="324" height="9" font="font3" id="p1_t30" reading_order_no="30" segment_no="7" tag_type="text">in particular, we provide theoretical bounds for its resistance against Byzantine</text>
<text top="420" left="144" width="324" height="9" font="font3" id="p1_t31" reading_order_no="31" segment_no="7" tag_type="text">and Sybil attacks and show that it has a marginal communication overhead. To</text>
<text top="431" left="144" width="324" height="9" font="font3" id="p1_t32" reading_order_no="32" segment_no="7" tag_type="text">demonstrate its practical effectiveness, we conduct large-scale experiments on</text>
<text top="442" left="144" width="316" height="9" font="font3" id="p1_t33" reading_order_no="33" segment_no="7" tag_type="text">image classification and language modeling in presence of Byzantine attackers.</text>
<text top="467" left="108" width="6" height="11" font="font6" id="p1_t34" reading_order_no="34" segment_no="8" tag_type="title">1</text>
<text top="467" left="126" width="65" height="11" font="font6" id="p1_t35" reading_order_no="35" segment_no="8" tag_type="title">Introduction</text>
<text top="485" left="108" width="396" height="9" font="font3" id="p1_t36" reading_order_no="36" segment_no="9" tag_type="text">Many hard scientific problems were solved through collaboration between many nations, groups</text>
<text top="496" left="108" width="396" height="9" font="font3" id="p1_t37" reading_order_no="37" segment_no="9" tag_type="text">and individual researchers. This is especially evident in natural sciences, where researchers formed</text>
<text top="507" left="108" width="398" height="9" font="font3" id="p1_t38" reading_order_no="38" segment_no="9" tag_type="text">multinational collaborations to run large-scale experiments and share compute infrastructure [ 1 , 2 , 3 ].</text>
<text top="518" left="108" width="396" height="9" font="font3" id="p1_t39" reading_order_no="39" segment_no="9" tag_type="text">Projects like Folding@home [ 4 ] and BOINC [ 5 ] push this trend even further by recruiting volunteers</text>
<text top="529" left="108" width="398" height="9" font="font3" id="p1_t40" reading_order_no="40" segment_no="9" tag_type="text">that donate their compute to collectively run computational experiments at an unprecedented scale [ 6 ].<a href="deeplearning_paper1.html#10">[</a></text>
<text top="546" left="108" width="398" height="9" font="font3" id="p1_t41" reading_order_no="41" segment_no="10" tag_type="text">Similar techniques were recently proposed for machine learning, aiming to solve two key challenges.<a href="deeplearning_paper1.html#10">1</a></text>
<text top="556" left="108" width="396" height="9" font="font3" id="p1_t42" reading_order_no="42" segment_no="10" tag_type="text">The first challenge is the sheer computational complexity of many machine learning tasks, such<a href="deeplearning_paper1.html#10">,</a></text>
<text top="567" left="108" width="398" height="9" font="font3" id="p1_t43" reading_order_no="43" segment_no="10" tag_type="text">as pretraining transformers for NLP [ 7 , 8 , 9 ] or learning on huge datasets in vision [ 10 , 11 , 12 ].<a href="deeplearning_paper1.html#10">2</a></text>
<text top="578" left="108" width="397" height="9" font="font3" id="p1_t44" reading_order_no="44" segment_no="10" tag_type="text">Recent works propose several systems [ 13 , 14 , 15 ] that can share the computation across many<a href="deeplearning_paper1.html#10">,</a></text>
<text top="589" left="108" width="396" height="9" font="font3" id="p1_t45" reading_order_no="45" segment_no="10" tag_type="text">volunteers that donate the idle time of their computers. Another challenge arises in Federated<a href="deeplearning_paper1.html#10">3</a></text>
<text top="600" left="108" width="396" height="9" font="font3" id="p1_t46" reading_order_no="46" segment_no="10" tag_type="text">Learning, where participants train a shared model over decentralized data that cannot be shared for<a href="deeplearning_paper1.html#10">].</a></text>
<text top="611" left="108" width="113" height="9" font="font3" id="p1_t47" reading_order_no="47" segment_no="10" tag_type="text">privacy reasons [ 16 , 17 , 18 ].<a href="deeplearning_paper1.html#10">[</a></text>
<text top="627" left="108" width="396" height="9" font="font3" id="p1_t48" reading_order_no="48" segment_no="12" tag_type="text">Despite their strengths, both volunteer computing and federated learning systems have so far seen<a href="deeplearning_paper1.html#10">4</a></text>
<text top="638" left="108" width="396" height="9" font="font3" id="p1_t49" reading_order_no="49" segment_no="12" tag_type="text">limited practical applications [ 19 , 13 ]. A major roadblock towards the global adoption of these<a href="deeplearning_paper1.html#10">] </a>and BOINC <a href="deeplearning_paper1.html#10">[</a></text>
<text top="649" left="108" width="396" height="9" font="font3" id="p1_t50" reading_order_no="50" segment_no="12" tag_type="text">techniques is trust in reliability of each participant. For distributed training, all progress made by<a href="deeplearning_paper1.html#10">5</a></text>
<text top="660" left="108" width="396" height="9" font="font3" id="p1_t51" reading_order_no="51" segment_no="12" tag_type="text">the collaboration can be undermined if a single peer sends incorrect outputs due to an error in<a href="deeplearning_paper1.html#10">] </a>push this trend even further by recruiting volunteers</text>
<text top="671" left="108" width="168" height="9" font="font3" id="p1_t52" reading_order_no="52" segment_no="12" tag_type="text">computation [ 20 ] or malicious intent [ 21 ].<a href="deeplearning_paper1.html#10">[</a></text>
<text top="687" left="108" width="396" height="9" font="font3" id="p1_t53" reading_order_no="53" segment_no="13" tag_type="text">Prior art in decentralized optimization proposed several optimization algorithms that are resistant to<a href="deeplearning_paper1.html#10">6</a></text>
<text top="698" left="108" width="398" height="9" font="font3" id="p1_t54" reading_order_no="54" segment_no="13" tag_type="text">such “Byzantine” faults. However, this additional security comes at a high price: most Byzantine-<a href="deeplearning_paper1.html#10">].</a></text>
<text top="713" left="120" width="71" height="10" font="font9" id="p1_t55" reading_order_no="55" segment_no="14" tag_type="footnote">∗ Equal contribution</text>
<text top="546" left="32" width="0" height="18" font="font10" id="p1_t56" reading_order_no="0" segment_no="11" tag_type="title">arXiv:2106.11257v1  [cs.LG]  21 Jun 2021</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font11" size="8" family="NimbusRomNo9L-Regu" color="#000000"/>
	<fontspec id="font12" size="7" family="NimbusRomNo9L-Regu" color="#0000ff"/>
	<fontspec id="font13" size="10" family="NimbusRomNo9L-ReguItal" color="#000000"/>
	<fontspec id="font14" size="6" family="NimbusRomNo9L-Regu" color="#000000"/>
	<fontspec id="font15" size="9" family="SFTT0900" color="#0000ff"/>
	<fontspec id="font16" size="9" family="NimbusRomNo9L-Regu" color="#00308e"/>
<text top="75" left="108" width="396" height="9" font="font3" id="p2_t1" reading_order_no="0" segment_no="0" tag_type="text">tolerant training protocols require either passing all updates through a trusted central server or</text>
<text top="86" left="108" width="396" height="9" font="font3" id="p2_t2" reading_order_no="1" segment_no="0" tag_type="text">exchanging additional messages that increase the network load by several times [ 22 , 23 ]. This is a<a href="deeplearning_paper1.html#11">[</a></text>
<text top="97" left="108" width="396" height="9" font="font3" id="p2_t3" reading_order_no="2" segment_no="0" tag_type="text">major problem for large-scale distributed deep learning, where hundreds of peers must exchange<a href="deeplearning_paper1.html#11">22</a></text>
<text top="108" left="108" width="398" height="9" font="font3" id="p2_t4" reading_order_no="3" segment_no="0" tag_type="text">updates for millions of parameters at regular intervals [ 24 , 25 , 26 ]. Thus, in many practical scenar-<a href="deeplearning_paper1.html#11">,</a></text>
<text top="119" left="108" width="396" height="9" font="font3" id="p2_t5" reading_order_no="4" segment_no="0" tag_type="text">ios, the computation and communication overhead of Byzantine-tolerant algorithms outweighs the<a href="deeplearning_paper1.html#11">23</a></text>
<text top="130" left="108" width="184" height="9" font="font3" id="p2_t6" reading_order_no="5" segment_no="0" tag_type="text">potential benefits of collaborating with others.<a href="deeplearning_paper1.html#11">]. </a>This is a</text>
<text top="146" left="108" width="396" height="9" font="font3" id="p2_t7" reading_order_no="6" segment_no="1" tag_type="text">In this work, we set out to solve this problem by proposing a novel distributed training protocol</text>
<text top="157" left="108" width="396" height="9" font="font3" id="p2_t8" reading_order_no="7" segment_no="1" tag_type="text">designed for large-scale deep learning workloads. Our approach combines the scalability and<a href="deeplearning_paper1.html#11">[</a></text>
<text top="168" left="108" width="396" height="9" font="font3" id="p2_t9" reading_order_no="8" segment_no="1" tag_type="text">communication efficiency of modern distributed training techniques such as A LL -R EDUCE SGD [ 25 ]<a href="deeplearning_paper1.html#11">24</a></text>
<text top="179" left="108" width="397" height="9" font="font3" id="p2_t10" reading_order_no="9" segment_no="1" tag_type="text">with resilience against Byzantine and Sybil attackers. To achieve this, we leverage secure multi-party<a href="deeplearning_paper1.html#11">,</a></text>
<text top="190" left="108" width="396" height="9" font="font3" id="p2_t11" reading_order_no="10" segment_no="1" tag_type="text">computing (MPC) to verify the integrity of training with minimal overhead that does not depend<a href="deeplearning_paper1.html#11">25</a></text>
<text top="201" left="108" width="396" height="9" font="font3" id="p2_t12" reading_order_no="11" segment_no="1" tag_type="text">on the model size. Our protocol does not require trusted peers, operating under the assumption that<a href="deeplearning_paper1.html#11">,</a></text>
<text top="212" left="108" width="382" height="9" font="font3" id="p2_t13" reading_order_no="12" segment_no="1" tag_type="text">anyone can be an attacker. The overall contributions of our work can be summarized as follows:<a href="deeplearning_paper1.html#11">26</a></text>
<text top="225" left="108" width="398" height="9" font="font3" id="p2_t14" reading_order_no="13" segment_no="2" tag_type="list">• We propose a novel strategy for decentralized Byzantine-tolerant training where the extra commu-<a href="deeplearning_paper1.html#11">]. </a>Thus, in many practical scenar-</text>
<text top="236" left="116" width="237" height="9" font="font3" id="p2_t15" reading_order_no="14" segment_no="2" tag_type="list">nication cost does not depend on the number of parameters.</text>
<text top="250" left="108" width="398" height="9" font="font3" id="p2_t16" reading_order_no="15" segment_no="3" tag_type="list">• We rigorously analyze the proposed strategy and prove convergence bounds for convex and non-</text>
<text top="261" left="116" width="388" height="9" font="font3" id="p2_t17" reading_order_no="16" segment_no="3" tag_type="list">convex losses with Byzantine attackers. Furthermore, we derive accelerated convergence rates for</text>
<text top="272" left="116" width="258" height="9" font="font3" id="p2_t18" reading_order_no="17" segment_no="3" tag_type="list">the same task under realistic assumptions about model gradients.</text>
<text top="285" left="108" width="396" height="9" font="font3" id="p2_t19" reading_order_no="18" segment_no="4" tag_type="list">• Based on the above algorithm, we describe a system that allows multiple parties to train a shared</text>
<text top="296" left="116" width="388" height="9" font="font3" id="p2_t20" reading_order_no="19" segment_no="4" tag_type="list">model with zero trust assumptions. We prove that this system is resistant to both Byzantine and</text>
<text top="307" left="116" width="232" height="9" font="font3" id="p2_t21" reading_order_no="20" segment_no="4" tag_type="list">Sybil attacks from a computationally constrained attacker.</text>
<text top="319" left="108" width="396" height="11" font="font3" id="p2_t22" reading_order_no="21" segment_no="5" tag_type="list">• We verify the effectiveness of our algorithm through both controlled experiments 2 and actual</text>
<text top="332" left="116" width="388" height="9" font="font3" id="p2_t23" reading_order_no="22" segment_no="5" tag_type="list">large-scale training runs. Specifically, we start with ResNet-18 for CIFAR-10 classification and<a href="deeplearning_paper1.html#11">[</a></text>
<text top="342" left="116" width="387" height="9" font="font3" id="p2_t24" reading_order_no="23" segment_no="5" tag_type="list">follow up with pretraining ALBERT-large in a setup where almost half of all peers are malicious.<a href="deeplearning_paper1.html#11">25</a></text>
<text top="360" left="108" width="6" height="11" font="font6" id="p2_t25" reading_order_no="24" segment_no="6" tag_type="title">2<a href="deeplearning_paper1.html#11">]</a></text>
<text top="360" left="126" width="69" height="11" font="font6" id="p2_t26" reading_order_no="25" segment_no="6" tag_type="title">Related work</text>
<text top="380" left="108" width="12" height="9" font="font1" id="p2_t27" reading_order_no="26" segment_no="7" tag_type="title">2.1</text>
<text top="380" left="130" width="109" height="9" font="font1" id="p2_t28" reading_order_no="27" segment_no="7" tag_type="title">Distributed deep learning</text>
<text top="396" left="108" width="396" height="9" font="font3" id="p2_t29" reading_order_no="28" segment_no="8" tag_type="text">Nowadays, training deep neural networks often requires so much raw computation that it is infeasible</text>
<text top="407" left="108" width="396" height="9" font="font3" id="p2_t30" reading_order_no="29" segment_no="8" tag_type="text">for any single compute accelerator. As a result, such models can only be trained by splitting the</text>
<text top="418" left="108" width="396" height="9" font="font3" id="p2_t31" reading_order_no="30" segment_no="8" tag_type="text">workload over multiple machines using one of the existing distributed training algorithms. Most of</text>
<text top="428" left="108" width="396" height="10" font="font3" id="p2_t32" reading_order_no="31" segment_no="8" tag_type="text">these methods fall into two broad categories: in data-parallel training, each worker trains the entire</text>
<text top="439" left="108" width="396" height="9" font="font3" id="p2_t33" reading_order_no="32" segment_no="8" tag_type="text">model over a different part of the training batch [ 25 , 27 ]; in contrast, model-parallel training splits</text>
<text top="450" left="108" width="396" height="9" font="font3" id="p2_t34" reading_order_no="33" segment_no="8" tag_type="text">the model itself, making every worker responsible for certain layers [ 28 , 29 ] or a single slice of a</text>
<text top="460" left="108" width="337" height="10" font="font3" id="p2_t35" reading_order_no="34" segment_no="8" tag_type="text">layer [ 26 ]. For the purpose of this study, we only consider data-parallel algorithms 3 .</text>
<text top="478" left="108" width="398" height="9" font="font3" id="p2_t36" reading_order_no="35" segment_no="9" tag_type="text">In general, training neural networks with data parallelism consists of two interleaving phases: com-</text>
<text top="488" left="108" width="396" height="10" font="font13" id="p2_t37" reading_order_no="36" segment_no="9" tag_type="text">putation and communication . During the computation phase, each worker independently computes</text>
<text top="499" left="108" width="396" height="9" font="font3" id="p2_t38" reading_order_no="37" segment_no="9" tag_type="text">gradients over its fraction of the current minibatch. Once the gradients are computed, workers<a href="deeplearning_paper1.html#2">xperiments</a></text>
<text top="510" left="108" width="397" height="9" font="font3" id="p2_t39" reading_order_no="38" segment_no="9" tag_type="text">initiate the communication phase to aggregate these gradients and perform an SGD step. Naturally,<a href="deeplearning_paper1.html#2">2</a></text>
<text top="521" left="108" width="398" height="9" font="font3" id="p2_t40" reading_order_no="39" segment_no="9" tag_type="text">there are exceptions to this rule: some algorithms run multiple local steps before each synchroniza-</text>
<text top="532" left="108" width="398" height="9" font="font3" id="p2_t41" reading_order_no="40" segment_no="9" tag_type="text">tion [ 32 , 33 , 34 ] while others replace global aggregation with peer-to-peer communication [ 35 , 36 ].</text>
<text top="543" left="108" width="398" height="9" font="font3" id="p2_t42" reading_order_no="41" segment_no="9" tag_type="text">However, the majority of real-world distributed training setups follow the above two-stage procedure.</text>
<text top="559" left="108" width="398" height="9" font="font3" id="p2_t43" reading_order_no="42" segment_no="10" tag_type="text">As we increase the scale of data-parallel training, so does the importance of the communication phase.</text>
<text top="570" left="108" width="396" height="9" font="font3" id="p2_t44" reading_order_no="43" segment_no="10" tag_type="text">Deep neural networks can have anywhere between tens of millions and trillions [ 31 , 37 ] of trainable</text>
<text top="581" left="108" width="396" height="9" font="font3" id="p2_t45" reading_order_no="44" segment_no="10" tag_type="text">parameters, and hence, gradients. As such, it is crucial that nodes aggregate their gradients in the</text>
<text top="592" left="108" width="396" height="9" font="font3" id="p2_t46" reading_order_no="45" segment_no="10" tag_type="text">most communication-efficient way. To address this concern, distributed training systems can use one</text>
<text top="603" left="108" width="340" height="9" font="font3" id="p2_t47" reading_order_no="46" segment_no="10" tag_type="text">of several protocols, depending on the available hardware and network infrastructure.</text>
<text top="619" left="108" width="397" height="9" font="font3" id="p2_t48" reading_order_no="47" segment_no="11" tag_type="text">The most obvious one is known as Parameter Servers (PS) [ 38 , 39 , 40 , 41 ]. As the name suggests,</text>
<text top="630" left="108" width="396" height="9" font="font3" id="p2_t49" reading_order_no="48" segment_no="11" tag_type="text">this strategy assigns one of the servers to storing and updating the model parameters (along with</text>
<text top="641" left="108" width="396" height="9" font="font3" id="p2_t50" reading_order_no="49" segment_no="11" tag_type="text">the optimizer statistics). All other workers simply compute gradients and send them to the PS for</text>
<text top="652" left="108" width="396" height="9" font="font3" id="p2_t51" reading_order_no="50" segment_no="11" tag_type="text">aggregation, then download the updated model parameters and repeat the same procedure for the</text>
<text top="663" left="108" width="396" height="9" font="font3" id="p2_t52" reading_order_no="51" segment_no="11" tag_type="text">next step. In terms of training efficiency, this strategy performs well enough when training with a</text>
<text top="674" left="108" width="396" height="9" font="font3" id="p2_t53" reading_order_no="52" segment_no="11" tag_type="text">small number of workers. However, as we add more workers, the parameter server will eventually<a href="deeplearning_paper1.html#11">[</a></text>
<text top="691" left="121" width="323" height="10" font="font9" id="p2_t54" reading_order_no="53" segment_no="12" tag_type="footnote">2 Source code for the experiments is available at github.com/yandex-research/btard<a href="deeplearning_paper1.html#11">25</a></text>
<text top="702" left="121" width="383" height="10" font="font9" id="p2_t55" reading_order_no="54" segment_no="13" tag_type="footnote">3 This choice does not limit the generality of our results as most real-world model-parallel systems still rely<a href="deeplearning_paper1.html#11">,</a></text>
<text top="714" left="108" width="365" height="8" font="font9" id="p2_t56" reading_order_no="55" segment_no="13" tag_type="footnote">on data-parallel training between groups of servers that run pipeline or tensor parallel groups [ 30 , 31 ].<a href="deeplearning_paper1.html#11">27</a></text>
<text top="743" left="304" width="5" height="9" font="font3" id="p2_t57" reading_order_no="56" segment_no="14" tag_type="text">2<a href="deeplearning_paper1.html#11">]; </a>in contrast,</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font17" size="10" family="CMMI10" color="#000000"/>
	<fontspec id="font18" size="10" family="CMR10" color="#000000"/>
	<fontspec id="font19" size="10" family="CMSY10" color="#000000"/>
	<fontspec id="font20" size="10" family="NimbusRomNo9L-Regu" color="#0000ff"/>
<text top="75" left="108" width="398" height="9" font="font3" id="p3_t1" reading_order_no="0" segment_no="0" tag_type="text">become unable to download gradients and send updates quickly enough to keep all workers busy.</text>
<text top="86" left="108" width="397" height="9" font="font3" id="p3_t2" reading_order_no="1" segment_no="0" tag_type="text">This problem can partially alleviated through gradient compression [ 42 , 43 , 44 , 45 , 46 , 47 , 48 ] or<a href="deeplearning_paper1.html#12">[</a></text>
<text top="97" left="108" width="333" height="9" font="font3" id="p3_t3" reading_order_no="2" segment_no="0" tag_type="text">local updates [ 32 ], but it remains a fundamental bottleneck of any parameter server.<a href="deeplearning_paper1.html#12">42</a></text>
<text top="113" left="108" width="396" height="9" font="font3" id="p3_t4" reading_order_no="3" segment_no="1" tag_type="text">For this reason, most real-world distributed training adopt a different strategy based on A LL -R EDUCE<a href="deeplearning_paper1.html#12">,</a></text>
<text top="124" left="108" width="396" height="9" font="font3" id="p3_t5" reading_order_no="4" segment_no="1" tag_type="text">(AR) [ 27 , 49 , 50 ]. This is a family of communication protocols that allow multiple servers to<a href="deeplearning_paper1.html#12">43</a></text>
<text top="135" left="108" width="396" height="9" font="font3" id="p3_t6" reading_order_no="5" segment_no="1" tag_type="text">collectively compute the average (or similar functions) of their local vectors and distribute the result<a href="deeplearning_paper1.html#12">,</a></text>
<text top="146" left="108" width="396" height="9" font="font3" id="p3_t7" reading_order_no="6" segment_no="1" tag_type="text">to each server. As such, AR-SGD runs A LL -R EDUCE on local gradients of each peer and computes<a href="deeplearning_paper1.html#12">44</a></text>
<text top="157" left="108" width="396" height="9" font="font3" id="p3_t8" reading_order_no="7" segment_no="1" tag_type="text">the global mean. Depending on the network topology, modern distributed training systems typically<a href="deeplearning_paper1.html#12">,</a></text>
<text top="168" left="108" width="397" height="9" font="font3" id="p3_t9" reading_order_no="8" segment_no="1" tag_type="text">use Ring-, Butterfly- or Tree-based variant of A LL -R EDUCE . All three variants have good scalability:<a href="deeplearning_paper1.html#12">45</a></text>
<text top="179" left="108" width="396" height="9" font="font3" id="p3_t10" reading_order_no="9" segment_no="1" tag_type="text">when averaging a vector of d gradients with n peers, the former two protocols will require each<a href="deeplearning_paper1.html#12">,</a></text>
<text top="189" left="108" width="396" height="10" font="font3" id="p3_t11" reading_order_no="10" segment_no="1" tag_type="text">peer to communicate at most O ( d · ( n − 1) /n ) over the network, while the third protocol needs<a href="deeplearning_paper1.html#13">46</a></text>
<text top="200" left="108" width="397" height="10" font="font17" id="p3_t12" reading_order_no="11" segment_no="1" tag_type="text">O ( d · log(( n − 1) /n )) communication for each peer, compared to O ( d · n ) with a parameter server.<a href="deeplearning_paper1.html#13">,</a></text>
<text top="223" left="108" width="12" height="9" font="font1" id="p3_t13" reading_order_no="12" segment_no="2" tag_type="title">2.2<a href="deeplearning_paper1.html#13">47</a></text>
<text top="223" left="130" width="136" height="9" font="font1" id="p3_t14" reading_order_no="13" segment_no="2" tag_type="title">Byzantine-tolerant optimization<a href="deeplearning_paper1.html#13">,</a></text>
<text top="240" left="108" width="396" height="9" font="font3" id="p3_t15" reading_order_no="14" segment_no="3" tag_type="text">Training a shared model across many distributed agents is already a difficult task, but adding Byzantine<a href="deeplearning_paper1.html#13">48</a></text>
<text top="251" left="108" width="396" height="9" font="font3" id="p3_t16" reading_order_no="15" segment_no="3" tag_type="text">agents makes it even harder. And yet, the research community invented specialized algorithms that<a href="deeplearning_paper1.html#13">] </a>or</text>
<text top="262" left="108" width="396" height="9" font="font3" id="p3_t17" reading_order_no="16" segment_no="3" tag_type="text">can train models even in this setup. These algorithms are different in nature, but all of them provide<a href="deeplearning_paper1.html#12">[</a></text>
<text top="273" left="108" width="365" height="9" font="font3" id="p3_t18" reading_order_no="17" segment_no="3" tag_type="text">an extra layer of complexity on top of distributed training methods described in Section 2.1 .<a href="deeplearning_paper1.html#12">32</a></text>
<text top="289" left="108" width="177" height="9" font="font1" id="p3_t19" reading_order_no="18" segment_no="4" tag_type="text">Parameter-server (PS) based approaches.<a href="deeplearning_paper1.html#12">], </a>but it remains a fundamental bottleneck of any parameter server.</text>
<text top="289" left="295" width="209" height="9" font="font3" id="p3_t20" reading_order_no="19" segment_no="4" tag_type="text">The majority of existing algorithms designed to be</text>
<text top="300" left="108" width="396" height="9" font="font3" id="p3_t21" reading_order_no="20" segment_no="4" tag_type="text">Byzantine-resilient rely on the existence of a trusted parameter-server. Since in the classical parallel</text>
<text top="311" left="108" width="396" height="9" font="font3" id="p3_t22" reading_order_no="21" segment_no="4" tag_type="text">SGD even 1 Byzantine worker can break the convergence of the whole method by shifting the mean of</text>
<text top="322" left="108" width="396" height="9" font="font3" id="p3_t23" reading_order_no="22" segment_no="4" tag_type="text">the resulting vector in an arbitrary way, it is natural to substitute averaging of the vectors received from</text>
<text top="333" left="108" width="396" height="9" font="font3" id="p3_t24" reading_order_no="23" segment_no="4" tag_type="text">the workers by a more robust aggregation rule, e.g., Krum [ 51 ], coordinate-wise median, trimmed<a href="deeplearning_paper1.html#11">[</a></text>
<text top="344" left="108" width="396" height="9" font="font3" id="p3_t25" reading_order_no="24" segment_no="4" tag_type="text">median [ 52 ], Multi-Krum [ 53 ], Bulyan [ 54 ], geometric median [ 55 ]. Despite their simplicity, all these<a href="deeplearning_paper1.html#11">27</a></text>
<text top="354" left="108" width="398" height="9" font="font3" id="p3_t26" reading_order_no="25" segment_no="4" tag_type="text">methods were shown to be brittle and not robust to special types of Byzantine attacks [ 56 , 57 , 58 ].<a href="deeplearning_paper1.html#11">,</a></text>
<text top="365" left="108" width="397" height="9" font="font3" id="p3_t27" reading_order_no="26" segment_no="4" tag_type="text">Moreover, in [ 58 ], authors show that all permutation-invariant algorithms cannot converge to any<a href="deeplearning_paper1.html#13">49</a></text>
<text top="376" left="108" width="396" height="9" font="font3" id="p3_t28" reading_order_no="27" segment_no="4" tag_type="text">predefined accuracy of the solution, meaning that simple application of some aggregation rules on<a href="deeplearning_paper1.html#13">,</a></text>
<text top="387" left="108" width="197" height="9" font="font3" id="p3_t29" reading_order_no="28" segment_no="4" tag_type="text">top of SGD does not lead to Byzantine tolerance.<a href="deeplearning_paper1.html#13">50</a></text>
<text top="404" left="108" width="396" height="9" font="font3" id="p3_t30" reading_order_no="29" segment_no="5" tag_type="text">There are several approaches to circumvent this issue. In [ 59 ], the authors proposed B YZANTINE SGD<a href="deeplearning_paper1.html#13">]. </a>This is a family of communication protocols that allow multiple servers to</text>
<text top="414" left="108" width="396" height="9" font="font3" id="p3_t31" reading_order_no="30" segment_no="5" tag_type="text">and prove the convergence results for convex problems. This approach was recently extended to</text>
<text top="425" left="108" width="396" height="9" font="font3" id="p3_t32" reading_order_no="31" segment_no="5" tag_type="text">handle non-convex problems as well [ 60 ]. In both papers, the key idea is based on applying the</text>
<text top="436" left="108" width="396" height="9" font="font3" id="p3_t33" reading_order_no="32" segment_no="5" tag_type="text">concentration properties of the sums depending on the stochastic gradients as well as iterative</text>
<text top="447" left="108" width="396" height="9" font="font3" id="p3_t34" reading_order_no="33" segment_no="5" tag_type="text">removing of Byzantine peers. However, theoretical guarantees from [ 59 , 60 ] rely on the restrictive</text>
<text top="458" left="108" width="396" height="9" font="font3" id="p3_t35" reading_order_no="34" segment_no="5" tag_type="text">assumption that the noise in the stochastic gradients is uniformly bounded with probability 1 . Next, in</text>
<text top="469" left="108" width="396" height="9" font="font3" id="p3_t36" reading_order_no="35" segment_no="5" tag_type="text">[ 61 ], the authors propose a Byzantine-tolerant version of parallel SAGA [ 62 ], i.e., variance-reduced</text>
<text top="480" left="108" width="396" height="9" font="font3" id="p3_t37" reading_order_no="36" segment_no="5" tag_type="text">version of SGD, with geometric median as an aggregation rule — B YRD -SAGA – and prove the</text>
<text top="491" left="108" width="396" height="9" font="font3" id="p3_t38" reading_order_no="37" segment_no="5" tag_type="text">convergence of the new method for convex objectives. However, variance-reduced methods are</text>
<text top="502" left="108" width="397" height="9" font="font3" id="p3_t39" reading_order_no="38" segment_no="5" tag_type="text">known to converge slowly in practice [ 63 ], which limits the practical utility of B YRD -SAGA. Finally,</text>
<text top="513" left="108" width="396" height="9" font="font3" id="p3_t40" reading_order_no="39" segment_no="5" tag_type="text">in [ 58 ], authors propose a new aggregation rule called C ENTERED C LIP , apply it to SGD with client</text>
<text top="524" left="108" width="396" height="9" font="font3" id="p3_t41" reading_order_no="40" segment_no="5" tag_type="text">momentum, and prove convergence results for the obtained method in the non-convex case under</text>
<text top="534" left="108" width="396" height="9" font="font3" id="p3_t42" reading_order_no="41" segment_no="5" tag_type="text">reasonable assumptions. Alternative lines of work achieve Byzantine-tolerant optimization through</text>
<text top="545" left="108" width="396" height="9" font="font3" id="p3_t43" reading_order_no="42" segment_no="5" tag_type="text">redundant computations [ 22 , 23 ] or reputation-based approaches [ 64 , 65 , 66 ]. Unfortunately, these</text>
<text top="556" left="108" width="396" height="9" font="font3" id="p3_t44" reading_order_no="43" segment_no="5" tag_type="text">papers either do not contain theoretical convergence results for the proposed methods or rely on too</text>
<text top="567" left="108" width="376" height="9" font="font3" id="p3_t45" reading_order_no="44" segment_no="5" tag_type="text">restrictive assumptions in the analysis. One can find more references in the recent survey [ 67 ].</text>
<text top="583" left="108" width="112" height="9" font="font1" id="p3_t46" reading_order_no="45" segment_no="6" tag_type="text">Decentralized approaches.</text>
<text top="583" left="230" width="276" height="9" font="font3" id="p3_t47" reading_order_no="46" segment_no="6" tag_type="text">Byzantine-tolerant optimization methods for decentralized communi-</text>
<text top="594" left="108" width="398" height="9" font="font3" id="p3_t48" reading_order_no="47" segment_no="6" tag_type="text">cation architectures are studied only in a couple of papers. Among them we emphasize [ 68 , 69 , 70 ].</text>
<text top="605" left="108" width="396" height="9" font="font3" id="p3_t49" reading_order_no="48" segment_no="6" tag_type="text">In [ 68 , 69 ], the authors consider a specific scenario when workers compute full gradients, local</text>
<text top="616" left="108" width="396" height="9" font="font3" id="p3_t50" reading_order_no="49" segment_no="6" tag_type="text">loss functions on peers are heterogeneous, and the trimmed coordinate-wise median is used as an</text>
<text top="627" left="108" width="396" height="9" font="font3" id="p3_t51" reading_order_no="50" segment_no="6" tag_type="text">aggregation rule. In this setup, the authors prove convergence results in the strongly convex case for</text>
<text top="638" left="108" width="397" height="9" font="font3" id="p3_t52" reading_order_no="51" segment_no="6" tag_type="text">the proposed algorithms to some accuracy depending on the heterogeneity level of local loss functions,</text>
<text top="649" left="108" width="396" height="9" font="font3" id="p3_t53" reading_order_no="52" segment_no="6" tag_type="text">which is natural in the presence of Byzantine peers. However, these results are not applicable to</text>
<text top="660" left="108" width="396" height="9" font="font3" id="p3_t54" reading_order_no="53" segment_no="6" tag_type="text">a wide range of practically important problems where stochastic gradients have to be used. This</text>
<text top="670" left="108" width="396" height="9" font="font3" id="p3_t55" reading_order_no="54" segment_no="6" tag_type="text">issue was partially resolved in [ 70 ], where the authors propose a version of G OSSIP SGD applied</text>
<text top="681" left="108" width="398" height="9" font="font3" id="p3_t56" reading_order_no="55" segment_no="6" tag_type="text">to the equivalent reformulation of the original problem based on TV-regularization [ 71 ]. However,</text>
<text top="692" left="108" width="396" height="9" font="font3" id="p3_t57" reading_order_no="56" segment_no="6" tag_type="text">the established convergence results in the strongly convex case do not show any benefits of using</text>
<text top="703" left="108" width="396" height="9" font="font3" id="p3_t58" reading_order_no="57" segment_no="6" tag_type="text">communications with other workers in the homogeneous data regime that appears in large-batch</text>
<text top="714" left="108" width="398" height="9" font="font3" id="p3_t59" reading_order_no="58" segment_no="6" tag_type="text">training of deep learning models. The same idea is used in [ 72 ] but for a parameter-server architecture.</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p3_t60" reading_order_no="59" segment_no="7" tag_type="text">3</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font21" size="8" family="CMUSerif" color="#000000"/>
	<fontspec id="font22" size="5" family="CMUSerif" color="#000000"/>
	<fontspec id="font23" size="8" family="CMUSerif" color="#000000"/>
	<fontspec id="font24" size="5" family="CMUSerif" color="#000000"/>
	<fontspec id="font25" size="8" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font26" size="9" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font27" size="7" family="STIXGeneral" color="#000000"/>
	<fontspec id="font28" size="7" family="CMMI7" color="#000000"/>
<text top="118" left="263" width="42" height="12" font="font21" id="p4_t1" reading_order_no="5" segment_no="0" tag_type="figure">h i =h(i||x i ||s i )</text>
<text top="113" left="404" width="31" height="10" font="font23" id="p4_t2" reading_order_no="9" segment_no="0" tag_type="figure">Verify   j</text>
<text top="122" left="398" width="43" height="12" font="font23" id="p4_t3" reading_order_no="11" segment_no="0" tag_type="figure">h j =h(j||x j ||s j )</text>
<text top="120" left="458" width="49" height="11" font="font23" id="p4_t4" reading_order_no="12" segment_no="0" tag_type="figure">x=h(x 1 ||…||x n )</text>
<text top="90" left="362" width="14" height="12" font="font23" id="p4_t5" reading_order_no="8" segment_no="0" tag_type="figure">s i , x i</text>
<text top="90" left="317" width="5" height="12" font="font23" id="p4_t6" reading_order_no="6" segment_no="0" tag_type="figure">h i</text>
<text top="119" left="213" width="34" height="12" font="font23" id="p4_t7" reading_order_no="4" segment_no="0" tag_type="figure">x i =rand()</text>
<text top="59" left="343" width="0" height="10" font="font23" id="p4_t8" reading_order_no="7" segment_no="0" tag_type="figure">BARRIER</text>
<text top="81" left="142" width="17" height="10" font="font25" id="p4_t9" reading_order_no="1" segment_no="0" tag_type="figure">Peers</text>
<text top="96" left="126" width="50" height="10" font="font25" id="p4_t10" reading_order_no="2" segment_no="0" tag_type="figure">Local command</text>
<text top="109" left="126" width="59" height="10" font="font25" id="p4_t11" reading_order_no="3" segment_no="0" tag_type="figure">Broadcast protocol</text>
<text top="66" left="136" width="27" height="12" font="font26" id="p4_t12" reading_order_no="0" segment_no="0" tag_type="figure">Legend</text>
<text top="113" left="428" width="4" height="10" font="font27" id="p4_t13" reading_order_no="10" segment_no="0" tag_type="figure">∀</text>
<text top="140" left="108" width="397" height="10" font="font3" id="p4_t14" reading_order_no="13" segment_no="2" tag_type="text">Figure 1: An intuitive scheme of JPRNG from [ 73 ]. The || operation denotes concatenation, h ( x )</text>
<text top="152" left="108" width="396" height="9" font="font3" id="p4_t15" reading_order_no="14" segment_no="2" tag_type="text">denotes a cryptographic hash function. The hashed value includes the peer identifier i to protect from</text>
<text top="163" left="108" width="396" height="9" font="font13" id="p4_t16" reading_order_no="15" segment_no="2" tag_type="text">replay attacks (an attacker repeats someone else’s message) and a large random string s i to resist</text>
<text top="174" left="108" width="392" height="9" font="font13" id="p4_t17" reading_order_no="16" segment_no="2" tag_type="text">dictionary attacks (an attacker reverses the hash function using a dictionary of its possible values).</text>
<text top="190" left="108" width="12" height="9" font="font1" id="p4_t18" reading_order_no="17" segment_no="3" tag_type="title">2.3</text>
<text top="190" left="130" width="131" height="9" font="font1" id="p4_t19" reading_order_no="18" segment_no="3" tag_type="title">Security in distributed systems</text>
<text top="207" left="108" width="396" height="9" font="font3" id="p4_t20" reading_order_no="19" segment_no="4" tag_type="text">In this work, we circumvent the restrictions of existing Byzantine-tolerant techniques with secure</text>
<text top="218" left="108" width="396" height="9" font="font3" id="p4_t21" reading_order_no="20" segment_no="4" tag_type="text">multi-party computing (MPC). This is a family of cryptographic protocols that allow multiple parties</text>
<text top="229" left="108" width="396" height="9" font="font3" id="p4_t22" reading_order_no="21" segment_no="4" tag_type="text">to perform secure collective computations in the presence of malicious participants. While most MPC</text>
<text top="240" left="108" width="396" height="9" font="font3" id="p4_t23" reading_order_no="22" segment_no="4" tag_type="text">protocols are designed to preserve data privacy (which is irrelevant to us), there are two ideas from</text>
<text top="251" left="108" width="150" height="9" font="font3" id="p4_t24" reading_order_no="23" segment_no="4" tag_type="text">MPC that are crucial to our approach.</text>
<text top="267" left="108" width="396" height="9" font="font1" id="p4_t25" reading_order_no="24" segment_no="5" tag_type="text">Broadcast channels. Several key stages of our algorithm require peers to send a certain value to</text>
<text top="278" left="108" width="396" height="9" font="font3" id="p4_t26" reading_order_no="25" segment_no="5" tag_type="text">all their groupmates. Since we rely exclusively on peer-to-peer connections, a malicious peer could</text>
<text top="289" left="108" width="396" height="9" font="font3" id="p4_t27" reading_order_no="26" segment_no="5" tag_type="text">violate this process by deliberately sending different values to each participant. To protect against</text>
<text top="300" left="108" width="396" height="9" font="font3" id="p4_t28" reading_order_no="27" segment_no="5" tag_type="text">such an attack, distributed systems can employ secure broadcast protocols [ 74 , 75 ]. These protocols</text>
<text top="311" left="108" width="396" height="9" font="font3" id="p4_t29" reading_order_no="28" segment_no="5" tag_type="text">ensure that peers receive the same broadcasted value even if some of them are malicious. We provide</text>
<text top="321" left="108" width="295" height="9" font="font3" id="p4_t30" reading_order_no="29" segment_no="5" tag_type="text">more details on broadcast protocols and their guarantees in Appendix B.1 .</text>
<text top="338" left="108" width="397" height="9" font="font1" id="p4_t31" reading_order_no="30" segment_no="6" tag_type="text">Multi-party pseudorandom number generation. To ensure that peers compute correct gradients,</text>
<text top="349" left="108" width="396" height="9" font="font3" id="p4_t32" reading_order_no="31" segment_no="6" tag_type="text">our approach verifies a random subset of all computed gradients. However, such verifications would</text>
<text top="360" left="108" width="396" height="9" font="font3" id="p4_t33" reading_order_no="32" segment_no="6" tag_type="text">be ineffective if malicious peers could predict (or influence) whether or not they are going to be</text>
<text top="371" left="108" width="396" height="9" font="font3" id="p4_t34" reading_order_no="33" segment_no="6" tag_type="text">verified. Hence, we need a way to select who is going to be checked in such a way that malicious</text>
<text top="382" left="108" width="396" height="9" font="font3" id="p4_t35" reading_order_no="34" segment_no="6" tag_type="text">peers can neither predict nor influence the random draw. Fortunately, the MPC community has</text>
<text top="392" left="108" width="396" height="9" font="font3" id="p4_t36" reading_order_no="35" segment_no="6" tag_type="text">already proposed solutions for joint pseudorandom number generation (JPRNG) [ 73 ]. For example, a<a href="deeplearning_paper1.html#14">[</a></text>
<text top="403" left="108" width="396" height="9" font="font3" id="p4_t37" reading_order_no="36" segment_no="6" tag_type="text">distributed system may use JPRNG to choose a lottery winner. We provide an intuitive scheme of<a href="deeplearning_paper1.html#14">73</a></text>
<text top="414" left="108" width="387" height="9" font="font3" id="p4_t38" reading_order_no="37" segment_no="6" tag_type="text">JPRNG from [ 73 ] in Figure 1 and a more detailed overview of these techniques in Appendix B.2 .<a href="deeplearning_paper1.html#14">]. </a>The</text>
<text top="432" left="108" width="6" height="11" font="font6" id="p4_t39" reading_order_no="38" segment_no="7" tag_type="title">3</text>
<text top="432" left="126" width="40" height="11" font="font6" id="p4_t40" reading_order_no="39" segment_no="7" tag_type="title">Method</text>
<text top="449" left="108" width="396" height="9" font="font3" id="p4_t41" reading_order_no="40" segment_no="8" tag_type="text">We focus on secure distributed training on public datasets, where each peer can access the entire</text>
<text top="460" left="108" width="396" height="9" font="font3" id="p4_t42" reading_order_no="41" segment_no="8" tag_type="text">training data. In this scenario, multiple parties cooperate by combining their computational resources</text>
<text top="471" left="108" width="396" height="9" font="font3" id="p4_t43" reading_order_no="42" segment_no="8" tag_type="text">for a single large-scale training run. More precisely, we consider data-parallel training setup with</text>
<text top="482" left="108" width="398" height="9" font="font3" id="p4_t44" reading_order_no="43" segment_no="8" tag_type="text">All-Reduce SGD, as described previously in Section 2.1 . We describe our strategy in several stages,</text>
<text top="493" left="108" width="326" height="9" font="font3" id="p4_t45" reading_order_no="44" segment_no="8" tag_type="text">progressively moving from the theoretical setup to real-world distributed training:</text>
<text top="507" left="108" width="396" height="9" font="font3" id="p4_t46" reading_order_no="45" segment_no="9" tag_type="list">• Section 3.1 outlines our approach for B yzantine- T olerant A ll- R e d uce (BTARD) and analyze its</text>
<text top="517" left="116" width="321" height="9" font="font3" id="p4_t47" reading_order_no="46" segment_no="9" tag_type="list">communication overhead for training models with a large number of parameters.</text>
<text top="531" left="108" width="393" height="9" font="font3" id="p4_t48" reading_order_no="47" segment_no="10" tag_type="list">• In Section 3.2 , we formulate the underlying optimization problem and derive convergence bounds.</text>
<text top="544" left="108" width="391" height="9" font="font3" id="p4_t49" reading_order_no="48" segment_no="11" tag_type="list">• In Section 3.3 , we propose a decentralized system design for distributed training with zero trust.</text>
<text top="563" left="108" width="12" height="9" font="font1" id="p4_t50" reading_order_no="49" segment_no="12" tag_type="title">3.1</text>
<text top="563" left="130" width="132" height="9" font="font1" id="p4_t51" reading_order_no="50" segment_no="12" tag_type="title">Byzantine-Tolerant All-Reduce</text>
<text top="580" left="108" width="396" height="9" font="font3" id="p4_t52" reading_order_no="51" segment_no="13" tag_type="text">The core design principle behind our algorithm is that all types of Byzantine faults must have limited</text>
<text top="591" left="108" width="396" height="9" font="font3" id="p4_t53" reading_order_no="52" segment_no="13" tag_type="text">effect and a chance of being discovered. Together, these properties impose a limit on the total damage</text>
<text top="602" left="108" width="396" height="9" font="font3" id="p4_t54" reading_order_no="53" segment_no="13" tag_type="text">that an attacker can do over the entire training run. To control the magnitude of attacks over a single</text>
<text top="613" left="108" width="397" height="9" font="font3" id="p4_t55" reading_order_no="54" segment_no="13" tag_type="text">SGD step, we modify A LL -R EDUCE with a robust aggregation technique known as C ENTERED C LIP .</text>
<text top="624" left="108" width="396" height="9" font="font3" id="p4_t56" reading_order_no="55" segment_no="13" tag_type="text">Specifically, we use B UTTERFLY A LL -R EDUCE [ 76 ] and apply C ENTERED C LIP in parallel to each</text>
<text top="635" left="108" width="376" height="9" font="font3" id="p4_t57" reading_order_no="56" segment_no="13" tag_type="text">partition of the gradient vector. We refer to this procedure as B UTTERFLY C LIP (Algorithm 2 ).</text>
<text top="651" left="108" width="396" height="9" font="font3" id="p4_t58" reading_order_no="57" segment_no="14" tag_type="text">However, Byzantine peers can circumvent robust aggregation by attacking over many iterations. To</text>
<text top="662" left="108" width="396" height="9" font="font3" id="p4_t59" reading_order_no="58" segment_no="14" tag_type="text">protect against this, BTARD periodically chooses random peers to serve as validators . The validators</text>
<text top="673" left="108" width="396" height="9" font="font3" id="p4_t60" reading_order_no="59" segment_no="14" tag_type="text">must then recalculate the gradients of other peers and report any discrepancies. However, such tests</text>
<text top="682" left="108" width="396" height="11" font="font3" id="p4_t61" reading_order_no="60" segment_no="14" tag_type="text">are only effective if the attackers cannot predict when they will be validated 4 . To ensure that, we use</text>
<text top="695" left="108" width="306" height="9" font="font3" id="p4_t62" reading_order_no="61" segment_no="14" tag_type="text">the multi-party random number generation protocol described in Section 2.3 .</text>
<text top="712" left="121" width="375" height="10" font="font9" id="p4_t63" reading_order_no="62" segment_no="15" tag_type="footnote">4 Otherwise, Byzantine peers can simply defer the attack to subsequent steps when they are not validated.</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p4_t64" reading_order_no="63" segment_no="1" tag_type="text">4</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font29" size="10" family="CMEX10" color="#000000"/>
	<fontspec id="font30" size="7" family="CMR7" color="#000000"/>
	<fontspec id="font31" size="5" family="CMMI5" color="#000000"/>
	<fontspec id="font32" size="5" family="CMR5" color="#000000"/>
	<fontspec id="font33" size="7" family="NimbusRomNo9L-Regu" color="#000000"/>
	<fontspec id="font34" size="10" family="MSBM10" color="#000000"/>
<text top="75" left="108" width="396" height="9" font="font3" id="p5_t1" reading_order_no="0" segment_no="0" tag_type="text">After each training step, peers use JPRNG to choose p workers that will validate p other workers. As</text>
<text top="86" left="108" width="397" height="9" font="font3" id="p5_t2" reading_order_no="1" segment_no="0" tag_type="text">a result, malicious peers are unable to predict “safe” iterations before they commit to an attack. Thus,</text>
<text top="97" left="108" width="281" height="9" font="font3" id="p5_t3" reading_order_no="2" segment_no="0" tag_type="text">any persistent attacker will eventually be found by an honest validator.</text>
<text top="113" left="108" width="396" height="10" font="font3" id="p5_t4" reading_order_no="3" segment_no="1" tag_type="text">However, since validators can also be malicious, BTARD uses a separate accuse procedure to root</text>
<text top="124" left="108" width="396" height="9" font="font3" id="p5_t5" reading_order_no="4" segment_no="1" tag_type="text">out false reports. Before each averaging round, peers broadcast the hash of their gradients for that</text>
<text top="135" left="108" width="396" height="9" font="font3" id="p5_t6" reading_order_no="5" segment_no="1" tag_type="text">round. These values serve the same purpose as commitments in JPRNG. If peer i accuses peer j of</text>
<text top="146" left="108" width="396" height="9" font="font3" id="p5_t7" reading_order_no="6" segment_no="1" tag_type="text">modifying gradients, all other peers must also recalculate j ’s gradients. If the majority finds that j is</text>
<text top="157" left="108" width="207" height="9" font="font3" id="p5_t8" reading_order_no="7" segment_no="1" tag_type="text">innocent, the accusing peer i is banned instead [ 77 ].</text>
<text top="173" left="108" width="396" height="9" font="font3" id="p5_t9" reading_order_no="8" segment_no="2" tag_type="text">The resulting algorithm is resilient to attacks made through incorrect gradients. However, malicious</text>
<text top="184" left="108" width="396" height="9" font="font3" id="p5_t10" reading_order_no="9" segment_no="2" tag_type="text">peers may also harm training by violating the C ENTERED C LIP procedure for the portion of gradients</text>
<text top="195" left="108" width="396" height="9" font="font3" id="p5_t11" reading_order_no="10" segment_no="2" tag_type="text">they are aggregating. Fortunately, we can design a test through which peers can verify that the vector</text>
<text top="206" left="108" width="397" height="9" font="font3" id="p5_t12" reading_order_no="11" segment_no="2" tag_type="text">they received was indeed the output of C ENTERED C LIP . To formulate this test, we need to view</text>
<text top="218" left="108" width="254" height="12" font="font3" id="p5_t13" reading_order_no="12" segment_no="2" tag_type="text">C ENTERED C LIP as a fixed-point iteration for the equation: P n</text>
<text top="216" left="357" width="82" height="16" font="font18" id="p5_t14" reading_order_no="13" segment_no="2" tag_type="formula">i =1 ( ~ i − ~ x ) min n 1 ,</text>
<text top="219" left="452" width="4" height="6" font="font28" id="p5_t15" reading_order_no="14" segment_no="2" tag_type="formula">τ</text>
<text top="226" left="441" width="26" height="7" font="font4" id="p5_t16" reading_order_no="15" segment_no="2" tag_type="formula">k ~ i − ~ x k</text>
<text top="216" left="468" width="30" height="14" font="font29" id="p5_t17" reading_order_no="16" segment_no="2" tag_type="formula">o = 0 .</text>
<text top="241" left="108" width="396" height="9" font="font3" id="p5_t18" reading_order_no="17" segment_no="2" tag_type="text">To test if the vector ~ solves the above equation, workers must check if the sum of their actual</text>
<text top="251" left="107" width="70" height="14" font="font18" id="p5_t19" reading_order_no="18" segment_no="2" tag_type="formula">( ~ g i − ~ x ) min n 1 ,</text>
<text top="253" left="190" width="4" height="6" font="font28" id="p5_t20" reading_order_no="19" segment_no="2" tag_type="formula">τ</text>
<text top="260" left="179" width="26" height="7" font="font4" id="p5_t21" reading_order_no="20" segment_no="2" tag_type="formula">k ~ i − ~ x k</text>
<text top="251" left="206" width="298" height="13" font="font29" id="p5_t22" reading_order_no="21" segment_no="2" tag_type="text">o equals zero. However, doing so naively will result in O ( d · n ) extra</text>
<text top="270" left="108" width="396" height="9" font="font3" id="p5_t23" reading_order_no="22" segment_no="2" tag_type="text">communication, defeating the purpose our algorithm. Instead, workers use randomness from JPRNG</text>
<text top="280" left="108" width="396" height="10" font="font3" id="p5_t24" reading_order_no="23" segment_no="2" tag_type="text">to sample a random direction ~ in the space of model gradients. Each peer computes the inner product<a href="deeplearning_paper1.html#14">[</a></text>
<text top="291" left="108" width="101" height="14" font="font17" id="p5_t25" reading_order_no="24" segment_no="2" tag_type="formula">s i = D ~ z, ( ~ g i − ~ x ) min n 1 ,<a href="deeplearning_paper1.html#14">77</a></text>
<text top="293" left="223" width="4" height="6" font="font28" id="p5_t26" reading_order_no="25" segment_no="2" tag_type="formula">τ<a href="deeplearning_paper1.html#14">].</a></text>
<text top="300" left="212" width="26" height="7" font="font4" id="p5_t27" reading_order_no="26" segment_no="2" tag_type="formula">k ~ i − ~ x k</text>
<text top="291" left="239" width="265" height="13" font="font29" id="p5_t28" reading_order_no="27" segment_no="2" tag_type="text">oE and sends it through the broadcast channel (as described in</text>
<text top="317" left="108" width="164" height="9" font="font3" id="p5_t29" reading_order_no="28" segment_no="2" tag_type="text">Section 2.3 ). Finally, all peers verify that</text>
<text top="310" left="278" width="5" height="6" font="font28" id="p5_t30" reading_order_no="29" segment_no="2" tag_type="formula">n</text>
<text top="316" left="275" width="11" height="4" font="font29" id="p5_t31" reading_order_no="30" segment_no="2" tag_type="formula">P</text>
<text top="328" left="274" width="13" height="6" font="font28" id="p5_t32" reading_order_no="31" segment_no="2" tag_type="formula">i =1</text>
<text top="317" left="288" width="19" height="10" font="font17" id="p5_t33" reading_order_no="32" segment_no="2" tag_type="formula">s i =</text>
<text top="317" left="317" width="8" height="9" font="font17" id="p5_t34" reading_order_no="33" segment_no="2" tag_type="formula">~ z,</text>
<text top="310" left="341" width="5" height="6" font="font28" id="p5_t35" reading_order_no="34" segment_no="2" tag_type="formula">n</text>
<text top="316" left="338" width="11" height="4" font="font29" id="p5_t36" reading_order_no="35" segment_no="2" tag_type="formula">P</text>
<text top="328" left="337" width="12" height="6" font="font28" id="p5_t37" reading_order_no="36" segment_no="2" tag_type="formula">i =1</text>
<text top="312" left="350" width="68" height="15" font="font18" id="p5_t38" reading_order_no="37" segment_no="2" tag_type="formula">( ~ i − ~ x ) min n 1 ,</text>
<text top="315" left="431" width="4" height="6" font="font28" id="p5_t39" reading_order_no="38" segment_no="2" tag_type="formula">τ</text>
<text top="322" left="420" width="26" height="7" font="font4" id="p5_t40" reading_order_no="39" segment_no="2" tag_type="formula">k ~ i − ~ x k</text>
<text top="312" left="448" width="7" height="4" font="font29" id="p5_t41" reading_order_no="40" segment_no="2" tag_type="formula">o</text>
<text top="317" left="464" width="18" height="9" font="font18" id="p5_t42" reading_order_no="41" segment_no="2" tag_type="formula">= 0 .</text>
<text top="340" left="108" width="396" height="9" font="font3" id="p5_t43" reading_order_no="42" segment_no="3" tag_type="text">Similarly to our previous use of JPRNG, all aggregators must commit to their vectors ~ v before they</text>
<text top="351" left="108" width="396" height="9" font="font3" id="p5_t44" reading_order_no="43" segment_no="3" tag_type="text">learn ~ . This is to make sure that a malicious aggregator cannot modify the results in such a way</text>
<text top="362" left="108" width="396" height="9" font="font3" id="p5_t45" reading_order_no="44" segment_no="3" tag_type="text">that the difference would be orthogonal to ~ z . We review this and more complex attacks vectors in</text>
<text top="373" left="108" width="398" height="9" font="font3" id="p5_t46" reading_order_no="45" segment_no="3" tag_type="text">Appendix D . We combine all these procedures in Algorithm 1 (more formal version in Algorithm 6 ).</text>
<text top="393" left="108" width="198" height="9" font="font1" id="p5_t47" reading_order_no="46" segment_no="4" tag_type="title">Algorithm 1 BTARD-SGD for peer i (informal)</text>
<text top="408" left="108" width="183" height="11" font="font1" id="p5_t48" reading_order_no="47" segment_no="6" tag_type="code">Input: i rank, n peers, x 0 model, K steps, ξ 0</text>
<text top="410" left="287" width="25" height="11" font="font3" id="p5_t49" reading_order_no="48" segment_no="6" tag_type="code">i seed</text>
<text top="420" left="113" width="107" height="10" font="font1" id="p5_t50" reading_order_no="49" segment_no="6" tag_type="code">1: for k ∈ 0 , . . . , K − 1 do</text>
<text top="433" left="113" width="7" height="8" font="font9" id="p5_t51" reading_order_no="50" segment_no="6" tag_type="code">2:</text>
<text top="430" left="140" width="145" height="12" font="font17" id="p5_t52" reading_order_no="51" segment_no="6" tag_type="code">g k i = compute_gradients ( x k , ξ k i )</text>
<text top="445" left="113" width="7" height="8" font="font9" id="p5_t53" reading_order_no="52" segment_no="6" tag_type="code">3:</text>
<text top="442" left="140" width="105" height="12" font="font1" id="p5_t54" reading_order_no="53" segment_no="6" tag_type="code">broadcast hash ( g k i ) as c k i</text>
<text top="457" left="113" width="7" height="8" font="font9" id="p5_t55" reading_order_no="54" segment_no="6" tag_type="code">4:</text>
<text top="454" left="140" width="122" height="11" font="font18" id="p5_t56" reading_order_no="55" segment_no="6" tag_type="code">ˆ k = ButterflyClip ( i, n, g k</text>
<text top="456" left="258" width="9" height="11" font="font18" id="p5_t57" reading_order_no="56" segment_no="6" tag_type="code">i )</text>
<text top="469" left="113" width="7" height="8" font="font9" id="p5_t58" reading_order_no="57" segment_no="6" tag_type="code">5:</text>
<text top="466" left="140" width="62" height="11" font="font17" id="p5_t59" reading_order_no="58" segment_no="6" tag_type="code">r k = JPRNG ( ξ k</text>
<text top="468" left="197" width="10" height="11" font="font18" id="p5_t60" reading_order_no="59" segment_no="6" tag_type="code">i )</text>
<text top="481" left="113" width="7" height="8" font="font9" id="p5_t61" reading_order_no="60" segment_no="6" tag_type="code">6:</text>
<text top="478" left="140" width="109" height="11" font="font17" id="p5_t62" reading_order_no="61" segment_no="6" tag_type="code">z k = random_vector ( r k )</text>
<text top="492" left="113" width="7" height="8" font="font9" id="p5_t63" reading_order_no="62" segment_no="6" tag_type="code">7:</text>
<text top="490" left="140" width="78" height="10" font="font1" id="p5_t64" reading_order_no="63" segment_no="6" tag_type="code">for j ∈ 1 , . . . , n do</text>
<text top="506" left="113" width="7" height="8" font="font9" id="p5_t65" reading_order_no="64" segment_no="6" tag_type="code">8:</text>
<text top="503" left="155" width="11" height="11" font="font18" id="p5_t66" reading_order_no="65" segment_no="6" tag_type="code">∆ j</text>
<text top="501" left="163" width="105" height="15" font="font18" id="p5_t67" reading_order_no="66" segment_no="6" tag_type="code">i =( g k i [ j ] − ˆ k [ j ]) min n 1 ,</text>
<text top="503" left="294" width="4" height="6" font="font28" id="p5_t68" reading_order_no="67" segment_no="6" tag_type="code">τ</text>
<text top="510" left="270" width="51" height="9" font="font4" id="p5_t69" reading_order_no="68" segment_no="6" tag_type="code">k g k i [ j ] − ˆ g k [ j ] k 2</text>
<text top="501" left="323" width="7" height="4" font="font29" id="p5_t70" reading_order_no="69" segment_no="6" tag_type="code">o</text>
<text top="522" left="113" width="7" height="8" font="font9" id="p5_t71" reading_order_no="70" segment_no="6" tag_type="code">9:</text>
<text top="520" left="155" width="130" height="12" font="font3" id="p5_t72" reading_order_no="71" segment_no="6" tag_type="code">// g k [ j ] denotes a part from peer j</text>
<text top="536" left="108" width="11" height="8" font="font9" id="p5_t73" reading_order_no="72" segment_no="6" tag_type="code">10:</text>
<text top="533" left="155" width="81" height="12" font="font1" id="p5_t74" reading_order_no="73" segment_no="6" tag_type="code">broadcast h z k [ j ] , ∆ j</text>
<text top="533" left="233" width="37" height="13" font="font19" id="p5_t75" reading_order_no="74" segment_no="6" tag_type="code">i i as s j</text>
<text top="540" left="267" width="3" height="6" font="font28" id="p5_t76" reading_order_no="75" segment_no="6" tag_type="code">i</text>
<text top="547" left="108" width="11" height="8" font="font9" id="p5_t77" reading_order_no="76" segment_no="6" tag_type="code">11:</text>
<text top="546" left="155" width="73" height="10" font="font1" id="p5_t78" reading_order_no="77" segment_no="6" tag_type="code">for j ∈ 1 , ..., n do</text>
<text top="560" left="108" width="11" height="8" font="font9" id="p5_t79" reading_order_no="78" segment_no="6" tag_type="code">12:</text>
<text top="556" left="170" width="73" height="12" font="font3" id="p5_t80" reading_order_no="79" segment_no="6" tag_type="code">// peer i knows ∆ j</text>
<text top="559" left="240" width="82" height="11" font="font3" id="p5_t81" reading_order_no="80" segment_no="6" tag_type="code">i from CenteredClip</text>
<text top="573" left="108" width="11" height="8" font="font9" id="p5_t82" reading_order_no="81" segment_no="6" tag_type="code">13:</text>
<text top="569" left="170" width="16" height="12" font="font1" id="p5_t83" reading_order_no="82" segment_no="6" tag_type="code">if s j</text>
<text top="569" left="183" width="57" height="14" font="font19" id="p5_t84" reading_order_no="83" segment_no="6" tag_type="code">i 6 = h z k [ j ] , ∆ j</text>
<text top="571" left="237" width="30" height="12" font="font19" id="p5_t85" reading_order_no="84" segment_no="6" tag_type="code">i i then</text>
<text top="586" left="108" width="11" height="8" font="font9" id="p5_t86" reading_order_no="85" segment_no="6" tag_type="code">14:</text>
<text top="582" left="185" width="62" height="12" font="font3" id="p5_t87" reading_order_no="86" segment_no="6" tag_type="code">A CCUSE (i, j, s j</text>
<text top="585" left="244" width="44" height="11" font="font3" id="p5_t88" reading_order_no="87" segment_no="6" tag_type="code">i is wrong)</text>
<text top="600" left="108" width="11" height="8" font="font9" id="p5_t89" reading_order_no="88" segment_no="6" tag_type="code">15:</text>
<text top="596" left="155" width="24" height="12" font="font1" id="p5_t90" reading_order_no="89" segment_no="6" tag_type="code">if P n</text>
<text top="596" left="174" width="15" height="14" font="font17" id="p5_t91" reading_order_no="90" segment_no="6" tag_type="code">i s j</text>
<text top="598" left="186" width="44" height="12" font="font19" id="p5_t92" reading_order_no="91" segment_no="6" tag_type="code">i 6 = 0 then</text>
<text top="613" left="108" width="11" height="8" font="font9" id="p5_t93" reading_order_no="92" segment_no="6" tag_type="code">16:</text>
<text top="610" left="170" width="139" height="13" font="font3" id="p5_t94" reading_order_no="93" segment_no="6" tag_type="code">// peer j verified that s j · are correct</text>
<text top="627" left="108" width="11" height="8" font="font9" id="p5_t95" reading_order_no="94" segment_no="6" tag_type="code">17:</text>
<text top="624" left="170" width="115" height="11" font="font3" id="p5_t96" reading_order_no="95" segment_no="6" tag_type="code">A CCUSE (i, j, g k [ j ] is wrong)</text>
<text top="640" left="108" width="11" height="8" font="font9" id="p5_t97" reading_order_no="96" segment_no="6" tag_type="code">18:</text>
<text top="638" left="140" width="109" height="10" font="font17" id="p5_t98" reading_order_no="97" segment_no="6" tag_type="code">x k +1 = sgd_step ( x k , ˆ k )</text>
<text top="653" left="108" width="11" height="8" font="font9" id="p5_t99" reading_order_no="98" segment_no="6" tag_type="code">19:</text>
<text top="650" left="140" width="19" height="11" font="font17" id="p5_t100" reading_order_no="99" segment_no="6" tag_type="code">ξ k +1</text>
<text top="657" left="144" width="3" height="6" font="font28" id="p5_t101" reading_order_no="100" segment_no="6" tag_type="code">i</text>
<text top="650" left="162" width="58" height="11" font="font18" id="p5_t102" reading_order_no="101" segment_no="6" tag_type="code">= hash ( r k || i )</text>
<text top="665" left="108" width="11" height="8" font="font9" id="p5_t103" reading_order_no="102" segment_no="6" tag_type="code">20:</text>
<text top="662" left="140" width="152" height="11" font="font1" id="p5_t104" reading_order_no="103" segment_no="6" tag_type="code">if i ∈ chosen_validators ( r k ) then</text>
<text top="677" left="108" width="11" height="8" font="font9" id="p5_t105" reading_order_no="104" segment_no="6" tag_type="code">21:</text>
<text top="674" left="155" width="111" height="11" font="font17" id="p5_t106" reading_order_no="105" segment_no="6" tag_type="code">j = chosen_target ( r k , i )</text>
<text top="689" left="108" width="11" height="8" font="font9" id="p5_t107" reading_order_no="106" segment_no="6" tag_type="code">22:</text>
<text top="686" left="155" width="104" height="11" font="font5" id="p5_t108" reading_order_no="107" segment_no="6" tag_type="code">validate_peer ( j, x k , ξ k</text>
<text top="686" left="255" width="18" height="13" font="font17" id="p5_t109" reading_order_no="108" segment_no="6" tag_type="code">j , c k</text>
<text top="686" left="269" width="18" height="13" font="font17" id="p5_t110" reading_order_no="109" segment_no="6" tag_type="code">j , h *</text>
<text top="686" left="284" width="16" height="13" font="font17" id="p5_t111" reading_order_no="110" segment_no="6" tag_type="code">j , s *</text>
<text top="688" left="297" width="8" height="11" font="font18" id="p5_t112" reading_order_no="111" segment_no="6" tag_type="code">j )</text>
<text top="701" left="108" width="59" height="11" font="font1" id="p5_t113" reading_order_no="112" segment_no="6" tag_type="code">23: return x K</text>
<text top="393" left="339" width="166" height="10" font="font1" id="p5_t114" reading_order_no="113" segment_no="5" tag_type="title">Algorithm 2 B UTTERFLY C LIP for peer i</text>
<text top="409" left="340" width="161" height="12" font="font1" id="p5_t115" reading_order_no="114" segment_no="7" tag_type="code">Input: i rank, n peers, g i ∈ R d gradients</text>
<text top="421" left="345" width="133" height="10" font="font17" id="p5_t116" reading_order_no="115" segment_no="7" tag_type="code">1: g i [1] , ..., g i [ n ] = split ( g i , n )</text>
<text top="434" left="345" width="68" height="9" font="font1" id="p5_t117" reading_order_no="116" segment_no="7" tag_type="code">2: broadcast ∀ j,</text>
<text top="432" left="421" width="76" height="12" font="font5" id="p5_t118" reading_order_no="117" segment_no="7" tag_type="code">hash ( g i [ j ]) as h j</text>
<text top="439" left="494" width="3" height="6" font="font28" id="p5_t119" reading_order_no="118" segment_no="7" tag_type="code">i</text>
<text top="445" left="345" width="120" height="11" font="font1" id="p5_t120" reading_order_no="119" segment_no="7" tag_type="code">3: scatter ∀ j, g i [ j ] → peer j</text>
<text top="458" left="345" width="153" height="9" font="font1" id="p5_t121" reading_order_no="120" segment_no="7" tag_type="code">4: gather g 1 [ i ] , ..., g n [ i ] from peers</text>
<text top="467" left="345" width="127" height="12" font="font1" id="p5_t122" reading_order_no="121" segment_no="7" tag_type="code">5: verify ∀ j, hash ( g j [ i ]) = h i j</text>
<text top="481" left="345" width="158" height="10" font="font18" id="p5_t123" reading_order_no="122" segment_no="7" tag_type="code">6: ˆ i = CenteredClip ( g 1 [ i ] , ..., g n [ i ])</text>
<text top="491" left="345" width="68" height="10" font="font1" id="p5_t124" reading_order_no="123" segment_no="7" tag_type="code">7: broadcast ∀ j,</text>
<text top="491" left="421" width="47" height="12" font="font18" id="p5_t125" reading_order_no="124" segment_no="7" tag_type="code">ˆ i → peer j</text>
<text top="504" left="345" width="136" height="9" font="font1" id="p5_t126" reading_order_no="125" segment_no="7" tag_type="code">8: gather ˆ 1 , ..., ˆ n from peers</text>
<text top="515" left="345" width="112" height="9" font="font1" id="p5_t127" reading_order_no="126" segment_no="7" tag_type="code">9: return merge (ˆ g 1 , ..., ˆ n )</text>
<text top="542" left="339" width="153" height="9" font="font1" id="p5_t128" reading_order_no="127" segment_no="8" tag_type="title">Algorithm 3 A CCUSE (i, j, allegation)</text>
<text top="558" left="340" width="167" height="9" font="font1" id="p5_t129" reading_order_no="128" segment_no="9" tag_type="code">Input: i accuser, j target, n peers, k step,</text>
<text top="569" left="357" width="97" height="9" font="font3" id="p5_t130" reading_order_no="129" segment_no="9" tag_type="code">signed by i ’s private key</text>
<text top="578" left="345" width="156" height="12" font="font17" id="p5_t131" reading_order_no="130" segment_no="9" tag_type="code">1: g k j = compute_gradients ( x k , ξ k j )</text>
<text top="591" left="345" width="54" height="11" font="font1" id="p5_t132" reading_order_no="131" segment_no="9" tag_type="code">2: if hash ( g k</text>
<text top="591" left="395" width="25" height="13" font="font18" id="p5_t133" reading_order_no="132" segment_no="9" tag_type="code">j ) 6 = c k</text>
<text top="591" left="416" width="53" height="13" font="font1" id="p5_t134" reading_order_no="133" segment_no="9" tag_type="code">j or hash ( g k<a href="deeplearning_paper1.html#4">2.3</a></text>
<text top="591" left="465" width="33" height="13" font="font18" id="p5_t135" reading_order_no="134" segment_no="9" tag_type="code">j [ · ]) 6 = h ·<a href="deeplearning_paper1.html#4">). </a>Finally, all peers verify that</text>
<text top="598" left="496" width="3" height="6" font="font28" id="p5_t136" reading_order_no="135" segment_no="9" tag_type="code">j</text>
<text top="608" left="345" width="7" height="8" font="font9" id="p5_t137" reading_order_no="136" segment_no="9" tag_type="code">3:</text>
<text top="604" left="371" width="95" height="14" font="font1" id="p5_t138" reading_order_no="137" segment_no="9" tag_type="code">or h ∆ l j , z k i6 = s l j or P n</text>
<text top="605" left="461" width="22" height="13" font="font17" id="p5_t139" reading_order_no="138" segment_no="9" tag_type="code">l =1 s j</text>
<text top="607" left="480" width="17" height="11" font="font19" id="p5_t140" reading_order_no="139" segment_no="9" tag_type="code">l 6 =0</text>
<text top="618" left="357" width="19" height="9" font="font1" id="p5_t141" reading_order_no="140" segment_no="9" tag_type="code">then</text>
<text top="630" left="345" width="7" height="8" font="font9" id="p5_t142" reading_order_no="141" segment_no="9" tag_type="code">4:</text>
<text top="629" left="372" width="64" height="11" font="font1" id="p5_t143" reading_order_no="142" segment_no="9" tag_type="code">vote ban peer j</text>
<text top="629" left="448" width="52" height="9" font="font3" id="p5_t144" reading_order_no="143" segment_no="9" tag_type="code">// and any . . .</text>
<text top="641" left="345" width="7" height="8" font="font9" id="p5_t145" reading_order_no="144" segment_no="9" tag_type="code">5:</text>
<text top="640" left="372" width="136" height="11" font="font3" id="p5_t146" reading_order_no="145" segment_no="9" tag_type="code">// peer l that covered up for peer j</text>
<text top="652" left="345" width="27" height="9" font="font1" id="p5_t147" reading_order_no="146" segment_no="9" tag_type="code">6: else</text>
<text top="664" left="345" width="7" height="8" font="font9" id="p5_t148" reading_order_no="147" segment_no="9" tag_type="code">7:</text>
<text top="663" left="372" width="64" height="11" font="font1" id="p5_t149" reading_order_no="148" segment_no="9" tag_type="code">vote ban peer i</text>
<text top="674" left="345" width="84" height="12" font="font1" id="p5_t150" reading_order_no="149" segment_no="9" tag_type="code">8: for ˆ j = 1 . . . n do</text>
<text top="688" left="345" width="7" height="8" font="font9" id="p5_t151" reading_order_no="150" segment_no="9" tag_type="code">9:</text>
<text top="687" left="372" width="118" height="11" font="font1" id="p5_t152" reading_order_no="151" segment_no="9" tag_type="code">if votes ( peer ˆ j ) ≥ n/ 2 then</text>
<text top="699" left="340" width="11" height="8" font="font9" id="p5_t153" reading_order_no="152" segment_no="9" tag_type="code">10:</text>
<text top="699" left="386" width="46" height="10" font="font5" id="p5_t154" reading_order_no="153" segment_no="9" tag_type="code">BAN peer ˆ j</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p5_t155" reading_order_no="154" segment_no="10" tag_type="text">5</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font35" size="7" family="MSBM7" color="#000000"/>
	<fontspec id="font36" size="10" family="NimbusRomNo9L-ReguItal" color="#0000ff"/>
<text top="75" left="108" width="12" height="9" font="font1" id="p6_t1" reading_order_no="0" segment_no="0" tag_type="title">3.2</text>
<text top="75" left="130" width="91" height="9" font="font1" id="p6_t2" reading_order_no="1" segment_no="0" tag_type="title">Convergence analysis</text>
<text top="95" left="108" width="396" height="9" font="font3" id="p6_t3" reading_order_no="2" segment_no="1" tag_type="text">For convenience, let us paraphrase our task from the perspective of optimization theory. Consider the</text>
<text top="106" left="108" width="361" height="12" font="font3" id="p6_t4" reading_order_no="3" segment_no="1" tag_type="text">following expectation minimization problem: min x ∈ Q ⊆ R d { f ( x ) := E ξ ∼D [ f ( x, ξ )] } , (1)</text>
<text top="119" left="108" width="396" height="12" font="font3" id="p6_t5" reading_order_no="4" segment_no="2" tag_type="text">where the objective function f is smooth and uniformly lower bounded, Q ⊆ R d is a closed convex</text>
<text top="131" left="108" width="396" height="10" font="font3" id="p6_t6" reading_order_no="5" segment_no="2" tag_type="text">set of admissible parameters and ξ is the source of stochasticity, such as minibatch indices. We</text>
<text top="142" left="108" width="396" height="9" font="font3" id="p6_t7" reading_order_no="6" segment_no="2" tag_type="text">assume that the problem ( 1 ) can be solved in a distributed manner, i.e., one can use n workers</text>
<text top="153" left="108" width="396" height="9" font="font3" id="p6_t8" reading_order_no="7" segment_no="2" tag_type="text">performing (mini-batched) stochastic gradients calculations in parallel and communicating according</text>
<text top="164" left="108" width="358" height="9" font="font3" id="p6_t9" reading_order_no="8" segment_no="2" tag_type="text">to some protocol. For simplicity, we will define the set of workers as [ n ] := { 1 , 2 , . . . , n } .</text>
<text top="181" left="108" width="396" height="9" font="font3" id="p6_t10" reading_order_no="9" segment_no="3" tag_type="text">Furthermore, we assume that some workers can be malicious, i.e., they can deviate arbitrarily</text>
<text top="192" left="108" width="396" height="9" font="font3" id="p6_t11" reading_order_no="10" segment_no="3" tag_type="text">from the predefined algorithm: send arbitrary vectors instead of stochastic gradients or violate the</text>
<text top="202" left="108" width="396" height="10" font="font3" id="p6_t12" reading_order_no="11" segment_no="3" tag_type="text">communication protocol. Such workers are usually called Byzantine nodes or just Byzantines . We</text>
<text top="213" left="108" width="396" height="9" font="font3" id="p6_t13" reading_order_no="12" segment_no="3" tag_type="text">define the set of all “good” workers as G and the set of Byzantine workers as B : [ n ] = G t B . We</text>
<text top="224" left="108" width="381" height="9" font="font3" id="p6_t14" reading_order_no="13" segment_no="3" tag_type="text">further assume that strictly less than half nodes are Byzantines: b = |B| ≤ δn , where δ ∈ [0 , 1 / 2 ) .</text>
<text top="241" left="108" width="396" height="9" font="font3" id="p6_t15" reading_order_no="14" segment_no="4" tag_type="text">There are many ways for Byzantines to affect the training. To simplify further analysis, we group</text>
<text top="250" left="108" width="396" height="12" font="font3" id="p6_t16" reading_order_no="15" segment_no="4" tag_type="text">these strategies into 4 broad categories: (i) gradient attacks , where Byzantines modify their g k i , but</text>
<text top="262" left="108" width="396" height="10" font="font3" id="p6_t17" reading_order_no="16" segment_no="4" tag_type="text">otherwise behave normally; (ii) aggregation attacks , where Byzantine aggregator returns wrong ˆ i</text>
<text top="273" left="108" width="396" height="10" font="font3" id="p6_t18" reading_order_no="17" segment_no="4" tag_type="text">and relies on others to cover it up by misreporting s i ; (iii) reputation attacks such as frame-up or</text>
<text top="284" left="108" width="396" height="9" font="font3" id="p6_t19" reading_order_no="18" segment_no="4" tag_type="text">slander via false A CCUSE ( i, j, · ) ; and finally, (iv) protocol errors are any other deviations from the</text>
<text top="295" left="108" width="397" height="9" font="font3" id="p6_t20" reading_order_no="19" segment_no="4" tag_type="text">steps of Algorithm 1 , e.g. refusing to send any data. We elaborate on each attack type in Appendix D .</text>
<text top="312" left="108" width="396" height="9" font="font3" id="p6_t21" reading_order_no="20" segment_no="5" tag_type="text">For the purpose of this analysis, the latter two attacks can be repelled with an extra policy that</text>
<text top="323" left="108" width="396" height="9" font="font3" id="p6_t22" reading_order_no="21" segment_no="5" tag_type="text">allows an active worker to eliminate any other worker at the cost of also being banned. Whenever a</text>
<text top="333" left="108" width="396" height="11" font="font3" id="p6_t23" reading_order_no="22" segment_no="5" tag_type="text">benign peer i encounters a protocol error from another peer j , it invokes that policy to remove both</text>
<text top="344" left="108" width="396" height="11" font="font3" id="p6_t24" reading_order_no="23" segment_no="5" tag_type="text">himself and peer j from training. The design of this policy ensures that every invocation, whether by</text>
<text top="355" left="108" width="396" height="9" font="font3" id="p6_t25" reading_order_no="24" segment_no="5" tag_type="text">normal or Byzantine peers, eliminates at least 1 Byzantine peer and at most 1 benign one. Thus, if</text>
<text top="366" left="108" width="397" height="9" font="font3" id="p6_t26" reading_order_no="25" segment_no="5" tag_type="text">a Byzantine minority uses this against benign peers, this will only decrease their relative numbers :</text>
<text top="376" left="107" width="383" height="10" font="font18" id="p6_t27" reading_order_no="26" segment_no="5" tag_type="text">( δn − 1) / ( n − 2) &lt; δ . This leaves us with two attacks that both target the aggregated gradients.</text>
<text top="393" left="108" width="396" height="12" font="font3" id="p6_t28" reading_order_no="27" segment_no="6" tag_type="text">We provide convergence guarantees for variants of BTARD-SGD with Q = R d under different sets</text>
<text top="405" left="108" width="391" height="9" font="font3" id="p6_t29" reading_order_no="28" segment_no="6" tag_type="text">of assumptions about the function f and its stochastic gradients. Our first two setups assume, that:</text>
<text top="416" left="108" width="396" height="10" font="font1" id="p6_t30" reading_order_no="29" segment_no="6" tag_type="text">Assumption 3.1. There exist such constant σ ≥ 0 , s 0 ∈ [ d ] that for any set of indices S =</text>
<text top="427" left="107" width="340" height="10" font="font18" id="p6_t31" reading_order_no="30" segment_no="6" tag_type="text">( i 1 , . . . , i d ) , 1 ≤ i 1 &lt; i 2 &lt; . . . &lt; i s ≤ d , s ≥ s 0 stochastic gradient ∇ f ( x, ξ ) satisfy</text>
<text top="455" left="123" width="23" height="9" font="font13" id="p6_t32" reading_order_no="31" segment_no="7" tag_type="formula">either</text>
<text top="455" left="159" width="93" height="11" font="font34" id="p6_t33" reading_order_no="32" segment_no="7" tag_type="formula">E [ ∇ f ( x, ξ )] = ∇ f ( x ) ,</text>
<text top="458" left="264" width="7" height="8" font="font34" id="p6_t34" reading_order_no="33" segment_no="7" tag_type="formula">E</text>
<text top="451" left="272" width="133" height="14" font="font29" id="p6_t35" reading_order_no="34" segment_no="7" tag_type="formula">h ∇ [ S ] f ( x, ξ ) − ∇ [ S ] f ( x ) 4 i ≤</text>
<text top="447" left="416" width="15" height="10" font="font17" id="p6_t36" reading_order_no="35" segment_no="7" tag_type="formula">sσ 2</text>
<text top="462" left="421" width="5" height="9" font="font17" id="p6_t37" reading_order_no="36" segment_no="7" tag_type="formula">d</text>
<text top="445" left="440" width="4" height="6" font="font30" id="p6_t38" reading_order_no="37" segment_no="7" tag_type="formula">2</text>
<text top="455" left="446" width="3" height="9" font="font17" id="p6_t39" reading_order_no="38" segment_no="7" tag_type="formula">,<a href="deeplearning_paper1.html#6">(</a></text>
<text top="455" left="464" width="40" height="9" font="font3" id="p6_t40" reading_order_no="39" segment_no="7" tag_type="text">(Option I)<a href="deeplearning_paper1.html#6">1</a></text>
<text top="491" left="139" width="9" height="9" font="font13" id="p6_t41" reading_order_no="40" segment_no="8" tag_type="formula">or<a href="deeplearning_paper1.html#6">) </a>can be solved in a distributed manner, i.e., one can use</text>
<text top="490" left="161" width="93" height="11" font="font34" id="p6_t42" reading_order_no="41" segment_no="8" tag_type="formula">E [ ∇ f ( x, ξ )] = ∇ f ( x ) ,</text>
<text top="493" left="265" width="7" height="8" font="font34" id="p6_t43" reading_order_no="42" segment_no="8" tag_type="formula">E</text>
<text top="482" left="273" width="152" height="18" font="font29" id="p6_t44" reading_order_no="43" segment_no="8" tag_type="formula">h ∇ [ S ] f ( x, ξ ) − ∇ [ S ] f ( x ) 2 i ≤ sσ 2</text>
<text top="490" left="415" width="15" height="16" font="font17" id="p6_t45" reading_order_no="44" segment_no="8" tag_type="formula">d ,</text>
<text top="490" left="461" width="43" height="9" font="font3" id="p6_t46" reading_order_no="45" segment_no="8" tag_type="text">(Option II)</text>
<text top="509" left="108" width="396" height="12" font="font13" id="p6_t47" reading_order_no="46" segment_no="9" tag_type="text">where ∇ [ S ] f ( x, ξ ) = ( ∇ i 1 f ( x, ξ ) , . . . , ∇ i s f ( x, ξ )) &gt; , ∇ [ S ] f ( x ) = ( ∇ i 1 f ( x ) , . . . , ∇ i s f ( x )) &gt; , and</text>
<text top="523" left="108" width="301" height="10" font="font19" id="p6_t48" reading_order_no="47" segment_no="9" tag_type="text">∇ f j ( x, ξ ) , ∇ j f ( x ) are j -th components of ∇ f ( x, ξ ) and f ( x ) respectively.</text>
<text top="544" left="108" width="396" height="9" font="font3" id="p6_t49" reading_order_no="48" segment_no="10" tag_type="text">Here, ( Option II ) is an extension of the classical uniformly bounded variance assumption [ 78 , 79 , 80 ]</text>
<text top="555" left="108" width="396" height="9" font="font3" id="p6_t50" reading_order_no="49" segment_no="10" tag_type="text">ensuring that the noise in all subvectors of large enough dimension has the variance dependent on the</text>
<text top="566" left="108" width="396" height="9" font="font3" id="p6_t51" reading_order_no="50" segment_no="10" tag_type="text">ratio between the dimension of the subvector s and the dimension of the full vector d . ( Option I ) is</text>
<text top="577" left="108" width="396" height="9" font="font3" id="p6_t52" reading_order_no="51" segment_no="10" tag_type="text">more restrictive but under this assumption we obtain better convergence results. In order to further</text>
<text top="588" left="108" width="396" height="9" font="font3" id="p6_t53" reading_order_no="52" segment_no="10" tag_type="text">reduce overhead from Verification 3 in the full Algorithm 6 , we also assume that the stochastic</text>
<text top="599" left="108" width="359" height="9" font="font3" id="p6_t54" reading_order_no="53" segment_no="10" tag_type="text">gradients distributions have sub-quadratically decreasing tails (see details in Appendix F ).</text>
<text top="609" left="108" width="396" height="10" font="font1" id="p6_t55" reading_order_no="54" segment_no="11" tag_type="text">Assumption 3.2. There exist such constant σ ≥ 0 , s 0 ∈ [ d ] that for any set of indices S =</text>
<text top="620" left="107" width="340" height="10" font="font18" id="p6_t56" reading_order_no="55" segment_no="11" tag_type="text">( i 1 , . . . , i d ) , 1 ≤ i 1 &lt; i 2 &lt; . . . &lt; i s ≤ d , s ≥ s 0 stochastic gradient ∇ f ( x, ξ ) satisfy</text>
<text top="652" left="171" width="6" height="8" font="font34" id="p6_t57" reading_order_no="56" segment_no="12" tag_type="formula">P</text>
<text top="636" left="179" width="9" height="4" font="font29" id="p6_t58" reading_order_no="57" segment_no="12" tag_type="formula"></text>
<text top="645" left="179" width="9" height="4" font="font29" id="p6_t59" reading_order_no="58" segment_no="12" tag_type="formula"></text>
<text top="663" left="179" width="9" height="4" font="font29" id="p6_t60" reading_order_no="59" segment_no="12" tag_type="formula"></text>
<text top="643" left="195" width="5" height="9" font="font18" id="p6_t61" reading_order_no="60" segment_no="12" tag_type="formula">1</text>
<text top="657" left="195" width="5" height="9" font="font17" id="p6_t62" reading_order_no="61" segment_no="12" tag_type="formula">k</text>
<text top="640" left="208" width="4" height="6" font="font28" id="p6_t63" reading_order_no="62" segment_no="12" tag_type="formula">k</text>
<text top="647" left="203" width="14" height="4" font="font29" id="p6_t64" reading_order_no="63" segment_no="12" tag_type="formula">X</text>
<text top="664" left="204" width="12" height="6" font="font28" id="p6_t65" reading_order_no="64" segment_no="12" tag_type="formula">i =1</text>
<text top="650" left="219" width="100" height="10" font="font19" id="p6_t66" reading_order_no="65" segment_no="12" tag_type="formula">∇ [ S ] f ( x, ξ i ) − ∇ [ S ] f ( x )</text>
<text top="636" left="325" width="4" height="6" font="font30" id="p6_t67" reading_order_no="66" segment_no="12" tag_type="formula">2</text>
<text top="642" left="332" width="30" height="17" font="font17" id="p6_t68" reading_order_no="67" segment_no="12" tag_type="formula">&gt; tsσ 2</text>
<text top="657" left="348" width="11" height="9" font="font17" id="p6_t69" reading_order_no="68" segment_no="12" tag_type="formula">kd</text>
<text top="636" left="364" width="9" height="4" font="font29" id="p6_t70" reading_order_no="69" segment_no="12" tag_type="formula"></text>
<text top="645" left="364" width="9" height="4" font="font29" id="p6_t71" reading_order_no="70" segment_no="12" tag_type="formula"></text>
<text top="663" left="364" width="9" height="4" font="font29" id="p6_t72" reading_order_no="71" segment_no="12" tag_type="formula"></text>
<text top="643" left="375" width="19" height="16" font="font17" id="p6_t73" reading_order_no="72" segment_no="12" tag_type="formula">&lt; 1</text>
<text top="650" left="387" width="12" height="16" font="font17" id="p6_t74" reading_order_no="73" segment_no="12" tag_type="formula">t 2 ,</text>
<text top="650" left="411" width="30" height="9" font="font19" id="p6_t75" reading_order_no="74" segment_no="12" tag_type="formula">∀ t &gt; 0 ,</text>
<text top="650" left="492" width="12" height="9" font="font3" id="p6_t76" reading_order_no="75" segment_no="12" tag_type="text">(2)</text>
<text top="681" left="108" width="370" height="10" font="font13" id="p6_t77" reading_order_no="76" segment_no="13" tag_type="text">where ξ 1 , . . . , ξ k are i.i.d. samples from D , and ∇ [ S ] f ( x, ξ ) , ∇ [ S ] f ( x ) are defined in As. 3.1 .</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p6_t78" reading_order_no="77" segment_no="14" tag_type="text">Under these assumptions, we derive the following convergence bounds for strongly convex, generally</text>
<text top="713" left="108" width="397" height="9" font="font3" id="p6_t79" reading_order_no="78" segment_no="14" tag_type="text">convex, and non-convex objectives (see Table 1 ). The respective proofs are deferred to Appendix F.3 .</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p6_t80" reading_order_no="79" segment_no="15" tag_type="text">6</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font37" size="9" family="CMEX9" color="#000000"/>
	<fontspec id="font38" size="9" family="CMMI9" color="#000000"/>
	<fontspec id="font39" size="9" family="MSBM10" color="#000000"/>
	<fontspec id="font40" size="9" family="CMR9" color="#000000"/>
	<fontspec id="font41" size="9" family="CMSY9" color="#000000"/>
	<fontspec id="font42" size="6" family="CMR6" color="#000000"/>
	<fontspec id="font43" size="9" family="NimbusRomNo9L-Regu" color="#0000ff"/>
	<fontspec id="font44" size="6" family="CMMI6" color="#000000"/>
	<fontspec id="font45" size="5" family="CMSY5" color="#000000"/>
<text top="80" left="108" width="396" height="9" font="font3" id="p7_t1" reading_order_no="0" segment_no="0" tag_type="text">Table 1: Summary of complexity bounds for BTARD-SGD in different scenarios. By complexity we mean</text>
<text top="89" left="108" width="396" height="11" font="font9" id="p7_t2" reading_order_no="1" segment_no="0" tag_type="text">the number of iterations sufficient to find such point b x that E [ k∇ f ( b x ) k 2 ] ≤ ε 2 for non-convex problems and</text>
<text top="98" left="108" width="397" height="12" font="font39" id="p7_t3" reading_order_no="2" segment_no="0" tag_type="text">E [ f ( b x ) − f ( x ∗ )] ≤ ε for convex and µ -strongly convex problems (see Def. F.2 ) with x ∗ being the solution.</text>
<text top="109" left="108" width="396" height="10" font="font9" id="p7_t4" reading_order_no="3" segment_no="0" tag_type="text">Notation: “known |B a k | ” = the exact number of attacking Byzantine workers at iteration k is known to each</text>
<text top="119" left="108" width="396" height="10" font="font9" id="p7_t5" reading_order_no="4" segment_no="0" tag_type="text">participant, L = smoothness constant (see Def. F.1 ), ∆ 0 = f ( x 0 ) − f ∗ , f ∗ = uniform lower bound for f , σ 2 =</text>
<text top="130" left="108" width="397" height="8" font="font9" id="p7_t6" reading_order_no="5" segment_no="0" tag_type="text">variance parameter from As. 3.1 , n = the initial number of peers, b = the initial number of Byzantine workers,</text>
<text top="138" left="108" width="268" height="10" font="font38" id="p7_t7" reading_order_no="6" segment_no="0" tag_type="text">δ = b / n , m = number of peers checked at each iteration, R 0 = k x 0 − x ∗ k .</text>
<text top="167" left="114" width="47" height="8" font="font9" id="p7_t8" reading_order_no="7" segment_no="1" tag_type="table">Assumptions</text>
<text top="161" left="329" width="53" height="8" font="font9" id="p7_t9" reading_order_no="8" segment_no="1" tag_type="table">Convexity of f</text>
<text top="178" left="230" width="44" height="8" font="font9" id="p7_t10" reading_order_no="9" segment_no="1" tag_type="table">Non-convex</text>
<text top="178" left="336" width="27" height="8" font="font9" id="p7_t11" reading_order_no="10" segment_no="1" tag_type="table">Convex</text>
<text top="178" left="424" width="58" height="8" font="font9" id="p7_t12" reading_order_no="11" segment_no="1" tag_type="table">Strongly convex</text>
<text top="195" left="114" width="64" height="8" font="font9" id="p7_t13" reading_order_no="12" segment_no="1" tag_type="table">As. 3.1 ( Option I )</text>
<text top="198" left="214" width="48" height="14" font="font40" id="p7_t14" reading_order_no="13" segment_no="1" tag_type="table">L ∆ 0 ε 2 + L ∆ 0 σ 2</text>
<text top="206" left="245" width="12" height="6" font="font44" id="p7_t15" reading_order_no="14" segment_no="1" tag_type="table">nε 4</text>
<text top="198" left="265" width="24" height="12" font="font40" id="p7_t16" reading_order_no="15" segment_no="1" tag_type="table">+ nδσ 2</text>
<text top="206" left="275" width="13" height="6" font="font44" id="p7_t17" reading_order_no="16" segment_no="1" tag_type="table">mε 2</text>
<text top="195" left="309" width="81" height="17" font="font40" id="p7_t18" reading_order_no="17" segment_no="1" tag_type="table">LR 2 0 ε + σ 2 R 2 0 nε 2 + n √ δσR 0 mε</text>
<text top="197" left="409" width="57" height="14" font="font40" id="p7_t19" reading_order_no="18" segment_no="1" tag_type="table">L µ log µR 2 0 ε + σ 2</text>
<text top="194" left="456" width="44" height="17" font="font40" id="p7_t20" reading_order_no="19" segment_no="1" tag_type="table">nµε + n √ δσ m √ µε</text>
<text top="205" left="114" width="85" height="11" font="font9" id="p7_t21" reading_order_no="20" segment_no="1" tag_type="table">+ As. 3.2 + known |B a k |</text>
<text top="224" left="114" width="67" height="8" font="font9" id="p7_t22" reading_order_no="21" segment_no="1" tag_type="table">As. 3.1 ( Option II )</text>
<text top="227" left="214" width="48" height="14" font="font40" id="p7_t23" reading_order_no="22" segment_no="1" tag_type="table">L ∆ 0 ε 2 + L ∆ 0 σ 2</text>
<text top="235" left="246" width="11" height="6" font="font44" id="p7_t24" reading_order_no="23" segment_no="1" tag_type="table">nε 4</text>
<text top="227" left="265" width="24" height="12" font="font40" id="p7_t25" reading_order_no="24" segment_no="1" tag_type="table">+ nbσ 2</text>
<text top="235" left="275" width="13" height="6" font="font44" id="p7_t26" reading_order_no="25" segment_no="1" tag_type="table">mε 2</text>
<text top="226" left="312" width="75" height="15" font="font40" id="p7_t27" reading_order_no="26" segment_no="1" tag_type="table">LR 2 0 ε + σ 2 R 2 0 nε 2 + nbσR 0 mε</text>
<text top="228" left="409" width="5" height="5" font="font44" id="p7_t28" reading_order_no="27" segment_no="1" tag_type="table">L</text>
<text top="226" left="410" width="56" height="14" font="font40" id="p7_t29" reading_order_no="28" segment_no="1" tag_type="table">µ log µR 2 0 ε + σ 2</text>
<text top="228" left="456" width="40" height="12" font="font40" id="p7_t30" reading_order_no="29" segment_no="1" tag_type="table">nµε + nbσ</text>
<text top="231" left="479" width="21" height="9" font="font44" id="p7_t31" reading_order_no="30" segment_no="1" tag_type="table">m √ µε</text>
<text top="236" left="114" width="33" height="8" font="font9" id="p7_t32" reading_order_no="31" segment_no="1" tag_type="table">+ As. 3.2</text>
<text top="265" left="108" width="396" height="9" font="font3" id="p7_t33" reading_order_no="32" segment_no="2" tag_type="text">Let us briefly discuss the main properties of the derived results. When δ = 0 , i.e., there are no</text>
<text top="276" left="108" width="396" height="9" font="font3" id="p7_t34" reading_order_no="33" segment_no="2" tag_type="text">Byzantine peers, we recover the tightest known rates for parallel SGD for strongly convex, generally</text>
<text top="287" left="108" width="396" height="9" font="font3" id="p7_t35" reading_order_no="34" segment_no="2" tag_type="text">convex, and non-convex objectives with both sets of assumptions. Next, we notice that in all</text>
<text top="297" left="108" width="396" height="10" font="font3" id="p7_t36" reading_order_no="35" segment_no="2" tag_type="text">complexity bounds in ( Option I ), the term depending on the ratio of Byzantine workers δ (the third</text>
<text top="308" left="108" width="396" height="10" font="font3" id="p7_t37" reading_order_no="36" segment_no="2" tag_type="text">one in all bounds) has better dependence on the accuracy of the solution ε than the classical variance</text>
<text top="319" left="108" width="397" height="9" font="font3" id="p7_t38" reading_order_no="37" segment_no="2" tag_type="text">term (the second one in all bounds). Therefore, for sufficiently small ε , the derived complexity</text>
<text top="330" left="108" width="398" height="9" font="font3" id="p7_t39" reading_order_no="38" segment_no="2" tag_type="text">bounds are the same as in the case when there are no Byzantine workers and parallel SGD is used.</text>
<text top="341" left="108" width="396" height="9" font="font3" id="p7_t40" reading_order_no="39" segment_no="2" tag_type="text">However, these bound are obtained under the assumption that all participants know the exact number<a href="deeplearning_paper1.html#25">F.2</a></text>
<text top="352" left="108" width="276" height="9" font="font3" id="p7_t41" reading_order_no="40" segment_no="2" tag_type="text">of attacking Byzantine workers at each iteration, which is unrealistic.<a href="deeplearning_paper1.html#25">) </a>with</text>
<text top="369" left="108" width="396" height="9" font="font3" id="p7_t42" reading_order_no="41" segment_no="3" tag_type="text">As for the weaker ( Option II ), the third term is much worse than the corresponding term in the</text>
<text top="379" left="108" width="396" height="9" font="font3" id="p7_t43" reading_order_no="42" segment_no="3" tag_type="text">previous setup. Nevertheless, the term that depends on the ratio of Byzantine workers δ has the same</text>
<text top="390" left="108" width="396" height="9" font="font3" id="p7_t44" reading_order_no="43" segment_no="3" tag_type="text">dependence on ε as in ( Option I ). This implies that for sufficiently small ε the derived complexity</text>
<text top="401" left="108" width="398" height="9" font="font3" id="p7_t45" reading_order_no="44" segment_no="3" tag_type="text">bounds are the same as in the case when there are no Byzantine workers and parallel SGD is used.</text>
<text top="412" left="108" width="351" height="9" font="font3" id="p7_t46" reading_order_no="45" segment_no="3" tag_type="text">For complete formulations, proofs and other details we refer the reader to Appendix F.2 .</text>
<text top="429" left="108" width="396" height="9" font="font3" id="p7_t47" reading_order_no="46" segment_no="4" tag_type="text">So far, all our convergence results rely on As. 3.2 , i.e., that the stochastic gradients have not too heavy</text>
<text top="439" left="108" width="396" height="9" font="font3" id="p7_t48" reading_order_no="47" segment_no="4" tag_type="text">tails. This assumption holds for many real-world neural networks. However, there are important NLP</text>
<text top="450" left="108" width="396" height="9" font="font3" id="p7_t49" reading_order_no="48" segment_no="4" tag_type="text">tasks such as BERT training [ 81 ], where the noise in the stochastic gradient has such a heavy noise that</text>
<text top="461" left="108" width="396" height="9" font="font3" id="p7_t50" reading_order_no="49" segment_no="4" tag_type="text">As. 3.2 becomes unlrealistic. The third and final setup in our analysis aims to address such heavy-tailed</text>
<text top="472" left="108" width="396" height="9" font="font3" id="p7_t51" reading_order_no="50" segment_no="4" tag_type="text">problems with BTARD-C LIPPED -SGD (see full Algorithm 8 in appendix). We analyse the method</text>
<text top="483" left="108" width="396" height="9" font="font3" id="p7_t52" reading_order_no="51" segment_no="4" tag_type="text">under the assumption that α -th moments of the stochastic gradients are uniformly upper-bounded</text>
<text top="493" left="108" width="396" height="10" font="font3" id="p7_t53" reading_order_no="52" segment_no="4" tag_type="text">for some α ∈ (1 , 2] . We notice that for α &lt; 2 this assumption allows the variance of the stochastic</text>
<text top="505" left="108" width="396" height="9" font="font3" id="p7_t54" reading_order_no="53" segment_no="4" tag_type="text">gradient to be unbounded. In this setting, we prove that BTARD-C LIPPED -SGD finds an ε -solution</text>
<text top="519" left="108" width="120" height="10" font="font3" id="p7_t55" reading_order_no="54" segment_no="4" tag_type="text">of the convex problem after O</text>
<text top="517" left="236" width="37" height="11" font="font17" id="p7_t56" reading_order_no="55" segment_no="4" tag_type="text">ε − α / ( α − 1)<a href="deeplearning_paper1.html#25">F.1</a></text>
<text top="519" left="281" width="15" height="9" font="font18" id="p7_t57" reading_order_no="56" segment_no="4" tag_type="text">1 +<a href="deeplearning_paper1.html#25">),</a></text>
<text top="513" left="303" width="56" height="15" font="font17" id="p7_t58" reading_order_no="57" segment_no="4" tag_type="text">n √ δ / m α / ( α − 1)</text>
<text top="520" left="374" width="132" height="9" font="font3" id="p7_t59" reading_order_no="58" segment_no="4" tag_type="text">iterations when the number of at-</text>
<text top="538" left="108" width="222" height="9" font="font3" id="p7_t60" reading_order_no="59" segment_no="4" tag_type="text">tacking Byzantine peers is known at each iteration and O</text>
<text top="536" left="338" width="37" height="11" font="font17" id="p7_t61" reading_order_no="60" segment_no="4" tag_type="text">ε − α / ( α − 1)</text>
<text top="535" left="383" width="70" height="12" font="font18" id="p7_t62" reading_order_no="61" segment_no="4" tag_type="text">1 + ( nb / m ) α / ( α − 1)</text>
<text top="538" left="468" width="36" height="9" font="font3" id="p7_t63" reading_order_no="62" segment_no="4" tag_type="text">iterations</text>
<text top="553" left="108" width="372" height="9" font="font3" id="p7_t64" reading_order_no="63" segment_no="4" tag_type="text">otherwise. One can find the full statements and complete proofs of our results in Appendix F .</text>
<text top="579" left="108" width="12" height="9" font="font1" id="p7_t65" reading_order_no="64" segment_no="5" tag_type="title">3.3</text>
<text top="579" left="130" width="124" height="9" font="font1" id="p7_t66" reading_order_no="65" segment_no="5" tag_type="title">System design considerations</text>
<text top="599" left="108" width="396" height="9" font="font3" id="p7_t67" reading_order_no="66" segment_no="6" tag_type="text">The algorithm described in Section 3.1 operates with a pre-defined list of peers that can only decrease</text>
<text top="610" left="108" width="396" height="9" font="font3" id="p7_t68" reading_order_no="67" segment_no="6" tag_type="text">in size. However, many real-world scenarios can benefit from training in a public environment where</text>
<text top="620" left="108" width="396" height="9" font="font3" id="p7_t69" reading_order_no="68" segment_no="6" tag_type="text">new peers can join midway through training. Unfortunately, these scenarios make the system exposed</text>
<text top="631" left="108" width="396" height="9" font="font3" id="p7_t70" reading_order_no="69" segment_no="6" tag_type="text">to a new type of malicious behavior known as Sybil attacks [ 82 ]. To exploit this attack vector, a single</text>
<text top="642" left="108" width="396" height="9" font="font3" id="p7_t71" reading_order_no="70" segment_no="6" tag_type="text">computationally constrained attacker adopts multiple pseudonymous identities in order to establish a</text>
<text top="653" left="108" width="174" height="9" font="font3" id="p7_t72" reading_order_no="71" segment_no="6" tag_type="text">dishonest majority and break the algorithm.</text>
<text top="670" left="108" width="398" height="9" font="font3" id="p7_t73" reading_order_no="72" segment_no="7" tag_type="text">To combat this behavior, we augment BTARD with a protocol which dictates how new peers can join.</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p7_t74" reading_order_no="73" segment_no="7" tag_type="text">The core idea of this protocol is that any new participant must prove that it has honestly trained the</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p7_t75" reading_order_no="74" segment_no="7" tag_type="text">network over multiple continuous iterations before it will be given full privileges. This ensures that</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p7_t76" reading_order_no="75" segment_no="7" tag_type="text">the influence of Sybil attackers is proportional to their actual computing power. We formulate these</text>
<text top="713" left="108" width="148" height="9" font="font3" id="p7_t77" reading_order_no="76" segment_no="7" tag_type="text">claims in more detail in Appendix G .</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p7_t78" reading_order_no="77" segment_no="8" tag_type="text">7</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font46" size="8" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font47" size="8" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font48" size="10" family="TimesNewRomanPSMT" color="#000000"/>
<text top="151" left="129" width="3" height="7" font="font46" id="p8_t1" reading_order_no="6" segment_no="0" tag_type="figure">0</text>
<text top="151" left="145" width="12" height="7" font="font46" id="p8_t2" reading_order_no="7" segment_no="0" tag_type="figure">5000</text>
<text top="151" left="164" width="77" height="7" font="font46" id="p8_t3" reading_order_no="8" segment_no="0" tag_type="figure">10000 15000 20000 25000</text>
<text top="134" left="115" width="8" height="7" font="font46" id="p8_t4" reading_order_no="5" segment_no="0" tag_type="figure">0.2</text>
<text top="119" left="115" width="8" height="7" font="font46" id="p8_t5" reading_order_no="4" segment_no="0" tag_type="figure">0.4</text>
<text top="104" left="115" width="8" height="7" font="font46" id="p8_t6" reading_order_no="3" segment_no="0" tag_type="figure">0.6</text>
<text top="90" left="115" width="8" height="7" font="font46" id="p8_t7" reading_order_no="2" segment_no="0" tag_type="figure">0.8</text>
<text top="126" left="112" width="0" height="7" font="font47" id="p8_t8" reading_order_no="1" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="71" left="163" width="38" height="9" font="font48" id="p8_t9" reading_order_no="0" segment_no="0" tag_type="figure">Convergence</text>
<text top="92" left="176" width="52" height="8" font="font46" id="p8_t10" reading_order_no="9" segment_no="0" tag_type="figure">Baseline (AR-SGD)</text>
<text top="101" left="176" width="50" height="8" font="font46" id="p8_t11" reading_order_no="10" segment_no="0" tag_type="figure">Coord-wise median</text>
<text top="110" left="176" width="47" height="8" font="font46" id="p8_t12" reading_order_no="11" segment_no="0" tag_type="figure">Geometric median</text>
<text top="119" left="176" width="56" height="8" font="font46" id="p8_t13" reading_order_no="12" segment_no="0" tag_type="figure">CenteredClip with PS</text>
<text top="128" left="176" width="30" height="8" font="font46" id="p8_t14" reading_order_no="13" segment_no="0" tag_type="figure">Ours,   = 1</text>
<text top="137" left="176" width="33" height="8" font="font46" id="p8_t15" reading_order_no="14" segment_no="0" tag_type="figure">Ours,   = 10</text>
<text top="151" left="260" width="113" height="7" font="font46" id="p8_t16" reading_order_no="20" segment_no="0" tag_type="figure">14000 16000 18000 20000 22000 24000</text>
<text top="139" left="245" width="11" height="7" font="font46" id="p8_t17" reading_order_no="19" segment_no="0" tag_type="figure">0.91</text>
<text top="118" left="245" width="11" height="7" font="font46" id="p8_t18" reading_order_no="18" segment_no="0" tag_type="figure">0.92</text>
<text top="98" left="245" width="11" height="7" font="font46" id="p8_t19" reading_order_no="17" segment_no="0" tag_type="figure">0.93</text>
<text top="78" left="245" width="11" height="7" font="font46" id="p8_t20" reading_order_no="16" segment_no="0" tag_type="figure">0.94</text>
<text top="71" left="277" width="75" height="9" font="font48" id="p8_t21" reading_order_no="15" segment_no="0" tag_type="figure">Convergence (zoomed in)</text>
<text top="151" left="395" width="3" height="7" font="font46" id="p8_t22" reading_order_no="26" segment_no="0" tag_type="figure">0</text>
<text top="151" left="413" width="12" height="7" font="font46" id="p8_t23" reading_order_no="27" segment_no="0" tag_type="figure">1000</text>
<text top="151" left="435" width="12" height="7" font="font46" id="p8_t24" reading_order_no="28" segment_no="0" tag_type="figure">2000</text>
<text top="151" left="458" width="12" height="7" font="font46" id="p8_t25" reading_order_no="29" segment_no="0" tag_type="figure">3000</text>
<text top="151" left="481" width="12" height="7" font="font46" id="p8_t26" reading_order_no="30" segment_no="0" tag_type="figure">4000</text>
<text top="135" left="380" width="8" height="7" font="font46" id="p8_t27" reading_order_no="25" segment_no="0" tag_type="figure">0.2</text>
<text top="119" left="380" width="8" height="7" font="font46" id="p8_t28" reading_order_no="24" segment_no="0" tag_type="figure">0.4</text>
<text top="104" left="380" width="8" height="7" font="font46" id="p8_t29" reading_order_no="23" segment_no="0" tag_type="figure">0.6</text>
<text top="88" left="380" width="8" height="7" font="font46" id="p8_t30" reading_order_no="22" segment_no="0" tag_type="figure">0.8</text>
<text top="71" left="401" width="91" height="9" font="font48" id="p8_t31" reading_order_no="21" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 1000</text>
<text top="245" left="129" width="3" height="7" font="font46" id="p8_t32" reading_order_no="37" segment_no="0" tag_type="figure">0</text>
<text top="245" left="147" width="12" height="7" font="font46" id="p8_t33" reading_order_no="38" segment_no="0" tag_type="figure">1000</text>
<text top="245" left="170" width="12" height="7" font="font46" id="p8_t34" reading_order_no="39" segment_no="0" tag_type="figure">2000</text>
<text top="245" left="193" width="12" height="7" font="font46" id="p8_t35" reading_order_no="40" segment_no="0" tag_type="figure">3000</text>
<text top="245" left="215" width="12" height="7" font="font46" id="p8_t36" reading_order_no="41" segment_no="0" tag_type="figure">4000</text>
<text top="252" left="166" width="32" height="7" font="font46" id="p8_t37" reading_order_no="42" segment_no="0" tag_type="figure">Training step</text>
<text top="228" left="115" width="8" height="7" font="font46" id="p8_t38" reading_order_no="36" segment_no="0" tag_type="figure">0.2</text>
<text top="213" left="115" width="8" height="7" font="font46" id="p8_t39" reading_order_no="35" segment_no="0" tag_type="figure">0.4</text>
<text top="197" left="115" width="8" height="7" font="font46" id="p8_t40" reading_order_no="34" segment_no="0" tag_type="figure">0.6</text>
<text top="181" left="115" width="8" height="7" font="font46" id="p8_t41" reading_order_no="33" segment_no="0" tag_type="figure">0.8</text>
<text top="219" left="112" width="0" height="7" font="font47" id="p8_t42" reading_order_no="32" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="164" left="134" width="95" height="9" font="font48" id="p8_t43" reading_order_no="31" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 1000</text>
<text top="245" left="261" width="108" height="7" font="font46" id="p8_t44" reading_order_no="49" segment_no="0" tag_type="figure">9500 10000 10500 11000 11500 12000</text>
<text top="252" left="298" width="32" height="7" font="font46" id="p8_t45" reading_order_no="50" segment_no="0" tag_type="figure">Training step</text>
<text top="229" left="245" width="11" height="7" font="font46" id="p8_t46" reading_order_no="48" segment_no="0" tag_type="figure">0.75</text>
<text top="215" left="245" width="11" height="7" font="font46" id="p8_t47" reading_order_no="47" segment_no="0" tag_type="figure">0.80</text>
<text top="201" left="245" width="11" height="7" font="font46" id="p8_t48" reading_order_no="46" segment_no="0" tag_type="figure">0.85</text>
<text top="186" left="245" width="11" height="7" font="font46" id="p8_t49" reading_order_no="45" segment_no="0" tag_type="figure">0.90</text>
<text top="172" left="245" width="11" height="7" font="font46" id="p8_t50" reading_order_no="44" segment_no="0" tag_type="figure">0.95</text>
<text top="164" left="265" width="98" height="9" font="font48" id="p8_t51" reading_order_no="43" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 10000</text>
<text top="245" left="394" width="108" height="7" font="font46" id="p8_t52" reading_order_no="57" segment_no="0" tag_type="figure">9500 10000 10500 11000 11500 12000</text>
<text top="252" left="431" width="32" height="7" font="font46" id="p8_t53" reading_order_no="58" segment_no="0" tag_type="figure">Training step</text>
<text top="229" left="377" width="11" height="7" font="font46" id="p8_t54" reading_order_no="56" segment_no="0" tag_type="figure">0.75</text>
<text top="215" left="377" width="11" height="7" font="font46" id="p8_t55" reading_order_no="55" segment_no="0" tag_type="figure">0.80</text>
<text top="201" left="377" width="11" height="7" font="font46" id="p8_t56" reading_order_no="54" segment_no="0" tag_type="figure">0.85</text>
<text top="186" left="377" width="11" height="7" font="font46" id="p8_t57" reading_order_no="53" segment_no="0" tag_type="figure">0.90</text>
<text top="172" left="377" width="11" height="7" font="font46" id="p8_t58" reading_order_no="52" segment_no="0" tag_type="figure">0.95</text>
<text top="164" left="400" width="95" height="9" font="font48" id="p8_t59" reading_order_no="51" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 10000</text>
<text top="194" left="451" width="27" height="8" font="font46" id="p8_t60" reading_order_no="59" segment_no="0" tag_type="figure">No attacks</text>
<text top="203" left="451" width="34" height="8" font="font46" id="p8_t61" reading_order_no="60" segment_no="0" tag_type="figure">Sign flipping</text>
<text top="212" left="451" width="46" height="8" font="font46" id="p8_t62" reading_order_no="61" segment_no="0" tag_type="figure">Random direction</text>
<text top="221" left="451" width="36" height="8" font="font46" id="p8_t63" reading_order_no="62" segment_no="0" tag_type="figure">Label flipping</text>
<text top="230" left="451" width="46" height="8" font="font46" id="p8_t64" reading_order_no="63" segment_no="0" tag_type="figure">Delayed gradients</text>
<text top="266" left="108" width="396" height="9" font="font3" id="p8_t65" reading_order_no="64" segment_no="1" tag_type="text">Figure 2: (Upper-Left, Upper-Middle:) ResNet-18 test accuracy with different robust aggregation</text>
<text top="277" left="108" width="395" height="9" font="font3" id="p8_t66" reading_order_no="65" segment_no="1" tag_type="text">techniques. (Remaining plots:) Effectiveness of Byzantine attacks against against BTARD-SGD.</text>
<text top="292" left="108" width="396" height="9" font="font3" id="p8_t67" reading_order_no="66" segment_no="2" tag_type="text">To operate in this setting, we augment Algorithm 1 with a specialized distributed system designed</text>
<text top="303" left="108" width="396" height="9" font="font3" id="p8_t68" reading_order_no="67" segment_no="2" tag_type="text">to be resistant against Sybil attacks. Inspired by other public distributed projects, we build upon</text>
<text top="314" left="108" width="396" height="9" font="font3" id="p8_t69" reading_order_no="68" segment_no="2" tag_type="text">Distributed Hash Table [ 83 , 84 , 85 ] — a protocol that establishes a shared key-value storage over</text>
<text top="325" left="108" width="343" height="9" font="font3" id="p8_t70" reading_order_no="69" segment_no="2" tag_type="text">distributed unreliable devices. We describe the implementation details in Appendix H .</text>
<text top="345" left="108" width="6" height="11" font="font6" id="p8_t71" reading_order_no="70" segment_no="3" tag_type="title">4</text>
<text top="345" left="126" width="65" height="11" font="font6" id="p8_t72" reading_order_no="71" segment_no="3" tag_type="title">Experiments<a href="deeplearning_paper1.html#5">1</a></text>
<text top="364" left="108" width="12" height="9" font="font1" id="p8_t73" reading_order_no="72" segment_no="4" tag_type="title">4.1</text>
<text top="364" left="130" width="97" height="9" font="font1" id="p8_t74" reading_order_no="73" segment_no="4" tag_type="title">CIFAR10 classification</text>
<text top="378" left="108" width="398" height="9" font="font3" id="p8_t75" reading_order_no="74" segment_no="5" tag_type="text">First, we evaluate our approach with a realistic image-classification workload in controlled conditions.<a href="deeplearning_paper1.html#15">[</a></text>
<text top="389" left="108" width="395" height="9" font="font3" id="p8_t76" reading_order_no="75" segment_no="5" tag_type="text">Our setup is a ResNet-18 [ 86 ] model trained to solve the CIFAR10 classification task [ 87 ]. We train<a href="deeplearning_paper1.html#15">83</a></text>
<text top="399" left="108" width="396" height="9" font="font3" id="p8_t77" reading_order_no="76" segment_no="5" tag_type="text">the model on 16 peers (each peer processes 8 samples per batch) using the SGD with Nesterov [ 88 ]<a href="deeplearning_paper1.html#15">,</a></text>
<text top="410" left="108" width="396" height="9" font="font3" id="p8_t78" reading_order_no="77" segment_no="5" tag_type="text">momentum and the cosine annealing learning rate [ 89 ]. We deliberately use tuned setup that achieves<a href="deeplearning_paper1.html#15">84</a></text>
<text top="421" left="108" width="365" height="9" font="font3" id="p8_t79" reading_order_no="78" segment_no="5" tag_type="text">93.5% test accuracy in order to measure how byzantine attacks affect this training outcome.<a href="deeplearning_paper1.html#15">,</a></text>
<text top="437" left="108" width="398" height="10" font="font3" id="p8_t80" reading_order_no="79" segment_no="6" tag_type="text">We evaluate our method with constant τ =10 (weaker clipping) and with τ =1 (stronger clipping).<a href="deeplearning_paper1.html#15">85</a></text>
<text top="449" left="108" width="397" height="9" font="font3" id="p8_t81" reading_order_no="80" segment_no="6" tag_type="text">These values were chosen based on the maximal standard deviation of the gradient parts averaged by<a href="deeplearning_paper1.html#15">] </a>— a protocol that establishes a shared key-value storage over</text>
<text top="459" left="108" width="396" height="9" font="font3" id="p8_t82" reading_order_no="81" segment_no="6" tag_type="text">the workers during normal training, so that almost no vectors are clipped for the weaker clipping and</text>
<text top="470" left="108" width="396" height="9" font="font3" id="p8_t83" reading_order_no="82" segment_no="6" tag_type="text">approximately half of the vectors are clipped for the stronger clipping scenario. BTARD randomly<a href="deeplearning_paper1.html#52">H</a></text>
<text top="481" left="108" width="398" height="9" font="font3" id="p8_t84" reading_order_no="83" segment_no="6" tag_type="text">selects 1 validator on each step. If the validator happens to be Byzantine, it does not accuse its peers.<a href="deeplearning_paper1.html#52">.</a></text>
<text top="498" left="108" width="396" height="9" font="font3" id="p8_t85" reading_order_no="84" segment_no="7" tag_type="text">We compare our method to the regular All-Reduce without clipping, the coordinate-wise median</text>
<text top="509" left="108" width="396" height="9" font="font3" id="p8_t86" reading_order_no="85" segment_no="7" tag_type="text">and geometric median approaches, and the original variant of C ENTERED C LIP that uses a trusted</text>
<text top="519" left="108" width="396" height="9" font="font3" id="p8_t87" reading_order_no="86" segment_no="7" tag_type="text">parameter server [ 58 ]. Some other popular robust aggregation techniques are omitted because they</text>
<text top="530" left="108" width="396" height="9" font="font3" id="p8_t88" reading_order_no="87" segment_no="7" tag_type="text">were shown to be inferior [ 58 ]. We run all iterative algorithms (e.g. C ENTERED C LIP ) to convergence</text>
<text top="541" left="108" width="17" height="9" font="font3" id="p8_t89" reading_order_no="88" segment_no="7" tag_type="text">with</text>
<text top="539" left="134" width="370" height="11" font="font18" id="p8_t90" reading_order_no="89" segment_no="7" tag_type="text">= 10 − 6 , as we have found that limiting the number of iterations can significantly decrease the<a href="deeplearning_paper1.html#15">[</a></text>
<text top="552" left="108" width="183" height="9" font="font3" id="p8_t91" reading_order_no="90" segment_no="7" tag_type="text">final model quality (see Fig. 6 in Appendix I ).<a href="deeplearning_paper1.html#15">86</a></text>
<text top="569" left="108" width="396" height="9" font="font3" id="p8_t92" reading_order_no="91" segment_no="8" tag_type="text">In addition to training convergence, we evaluate our setup in presence of malicious peers. To test<a href="deeplearning_paper1.html#15">] </a>model trained to solve the CIFAR10 classification task <a href="deeplearning_paper1.html#15">[</a></text>
<text top="579" left="108" width="396" height="9" font="font3" id="p8_t93" reading_order_no="92" segment_no="8" tag_type="text">pessimistic conditions, we pick a setting where 7 of 16 peers are Byzantine (other setups can be found<a href="deeplearning_paper1.html#15">87</a></text>
<text top="590" left="108" width="252" height="9" font="font3" id="p8_t94" reading_order_no="93" segment_no="8" tag_type="text">in Appendix I ). We experiment with the following attack types:<a href="deeplearning_paper1.html#15">]. </a>We train</text>
<text top="604" left="108" width="283" height="9" font="font3" id="p8_t95" reading_order_no="94" segment_no="9" tag_type="list">• S IGN FLIPPING : each attacker sends the opposite of its true gradient.<a href="deeplearning_paper1.html#15">[</a></text>
<text top="618" left="108" width="386" height="9" font="font3" id="p8_t96" reading_order_no="95" segment_no="10" tag_type="list">• R ANDOM DIRECTION : all attackers send large vectors pointed at a common random direction.<a href="deeplearning_paper1.html#15">88</a></text>
<text top="631" left="108" width="396" height="9" font="font3" id="p8_t97" reading_order_no="96" segment_no="11" tag_type="list">• L ABEL FLIPPING : each attacker computes its gradient based on the cross-entropy loss with flipped<a href="deeplearning_paper1.html#15">]</a></text>
<text top="641" left="116" width="257" height="10" font="font3" id="p8_t98" reading_order_no="97" segment_no="11" tag_type="list">labels. For CIFAR-10, we replace label l ∈ { 0 , ..., 9 } with 9 − l .<a href="deeplearning_paper1.html#15">[</a></text>
<text top="655" left="108" width="329" height="10" font="font3" id="p8_t99" reading_order_no="98" segment_no="12" tag_type="list">• D ELAYED GRADIENT : attackers send their real gradients delayed by 1000 steps.<a href="deeplearning_paper1.html#15">89</a></text>
<text top="669" left="108" width="397" height="10" font="font3" id="p8_t100" reading_order_no="99" segment_no="13" tag_type="text">We further amplify the Byzantine gradients from the first two attacks by a large coefficient λ =1000<a href="deeplearning_paper1.html#15">]. </a>We deliberately use tuned setup that achieves</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p8_t101" reading_order_no="100" segment_no="13" tag_type="text">so they would dominate the aggregated gradient if no clipping is used. While in practice such attacks</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p8_t102" reading_order_no="101" segment_no="13" tag_type="text">can be identified right away due to the large gradient norms, we deliberately avoid doing that to</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p8_t103" reading_order_no="102" segment_no="13" tag_type="text">test our clipping approach. We omit some common low-magnitude attacks [ 56 , 57 , 60 ] designed to</text>
<text top="713" left="108" width="345" height="9" font="font3" id="p8_t104" reading_order_no="103" segment_no="13" tag_type="text">bypass variance and magnitude checks, as BTARD does not use these checks anyway.</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p8_t105" reading_order_no="104" segment_no="14" tag_type="text">8</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font49" size="9" family="TimesNewRomanPSMT" color="#000000"/>
<text top="153" left="127" width="3" height="7" font="font46" id="p9_t1" reading_order_no="7" segment_no="0" tag_type="figure">0</text>
<text top="153" left="170" width="12" height="7" font="font46" id="p9_t2" reading_order_no="8" segment_no="0" tag_type="figure">1000</text>
<text top="153" left="218" width="12" height="7" font="font46" id="p9_t3" reading_order_no="9" segment_no="0" tag_type="figure">2000</text>
<text top="153" left="266" width="12" height="7" font="font46" id="p9_t4" reading_order_no="10" segment_no="0" tag_type="figure">3000</text>
<text top="153" left="313" width="12" height="7" font="font46" id="p9_t5" reading_order_no="11" segment_no="0" tag_type="figure">4000</text>
<text top="153" left="361" width="12" height="7" font="font46" id="p9_t6" reading_order_no="12" segment_no="0" tag_type="figure">5000</text>
<text top="142" left="118" width="3" height="7" font="font46" id="p9_t7" reading_order_no="6" segment_no="0" tag_type="figure">2</text>
<text top="128" left="118" width="3" height="7" font="font46" id="p9_t8" reading_order_no="5" segment_no="0" tag_type="figure">4</text>
<text top="114" left="118" width="3" height="7" font="font46" id="p9_t9" reading_order_no="4" segment_no="0" tag_type="figure">6</text>
<text top="101" left="118" width="3" height="7" font="font46" id="p9_t10" reading_order_no="3" segment_no="0" tag_type="figure">8</text>
<text top="87" left="115" width="6" height="7" font="font46" id="p9_t11" reading_order_no="2" segment_no="0" tag_type="figure">10</text>
<text top="116" left="112" width="0" height="7" font="font47" id="p9_t12" reading_order_no="1" segment_no="0" tag_type="figure">Loss</text>
<text top="71" left="229" width="38" height="9" font="font48" id="p9_t13" reading_order_no="0" segment_no="0" tag_type="figure">Convergence</text>
<text top="85" left="307" width="58" height="8" font="font49" id="p9_t14" reading_order_no="13" segment_no="0" tag_type="figure">Baseline (AR-SGD)</text>
<text top="95" left="307" width="46" height="8" font="font49" id="p9_t15" reading_order_no="14" segment_no="0" tag_type="figure">Ours,   = 0.125</text>
<text top="105" left="307" width="42" height="8" font="font49" id="p9_t16" reading_order_no="15" segment_no="0" tag_type="figure">Ours,   = 0.25</text>
<text top="153" left="401" width="12" height="7" font="font46" id="p9_t17" reading_order_no="20" segment_no="0" tag_type="figure">1000</text>
<text top="153" left="427" width="12" height="7" font="font46" id="p9_t18" reading_order_no="21" segment_no="0" tag_type="figure">1050</text>
<text top="153" left="452" width="12" height="7" font="font46" id="p9_t19" reading_order_no="22" segment_no="0" tag_type="figure">1100</text>
<text top="153" left="477" width="12" height="7" font="font46" id="p9_t20" reading_order_no="23" segment_no="0" tag_type="figure">1150</text>
<text top="133" left="377" width="8" height="7" font="font46" id="p9_t21" reading_order_no="19" segment_no="0" tag_type="figure">9.6</text>
<text top="112" left="377" width="8" height="7" font="font46" id="p9_t22" reading_order_no="18" segment_no="0" tag_type="figure">9.8</text>
<text top="92" left="374" width="11" height="7" font="font46" id="p9_t23" reading_order_no="17" segment_no="0" tag_type="figure">10.0</text>
<text top="71" left="393" width="104" height="9" font="font48" id="p9_t24" reading_order_no="16" segment_no="0" tag_type="figure">Ours,   = 0.125, attack at step 1000</text>
<text top="245" left="138" width="12" height="7" font="font46" id="p9_t25" reading_order_no="30" segment_no="0" tag_type="figure">1000</text>
<text top="245" left="163" width="12" height="7" font="font46" id="p9_t26" reading_order_no="31" segment_no="0" tag_type="figure">1050</text>
<text top="245" left="189" width="12" height="7" font="font46" id="p9_t27" reading_order_no="32" segment_no="0" tag_type="figure">1100</text>
<text top="245" left="214" width="12" height="7" font="font46" id="p9_t28" reading_order_no="33" segment_no="0" tag_type="figure">1150</text>
<text top="252" left="166" width="32" height="7" font="font46" id="p9_t29" reading_order_no="34" segment_no="0" tag_type="figure">Training step</text>
<text top="237" left="118" width="3" height="7" font="font46" id="p9_t30" reading_order_no="29" segment_no="0" tag_type="figure">9</text>
<text top="215" left="115" width="6" height="7" font="font46" id="p9_t31" reading_order_no="28" segment_no="0" tag_type="figure">10</text>
<text top="194" left="115" width="6" height="7" font="font46" id="p9_t32" reading_order_no="27" segment_no="0" tag_type="figure">11</text>
<text top="172" left="115" width="6" height="7" font="font46" id="p9_t33" reading_order_no="26" segment_no="0" tag_type="figure">12</text>
<text top="208" left="112" width="0" height="7" font="font47" id="p9_t34" reading_order_no="24" segment_no="0" tag_type="figure">Loss</text>
<text top="163" left="134" width="97" height="9" font="font48" id="p9_t35" reading_order_no="25" segment_no="0" tag_type="figure">Ours,   = 0.5, attack at step 1000</text>
<text top="245" left="270" width="12" height="7" font="font46" id="p9_t36" reading_order_no="39" segment_no="0" tag_type="figure">5000</text>
<text top="245" left="295" width="12" height="7" font="font46" id="p9_t37" reading_order_no="40" segment_no="0" tag_type="figure">5050</text>
<text top="245" left="320" width="12" height="7" font="font46" id="p9_t38" reading_order_no="41" segment_no="0" tag_type="figure">5100</text>
<text top="245" left="346" width="12" height="7" font="font46" id="p9_t39" reading_order_no="42" segment_no="0" tag_type="figure">5150</text>
<text top="252" left="298" width="32" height="7" font="font46" id="p9_t40" reading_order_no="43" segment_no="0" tag_type="figure">Training step</text>
<text top="220" left="250" width="3" height="7" font="font46" id="p9_t41" reading_order_no="38" segment_no="0" tag_type="figure">5</text>
<text top="195" left="247" width="6" height="7" font="font46" id="p9_t42" reading_order_no="37" segment_no="0" tag_type="figure">10</text>
<text top="169" left="247" width="6" height="7" font="font46" id="p9_t43" reading_order_no="36" segment_no="0" tag_type="figure">15</text>
<text top="163" left="265" width="97" height="9" font="font48" id="p9_t44" reading_order_no="35" segment_no="0" tag_type="figure">Ours,   = 0.5, attack at step 5000</text>
<text top="245" left="401" width="12" height="7" font="font46" id="p9_t45" reading_order_no="48" segment_no="0" tag_type="figure">5000</text>
<text top="245" left="427" width="12" height="7" font="font46" id="p9_t46" reading_order_no="49" segment_no="0" tag_type="figure">5050</text>
<text top="245" left="452" width="12" height="7" font="font46" id="p9_t47" reading_order_no="50" segment_no="0" tag_type="figure">5100</text>
<text top="245" left="477" width="12" height="7" font="font46" id="p9_t48" reading_order_no="51" segment_no="0" tag_type="figure">5150</text>
<text top="252" left="429" width="32" height="7" font="font46" id="p9_t49" reading_order_no="52" segment_no="0" tag_type="figure">Training step</text>
<text top="238" left="381" width="3" height="7" font="font46" id="p9_t50" reading_order_no="47" segment_no="0" tag_type="figure">2</text>
<text top="211" left="381" width="3" height="7" font="font46" id="p9_t51" reading_order_no="46" segment_no="0" tag_type="figure">3</text>
<text top="184" left="381" width="3" height="7" font="font46" id="p9_t52" reading_order_no="45" segment_no="0" tag_type="figure">4</text>
<text top="163" left="393" width="104" height="9" font="font48" id="p9_t53" reading_order_no="44" segment_no="0" tag_type="figure">Ours,   = 0.125, attack at step 5000</text>
<text top="177" left="445" width="31" height="8" font="font49" id="p9_t54" reading_order_no="53" segment_no="0" tag_type="figure">No attacks</text>
<text top="187" left="445" width="38" height="8" font="font49" id="p9_t55" reading_order_no="54" segment_no="0" tag_type="figure">Sign flipping</text>
<text top="197" left="445" width="52" height="8" font="font49" id="p9_t56" reading_order_no="55" segment_no="0" tag_type="figure">Random direction</text>
<text top="207" left="445" width="41" height="8" font="font49" id="p9_t57" reading_order_no="56" segment_no="0" tag_type="figure">Label flipping</text>
<text top="267" left="108" width="398" height="9" font="font3" id="p9_t58" reading_order_no="57" segment_no="4" tag_type="text">Figure 3: (Upper-Left:) ALBERT-large training objective using AR-SGD and BTARD-Clipped-</text>
<text top="278" left="108" width="312" height="9" font="font3" id="p9_t59" reading_order_no="58" segment_no="4" tag_type="text">SGD. (Remaining plots:) Effectiveness of Byzantine attacks against BTARD.</text>
<text top="303" left="108" width="396" height="10" font="font3" id="p9_t60" reading_order_no="59" segment_no="5" tag_type="text">For each experiment configuration, Byzantines behave honestly prior to step s , then simultaneously</text>
<text top="314" left="108" width="396" height="9" font="font3" id="p9_t61" reading_order_no="60" segment_no="5" tag_type="text">attack on each subsequent step until they are banned. Other setups (e.g. attacking periodically) are</text>
<text top="325" left="108" width="396" height="9" font="font3" id="p9_t62" reading_order_no="61" segment_no="5" tag_type="text">considered in Appendix I . We consider attacks in two training regions: early stages ( s =1000 ) and</text>
<text top="336" left="108" width="396" height="9" font="font3" id="p9_t63" reading_order_no="62" segment_no="5" tag_type="text">closer to convergence ( s =10 , 000 ). We repeat each experiment 5 times and report the mean and range</text>
<text top="347" left="108" width="397" height="9" font="font3" id="p9_t64" reading_order_no="63" segment_no="5" tag_type="text">of the test accuracy during at least 2000 steps after all Byzantines are banned. In our experiments,</text>
<text top="358" left="108" width="184" height="9" font="font3" id="p9_t65" reading_order_no="64" segment_no="5" tag_type="text">this usually happened within 150 steps after s .</text>
<text top="374" left="108" width="396" height="9" font="font3" id="p9_t66" reading_order_no="65" segment_no="6" tag_type="text">The results are shown in the Fig. 2 . comparing to the All-Reduce baseline, we note that our method</text>
<text top="385" left="108" width="396" height="9" font="font3" id="p9_t67" reading_order_no="66" segment_no="6" tag_type="text">does not worsen the speed of convergence but introduces a minor negative effect on the final test</text>
<text top="396" left="108" width="397" height="9" font="font3" id="p9_t68" reading_order_no="67" segment_no="6" tag_type="text">accuracy. For τ =10 , this effect is indistinguishable from random variation. In terms of test accuracy,</text>
<text top="407" left="108" width="396" height="9" font="font3" id="p9_t69" reading_order_no="68" segment_no="6" tag_type="text">the two most effective attacks are the random direction and sign flipping. The effect of label flipping<a href="deeplearning_paper1.html#53">I</a></text>
<text top="418" left="108" width="274" height="9" font="font3" id="p9_t70" reading_order_no="69" segment_no="6" tag_type="text">is smaller, and the effect of delayed gradients is almost undetectable.<a href="deeplearning_paper1.html#53">. </a>We consider attacks in two training regions: early stages (</text>
<text top="435" left="108" width="12" height="9" font="font1" id="p9_t71" reading_order_no="70" segment_no="7" tag_type="title">4.2</text>
<text top="435" left="130" width="111" height="9" font="font1" id="p9_t72" reading_order_no="71" segment_no="7" tag_type="title">Pre-training transformers</text>
<text top="452" left="108" width="396" height="9" font="font3" id="p9_t73" reading_order_no="72" segment_no="8" tag_type="text">For our second experiment, we choose a more compute-intensive and hyperparameter-sensitive</text>
<text top="463" left="108" width="396" height="9" font="font3" id="p9_t74" reading_order_no="73" segment_no="8" tag_type="text">model with adaptive optimizers to demonstrate that our approach may be applied to models that</text>
<text top="474" left="108" width="396" height="9" font="font3" id="p9_t75" reading_order_no="74" segment_no="8" tag_type="text">are commonly used in distributed training scenarios. Our setup is pre-training the ALBERT-large</text>
<text top="485" left="108" width="396" height="9" font="font3" id="p9_t76" reading_order_no="75" segment_no="8" tag_type="text">model [ 90 ] on the Wikitext 103 dataset [ 91 ] using LAMB [ 50 ]. Since the original ALBERT setup</text>
<text top="496" left="108" width="396" height="9" font="font3" id="p9_t77" reading_order_no="76" segment_no="8" tag_type="text">uses gradient clipping, we use BTARD-C LIPPED -SGD (see Alg. 8 in Appendix). We train the model</text>
<text top="507" left="108" width="396" height="9" font="font3" id="p9_t78" reading_order_no="77" segment_no="8" tag_type="text">on 16 machines that jointly accumulate 4096 samples for every batch. Similarly to the previous</text>
<text top="518" left="108" width="396" height="9" font="font3" id="p9_t79" reading_order_no="78" segment_no="8" tag_type="text">section, we evaluate two configurations with τ =0 . 5 (weaker clipping) and τ =0 . 125 respectively, in</text>
<text top="529" left="108" width="396" height="9" font="font3" id="p9_t80" reading_order_no="79" segment_no="8" tag_type="text">addition to All-Reduce baseline. For Byzantine tolerance evaluation we also use 7 out of 16 Byzantine</text>
<text top="539" left="108" width="396" height="10" font="font3" id="p9_t81" reading_order_no="80" segment_no="8" tag_type="text">servers, 1 validator and two attack regions: s =1000 and s =5 , 000 . The only major difference is that</text>
<text top="550" left="108" width="396" height="9" font="font3" id="p9_t82" reading_order_no="81" segment_no="8" tag_type="text">here we do not report the delayed gradient attack as we have found it completely ineffective. We</text>
<text top="561" left="108" width="237" height="9" font="font3" id="p9_t83" reading_order_no="82" segment_no="8" tag_type="text">provide full configuration of this experiment in Appendix J .</text>
<text top="578" left="108" width="398" height="9" font="font3" id="p9_t84" reading_order_no="83" segment_no="9" tag_type="text">The results shown in Figure 3 demonstrate a similar pattern to what we have seen in Section 4.1 .</text>
<text top="588" left="108" width="397" height="10" font="font3" id="p9_t85" reading_order_no="84" segment_no="9" tag_type="text">During normal training, both τ values had no significant effect on the training progress. However,<a href="deeplearning_paper1.html#8">2</a></text>
<text top="599" left="108" width="396" height="10" font="font17" id="p9_t86" reading_order_no="85" segment_no="9" tag_type="text">τ = 0 . 125 shows significantly faster recovery against all three attacks. One important observation<a href="deeplearning_paper1.html#8">. </a>comparing to the All-Reduce baseline, we note that our method</text>
<text top="610" left="108" width="396" height="9" font="font3" id="p9_t87" reading_order_no="86" segment_no="9" tag_type="text">from these experiments is that while some attacks can significantly increase the loss function, model</text>
<text top="621" left="108" width="396" height="9" font="font3" id="p9_t88" reading_order_no="87" segment_no="9" tag_type="text">can recover from those attacks much faster than the time it takes to training from scratch with the</text>
<text top="632" left="108" width="396" height="9" font="font3" id="p9_t89" reading_order_no="88" segment_no="9" tag_type="text">same loss function. As such, we hypothesize that Byzantine attacks do much less harm the learned</text>
<text top="643" left="108" width="214" height="9" font="font3" id="p9_t90" reading_order_no="89" segment_no="9" tag_type="text">feature representation than to the classification layers.</text>
<text top="665" left="108" width="6" height="11" font="font6" id="p9_t91" reading_order_no="90" segment_no="3" tag_type="title">5</text>
<text top="665" left="126" width="57" height="11" font="font6" id="p9_t92" reading_order_no="91" segment_no="3" tag_type="title">Conclusion</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p9_t93" reading_order_no="92" segment_no="2" tag_type="text">In this work we formulated BTARD-SGD — a byzantine-tolerant training strategy for large neural</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p9_t94" reading_order_no="93" segment_no="2" tag_type="text">networks. We verified its robustness and effectiveness through rigorous theoretical analysis and</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p9_t95" reading_order_no="94" segment_no="2" tag_type="text">large-scale distributed training experiments. While our research is mostly algorithmical, it can open</text>
<text top="713" left="108" width="216" height="9" font="font3" id="p9_t96" reading_order_no="95" segment_no="2" tag_type="text">new opportunities in many deep learning applications.</text>
<text top="743" left="304" width="5" height="9" font="font3" id="p9_t97" reading_order_no="96" segment_no="1" tag_type="text">9</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font50" size="10" family="SFTT1000" color="#0000ff"/>
	<fontspec id="font51" size="10" family="CMMI10" color="#0000ff"/>
<text top="75" left="108" width="396" height="9" font="font3" id="p10_t1" reading_order_no="0" segment_no="0" tag_type="text">Perhaps the most important one is making it possible to train large neural networks in a cooperative</text>
<text top="86" left="108" width="396" height="9" font="font3" id="p10_t2" reading_order_no="1" segment_no="0" tag_type="text">manner. BTARD-SGD could allow small research groups to host open cooperative training projects</text>
<text top="97" left="108" width="396" height="9" font="font3" id="p10_t3" reading_order_no="2" segment_no="0" tag_type="text">where the training hardware is crowdsourced by volunteers around the world [ 92 ] or by a group of<a href="deeplearning_paper1.html#15">[</a></text>
<text top="108" left="108" width="396" height="9" font="font3" id="p10_t4" reading_order_no="3" segment_no="0" tag_type="text">small companies that can collectively compete with larger corporations by combining their compute<a href="deeplearning_paper1.html#15">92</a></text>
<text top="119" left="108" width="396" height="9" font="font3" id="p10_t5" reading_order_no="4" segment_no="0" tag_type="text">clusters in a single training “supercomputer”. While these two applications also need huge engineering<a href="deeplearning_paper1.html#15">] </a>or by a group of</text>
<text top="130" left="108" width="396" height="9" font="font3" id="p10_t6" reading_order_no="5" segment_no="0" tag_type="text">effort to become practical, our algorithm ensures that these projects can run securely and effectively</text>
<text top="141" left="108" width="246" height="9" font="font3" id="p10_t7" reading_order_no="6" segment_no="0" tag_type="text">without the need to carefully screen every potential volunteer.</text>
<text top="167" left="108" width="94" height="11" font="font6" id="p10_t8" reading_order_no="7" segment_no="1" tag_type="title">Acknowledgments</text>
<text top="191" left="108" width="396" height="9" font="font3" id="p10_t9" reading_order_no="8" segment_no="2" tag_type="text">Eduard Gorbunov was supported by the Ministry of Science and Higher Education of the Russian</text>
<text top="202" left="108" width="396" height="9" font="font3" id="p10_t10" reading_order_no="9" segment_no="2" tag_type="text">Federation (Goszadaniye) 075-00337-20-03, project No. 0714-2020-0005. We thank Sai Praneeth</text>
<text top="213" left="108" width="397" height="9" font="font3" id="p10_t11" reading_order_no="10" segment_no="2" tag_type="text">Karimireddy for useful discussions and suggestions, Lie He for providing the code with C ENTERED -</text>
<text top="224" left="108" width="396" height="9" font="font3" id="p10_t12" reading_order_no="11" segment_no="2" tag_type="text">C LIP , William Cappelletti for pointing out several relevant papers, Gennady Pekhimenko for his</text>
<text top="235" left="108" width="396" height="9" font="font3" id="p10_t13" reading_order_no="12" segment_no="2" tag_type="text">technical expertize and infrastructure support for actual distributed training experiments, and Dmitrii</text>
<text top="246" left="108" width="396" height="9" font="font3" id="p10_t14" reading_order_no="13" segment_no="2" tag_type="text">Emelianenko for helpful discussions. The computational resources for the experiments were provided</text>
<text top="257" left="108" width="204" height="9" font="font3" id="p10_t15" reading_order_no="14" segment_no="2" tag_type="text">entirely by the Amazon Research Awards program.</text>
<text top="283" left="108" width="56" height="11" font="font6" id="p10_t16" reading_order_no="15" segment_no="3" tag_type="title">References</text>
<text top="304" left="118" width="386" height="9" font="font3" id="p10_t17" reading_order_no="16" segment_no="4" tag_type="text">[1] The Atlas Collaboration. Observation of a new particle in the search for the Standard Model</text>
<text top="315" left="135" width="357" height="9" font="font3" id="p10_t18" reading_order_no="17" segment_no="4" tag_type="text">Higgs boson with the ATLAS detector at the LHC. Physics Letters B , 716:1–29, 09 2012.</text>
<text top="329" left="118" width="387" height="9" font="font3" id="p10_t19" reading_order_no="18" segment_no="5" tag_type="text">[2] Tara Ruttley, Julie Robinson, and William Gerstenmaier. The international space station:</text>
<text top="340" left="135" width="369" height="9" font="font3" id="p10_t20" reading_order_no="19" segment_no="5" tag_type="text">Collaboration, utilization, and commercialization*: The international space station. Social</text>
<text top="351" left="134" width="175" height="9" font="font13" id="p10_t21" reading_order_no="20" segment_no="5" tag_type="text">Science Quarterly , 98:1160–1174, 12 2017.</text>
<text top="365" left="118" width="386" height="9" font="font3" id="p10_t22" reading_order_no="21" segment_no="6" tag_type="text">[3] The Ligo Scientific Collaboration and The Virgo Collaboration. Observation of Gravitational</text>
<text top="376" left="134" width="325" height="9" font="font3" id="p10_t23" reading_order_no="22" segment_no="6" tag_type="text">Waves from a Binary Black Hole Merger. Physical Review Letters , 116, 02 2016.</text>
<text top="391" left="118" width="386" height="9" font="font3" id="p10_t24" reading_order_no="23" segment_no="7" tag_type="text">[4] A. L. Beberg, D. Ensign, G. Jayachandran, S. Khaliq, and V. Pande. Folding@home: Lessons</text>
<text top="402" left="135" width="369" height="9" font="font3" id="p10_t25" reading_order_no="24" segment_no="7" tag_type="text">from eight years of volunteer distributed computing. 2009 IEEE International Symposium on</text>
<text top="412" left="134" width="208" height="10" font="font13" id="p10_t26" reading_order_no="25" segment_no="7" tag_type="text">Parallel &amp; Distributed Processing , pages 1–8, 2009.</text>
<text top="427" left="118" width="386" height="9" font="font3" id="p10_t27" reading_order_no="26" segment_no="8" tag_type="text">[5] David P Anderson. Boinc: A system for public-resource computing and storage. In Fifth</text>
<text top="438" left="134" width="321" height="9" font="font13" id="p10_t28" reading_order_no="27" segment_no="8" tag_type="text">IEEE/ACM international workshop on grid computing , pages 4–10. IEEE, 2004.</text>
<text top="452" left="118" width="387" height="9" font="font3" id="p10_t29" reading_order_no="28" segment_no="9" tag_type="text">[6] Folding@home gets 1.5+ Exaflops to Fight COVID-19 . https://blogs . nvidia . com/blog/</text>
<text top="463" left="135" width="348" height="9" font="font50" id="p10_t30" reading_order_no="29" segment_no="9" tag_type="text">2020/04/01/foldingathome-exaflop-coronavirus/ (accessed on Apr 29, 2021).</text>
<text top="478" left="118" width="386" height="9" font="font3" id="p10_t31" reading_order_no="30" segment_no="10" tag_type="text">[7] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of</text>
<text top="488" left="135" width="344" height="10" font="font3" id="p10_t32" reading_order_no="31" segment_no="10" tag_type="text">Deep Bidirectional Transformers for Language Understanding. In NAACL-HLT , 2019.</text>
<text top="503" left="118" width="388" height="9" font="font3" id="p10_t33" reading_order_no="32" segment_no="11" tag_type="text">[8] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhari-</text>
<text top="514" left="134" width="371" height="9" font="font3" id="p10_t34" reading_order_no="33" segment_no="11" tag_type="text">wal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal,</text>
<text top="525" left="134" width="370" height="9" font="font3" id="p10_t35" reading_order_no="34" segment_no="11" tag_type="text">Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel</text>
<text top="536" left="135" width="371" height="9" font="font3" id="p10_t36" reading_order_no="35" segment_no="11" tag_type="text">Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin,</text>
<text top="546" left="135" width="371" height="9" font="font3" id="p10_t37" reading_order_no="36" segment_no="11" tag_type="text">Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford,</text>
<text top="557" left="135" width="371" height="9" font="font3" id="p10_t38" reading_order_no="37" segment_no="11" tag_type="text">Ilya Sutskever, and Dario Amodei. Language models are few-shot learners. In H. Larochelle,</text>
<text top="568" left="135" width="369" height="9" font="font3" id="p10_t39" reading_order_no="38" segment_no="11" tag_type="text">M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, Advances in Neural Information</text>
<text top="579" left="134" width="325" height="9" font="font13" id="p10_t40" reading_order_no="39" segment_no="11" tag_type="text">Processing Systems , volume 33, pages 1877–1901. Curran Associates, Inc., 2020.</text>
<text top="594" left="118" width="387" height="9" font="font3" id="p10_t41" reading_order_no="40" segment_no="12" tag_type="text">[9] Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy,</text>
<text top="605" left="135" width="369" height="9" font="font3" id="p10_t42" reading_order_no="41" segment_no="12" tag_type="text">Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. Roberta: A robustly optimized bert</text>
<text top="615" left="135" width="208" height="10" font="font3" id="p10_t43" reading_order_no="42" segment_no="12" tag_type="text">pretraining approach. ArXiv , abs/1907.11692, 2019.</text>
<text top="630" left="113" width="391" height="9" font="font3" id="p10_t44" reading_order_no="43" segment_no="13" tag_type="text">[10] Chen Sun, Abhinav Shrivastava, Saurabh Singh, and Abhinav Gupta. Revisiting unreasonable</text>
<text top="641" left="135" width="369" height="9" font="font3" id="p10_t45" reading_order_no="44" segment_no="13" tag_type="text">effectiveness of data in deep learning era. In Proceedings of the IEEE International Conference</text>
<text top="652" left="135" width="155" height="9" font="font13" id="p10_t46" reading_order_no="45" segment_no="13" tag_type="text">on Computer Vision (ICCV) , Oct 2017.</text>
<text top="666" left="113" width="392" height="9" font="font3" id="p10_t47" reading_order_no="46" segment_no="14" tag_type="text">[11] Alexander Kolesnikov, Lucas Beyer, Xiaohua Zhai, Joan Puigcerver, Jessica Yung, S. Gelly,</text>
<text top="677" left="135" width="362" height="9" font="font3" id="p10_t48" reading_order_no="47" segment_no="14" tag_type="text">and N. Houlsby. Big transfer (bit): General visual representation learning. In ECCV , 2020.<a href="https://blogs.nvidia.com/blog/2020/04/01/foldingathome-exaflop-coronavirus/">https://blogs</a></text>
<text top="691" left="113" width="391" height="9" font="font3" id="p10_t49" reading_order_no="48" segment_no="15" tag_type="text">[12] Priya Goyal, Quentin Duval, Jeremy Reizenstein, Matthew Leavitt, Min Xu, Benjamin<a href="https://blogs.nvidia.com/blog/2020/04/01/foldingathome-exaflop-coronavirus/">.</a></text>
<text top="702" left="135" width="371" height="9" font="font3" id="p10_t50" reading_order_no="49" segment_no="15" tag_type="text">Lefaudeux, Mannat Singh, Vinicius Reis, Mathilde Caron, Piotr Bojanowski, Armand Joulin,<a href="https://blogs.nvidia.com/blog/2020/04/01/foldingathome-exaflop-coronavirus/">nvidia</a></text>
<text top="713" left="135" width="335" height="9" font="font3" id="p10_t51" reading_order_no="50" segment_no="15" tag_type="text">and Ishan Misra. Vissl. https://github . com/facebookresearch/vissl , 2021.<a href="https://blogs.nvidia.com/blog/2020/04/01/foldingathome-exaflop-coronavirus/">.</a></text>
<text top="743" left="301" width="10" height="9" font="font3" id="p10_t52" reading_order_no="51" segment_no="16" tag_type="text">10<a href="https://blogs.nvidia.com/blog/2020/04/01/foldingathome-exaflop-coronavirus/">com/blog/</a></text>
</page>
<page number="11" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="113" width="391" height="9" font="font3" id="p11_t1" reading_order_no="0" segment_no="0" tag_type="text">[13] Ekasit Kijsipongse, Apivadee Piyatumrong, and Suriya U-ruekolan. A hybrid gpu cluster and</text>
<text top="86" left="134" width="370" height="9" font="font3" id="p11_t2" reading_order_no="1" segment_no="0" tag_type="text">volunteer computing platform for scalable deep learning. The Journal of Supercomputing , 04</text>
<text top="97" left="135" width="22" height="9" font="font3" id="p11_t3" reading_order_no="2" segment_no="0" tag_type="text">2018.</text>
<text top="113" left="113" width="391" height="9" font="font3" id="p11_t4" reading_order_no="3" segment_no="1" tag_type="text">[14] Max Ryabinin and Anton Gusev. Towards crowdsourced training of large neural networks</text>
<text top="124" left="135" width="371" height="9" font="font3" id="p11_t5" reading_order_no="4" segment_no="1" tag_type="text">using decentralized mixture-of-experts. In H. Larochelle, M. Ranzato, R. Hadsell, M. F.</text>
<text top="135" left="135" width="371" height="9" font="font3" id="p11_t6" reading_order_no="5" segment_no="1" tag_type="text">Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems , volume 33,</text>
<text top="146" left="135" width="195" height="9" font="font3" id="p11_t7" reading_order_no="6" segment_no="1" tag_type="text">pages 3659–3672. Curran Associates, Inc., 2020.</text>
<text top="162" left="113" width="391" height="9" font="font3" id="p11_t8" reading_order_no="7" segment_no="2" tag_type="text">[15] Medha Atre, Birendra Jha, and Ashwini Rao. Distributed deep learning using volunteer</text>
<text top="173" left="135" width="128" height="9" font="font3" id="p11_t9" reading_order_no="8" segment_no="2" tag_type="text">computing-like paradigm, 2021.</text>
<text top="189" left="113" width="393" height="9" font="font3" id="p11_t10" reading_order_no="9" segment_no="3" tag_type="text">[16] Brendan McMahan, Eider Moore, Daniel Ramage, Seth Hampson, and Blaise Aguera y Arcas.</text>
<text top="200" left="135" width="369" height="9" font="font3" id="p11_t11" reading_order_no="10" segment_no="3" tag_type="text">Communication-efficient learning of deep networks from decentralized data. In Artificial</text>
<text top="211" left="134" width="205" height="9" font="font13" id="p11_t12" reading_order_no="11" segment_no="3" tag_type="text">Intelligence and Statistics , pages 1273–1282, 2017.</text>
<text top="227" left="113" width="393" height="9" font="font3" id="p11_t13" reading_order_no="12" segment_no="4" tag_type="text">[17] Andrew Hard, Chloé M Kiddon, Daniel Ramage, Francoise Beaufays, Hubert Eichner, Kan-</text>
<text top="237" left="135" width="369" height="9" font="font3" id="p11_t14" reading_order_no="13" segment_no="4" tag_type="text">ishka Rao, Rajiv Mathews, and Sean Augenstein. Federated learning for mobile keyboard</text>
<text top="248" left="135" width="68" height="9" font="font3" id="p11_t15" reading_order_no="14" segment_no="4" tag_type="text">prediction, 2018.</text>
<text top="264" left="113" width="392" height="9" font="font3" id="p11_t16" reading_order_no="15" segment_no="5" tag_type="text">[18] K. A. Bonawitz, Hubert Eichner, Wolfgang Grieskamp, Dzmitry Huba, Alex Ingerman,</text>
<text top="275" left="134" width="371" height="9" font="font3" id="p11_t17" reading_order_no="16" segment_no="5" tag_type="text">Vladimir Ivanov, Chloé M Kiddon, Jakub Koneˇcný, Stefano Mazzocchi, Brendan McMahan,</text>
<text top="286" left="134" width="370" height="9" font="font3" id="p11_t18" reading_order_no="17" segment_no="5" tag_type="text">Timon Van Overveldt, David Petrou, Daniel Ramage, and Jason Roselander. Towards federated</text>
<text top="297" left="135" width="266" height="9" font="font3" id="p11_t19" reading_order_no="18" segment_no="5" tag_type="text">learning at scale: System design. In SysML 2019 , 2019. To appear.</text>
<text top="313" left="113" width="391" height="9" font="font3" id="p11_t20" reading_order_no="19" segment_no="6" tag_type="text">[19] Li Huang and Dianbo Liu. Patient clustering improves efficiency of federated machine learning</text>
<text top="324" left="135" width="371" height="9" font="font3" id="p11_t21" reading_order_no="20" segment_no="6" tag_type="text">to predict mortality and hospital stay time using distributed electronic medical records, 2019.</text>
<text top="340" left="113" width="393" height="9" font="font3" id="p11_t22" reading_order_no="21" segment_no="7" tag_type="text">[20] Flakey amd/ati gpus, including rx 5700 xt, cross validating, polluting the database. ttps:</text>
<text top="351" left="134" width="358" height="9" font="font50" id="p11_t23" reading_order_no="22" segment_no="7" tag_type="text">//setiathome . berkeley . edu/forum_thread . php?id=84508 . Accessed: 2021-05-20.</text>
<text top="367" left="113" width="391" height="9" font="font3" id="p11_t24" reading_order_no="23" segment_no="8" tag_type="text">[21] Vale Tolpegin, Stacey Truex, Mehmet Emre Gursoy, and Ling Liu. Data poisoning attacks</text>
<text top="378" left="135" width="164" height="9" font="font3" id="p11_t25" reading_order_no="24" segment_no="8" tag_type="text">against federated learning systems, 2020.</text>
<text top="394" left="113" width="354" height="9" font="font3" id="p11_t26" reading_order_no="25" segment_no="9" tag_type="text">[22] Lingjiao Chen, Hongyi Wang, Zachary Charles, and Dimitris Papailiopoulos.</text>
<text top="394" left="478" width="28" height="9" font="font3" id="p11_t27" reading_order_no="26" segment_no="9" tag_type="text">Draco:</text>
<text top="405" left="135" width="369" height="9" font="font3" id="p11_t28" reading_order_no="27" segment_no="9" tag_type="text">Byzantine-resilient distributed training via redundant gradients. In International Conference</text>
<text top="416" left="135" width="211" height="9" font="font13" id="p11_t29" reading_order_no="28" segment_no="9" tag_type="text">on Machine Learning , pages 903–912. PMLR, 2018.</text>
<text top="432" left="113" width="391" height="9" font="font3" id="p11_t30" reading_order_no="29" segment_no="10" tag_type="text">[23] Shashank Rajput, Hongyi Wang, Zachary Charles, and Dimitris Papailiopoulos. Detox: A</text>
<text top="443" left="135" width="371" height="9" font="font3" id="p11_t31" reading_order_no="30" segment_no="10" tag_type="text">redundancy-based framework for faster and more robust gradient aggregation. In H. Wallach,<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">ttps:</a></text>
<text top="454" left="135" width="369" height="9" font="font3" id="p11_t32" reading_order_no="31" segment_no="10" tag_type="text">H. Larochelle, A. Beygelzimer, F. d'Alché-Buc, E. Fox, and R. Garnett, editors, Advances in<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">//setiathome</a></text>
<text top="464" left="134" width="330" height="10" font="font13" id="p11_t33" reading_order_no="32" segment_no="10" tag_type="text">Neural Information Processing Systems , volume 32. Curran Associates, Inc., 2019.<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">.</a></text>
<text top="480" left="113" width="392" height="9" font="font3" id="p11_t34" reading_order_no="33" segment_no="11" tag_type="text">[24] Shen Li, Yanli Zhao, Rohan Varma, Omkar Salpekar, Pieter Noordhuis, Teng Li, Adam Paszke,<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">berkeley</a></text>
<text top="491" left="134" width="371" height="9" font="font3" id="p11_t35" reading_order_no="34" segment_no="11" tag_type="text">Jeff Smith, Brian Vaughan, Pritam Damania, and Soumith Chintala. Pytorch distributed:<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">.</a></text>
<text top="502" left="135" width="370" height="9" font="font3" id="p11_t36" reading_order_no="35" segment_no="11" tag_type="text">Experiences on accelerating data parallel training. Proc. VLDB Endow. , 13(12):3005–3018,<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">edu/forum_thread</a></text>
<text top="513" left="134" width="54" height="9" font="font3" id="p11_t37" reading_order_no="36" segment_no="11" tag_type="text">August 2020.<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">.</a></text>
<text top="529" left="113" width="391" height="9" font="font3" id="p11_t38" reading_order_no="37" segment_no="12" tag_type="text">[25] Alexander Sergeev and Mike Del Balso. Horovod: fast and easy distributed deep learning in<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">php?id=84508</a></text>
<text top="540" left="135" width="69" height="9" font="font3" id="p11_t39" reading_order_no="38" segment_no="12" tag_type="text">tensorflow, 2018.<a href="ttps://setiathome.berkeley.edu/forum_thread.php?id=84508">. </a>Accessed: 2021-05-20.</text>
<text top="556" left="113" width="391" height="9" font="font3" id="p11_t40" reading_order_no="39" segment_no="13" tag_type="text">[26] Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, and Bryan</text>
<text top="567" left="135" width="369" height="9" font="font3" id="p11_t41" reading_order_no="40" segment_no="13" tag_type="text">Catanzaro. Megatron-lm: Training multi-billion parameter language models using gpu model</text>
<text top="578" left="135" width="209" height="9" font="font3" id="p11_t42" reading_order_no="41" segment_no="13" tag_type="text">parallelism. arXiv preprint arXiv:1909.08053 , 2019.</text>
<text top="594" left="113" width="392" height="9" font="font3" id="p11_t43" reading_order_no="42" segment_no="14" tag_type="text">[27] Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola,</text>
<text top="605" left="134" width="370" height="9" font="font3" id="p11_t44" reading_order_no="43" segment_no="14" tag_type="text">Andrew Tulloch, Yangqing Jia, and Kaiming He. Accurate, large minibatch sgd: Training</text>
<text top="616" left="135" width="102" height="9" font="font3" id="p11_t45" reading_order_no="44" segment_no="14" tag_type="text">imagenet in 1 hour, 2017.</text>
<text top="632" left="113" width="391" height="9" font="font3" id="p11_t46" reading_order_no="45" segment_no="15" tag_type="text">[28] Y. Huang, Yonglong Cheng, Dehao Chen, HyoukJoong Lee, Jiquan Ngiam, Quoc V. Le, and</text>
<text top="643" left="135" width="370" height="9" font="font3" id="p11_t47" reading_order_no="46" segment_no="15" tag_type="text">Z. Chen. Gpipe: Efficient training of giant neural networks using pipeline parallelism. ArXiv ,</text>
<text top="654" left="135" width="91" height="9" font="font3" id="p11_t48" reading_order_no="47" segment_no="15" tag_type="text">abs/1811.06965, 2019.</text>
<text top="670" left="113" width="392" height="9" font="font3" id="p11_t49" reading_order_no="48" segment_no="16" tag_type="text">[29] Deepak Narayanan, Aaron Harlap, Amar Phanishayee, Vivek Seshadri, Nikhil R. Devanur,</text>
<text top="681" left="135" width="369" height="9" font="font3" id="p11_t50" reading_order_no="49" segment_no="16" tag_type="text">Gregory R. Ganger, Phillip B. Gibbons, and Matei Zaharia. Pipedream: Generalized pipeline</text>
<text top="691" left="135" width="369" height="10" font="font3" id="p11_t51" reading_order_no="50" segment_no="16" tag_type="text">parallelism for dnn training. In Proceedings of the 27th ACM Symposium on Operating Systems</text>
<text top="702" left="134" width="370" height="9" font="font13" id="p11_t52" reading_order_no="51" segment_no="16" tag_type="text">Principles , SOSP ’19, page 1–15, New York, NY, USA, 2019. Association for Computing</text>
<text top="713" left="135" width="45" height="9" font="font3" id="p11_t53" reading_order_no="52" segment_no="16" tag_type="text">Machinery.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p11_t54" reading_order_no="53" segment_no="17" tag_type="text">11</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="113" width="393" height="9" font="font3" id="p12_t1" reading_order_no="0" segment_no="0" tag_type="text">[30] Samyam Rajbhandari, Jeff Rasley, Olatunji Ruwase, and Yuxiong He. Zero: Memory opti-</text>
<text top="86" left="135" width="369" height="9" font="font3" id="p12_t2" reading_order_no="1" segment_no="0" tag_type="text">mizations toward training trillion parameter models. SC20: International Conference for High</text>
<text top="97" left="134" width="316" height="9" font="font13" id="p12_t3" reading_order_no="2" segment_no="0" tag_type="text">Performance Computing, Networking, Storage and Analysis , pages 1–16, 2020.</text>
<text top="112" left="113" width="392" height="9" font="font3" id="p12_t4" reading_order_no="3" segment_no="1" tag_type="text">[31] Deepak Narayanan, Mohammad Shoeybi, Jared Casper, Patrick LeGresley, Mostofa Patwary,</text>
<text top="123" left="134" width="371" height="9" font="font3" id="p12_t5" reading_order_no="4" segment_no="1" tag_type="text">Vijay Korthikanti, Dmitri Vainbrand, Prethvi Kashinkunti, Julie Bernauer, Bryan Catan-</text>
<text top="134" left="135" width="369" height="9" font="font3" id="p12_t6" reading_order_no="5" segment_no="1" tag_type="text">zaro, et al. Efficient large-scale language model training on gpu clusters. arXiv preprint</text>
<text top="145" left="135" width="99" height="9" font="font13" id="p12_t7" reading_order_no="6" segment_no="1" tag_type="text">arXiv:2104.04473 , 2021.</text>
<text top="160" left="113" width="391" height="9" font="font3" id="p12_t8" reading_order_no="7" segment_no="2" tag_type="text">[32] Martin Zinkevich, Markus Weimer, Lihong Li, and Alex Smola. Parallelized stochastic</text>
<text top="170" left="135" width="371" height="9" font="font3" id="p12_t9" reading_order_no="8" segment_no="2" tag_type="text">gradient descent. In J. Lafferty, C. Williams, J. Shawe-Taylor, R. Zemel, and A. Culotta,</text>
<text top="181" left="135" width="370" height="9" font="font3" id="p12_t10" reading_order_no="9" segment_no="2" tag_type="text">editors, Advances in Neural Information Processing Systems , volume 23, pages 2595–2603.</text>
<text top="192" left="135" width="120" height="9" font="font3" id="p12_t11" reading_order_no="10" segment_no="2" tag_type="text">Curran Associates, Inc., 2010.</text>
<text top="207" left="113" width="391" height="9" font="font3" id="p12_t12" reading_order_no="11" segment_no="3" tag_type="text">[33] Anastasia Koloskova, Nicolas Loizou, Sadra Boreiri, Martin Jaggi, and Sebastian Stich. A</text>
<text top="218" left="135" width="369" height="9" font="font3" id="p12_t13" reading_order_no="12" segment_no="3" tag_type="text">unified theory of decentralized sgd with changing topology and local updates. In International</text>
<text top="229" left="134" width="268" height="9" font="font13" id="p12_t14" reading_order_no="13" segment_no="3" tag_type="text">Conference on Machine Learning , pages 5381–5393. PMLR, 2020.</text>
<text top="244" left="113" width="391" height="9" font="font3" id="p12_t15" reading_order_no="14" segment_no="4" tag_type="text">[34] Eduard Gorbunov, Filip Hanzely, and Peter Richtarik. Local sgd: Unified theory and new</text>
<text top="255" left="135" width="369" height="9" font="font3" id="p12_t16" reading_order_no="15" segment_no="4" tag_type="text">efficient methods. In Arindam Banerjee and Kenji Fukumizu, editors, Proceedings of The 24th</text>
<text top="266" left="134" width="370" height="9" font="font13" id="p12_t17" reading_order_no="16" segment_no="4" tag_type="text">International Conference on Artificial Intelligence and Statistics , volume 130 of Proceedings</text>
<text top="277" left="135" width="303" height="9" font="font13" id="p12_t18" reading_order_no="17" segment_no="4" tag_type="text">of Machine Learning Research , pages 3556–3564. PMLR, 13–15 Apr 2021.</text>
<text top="292" left="113" width="391" height="9" font="font3" id="p12_t19" reading_order_no="18" segment_no="5" tag_type="text">[35] Mahmoud Assran, Nicolas Loizou, Nicolas Ballas, and Mike Rabbat. Stochastic gradient</text>
<text top="302" left="135" width="371" height="9" font="font3" id="p12_t20" reading_order_no="19" segment_no="5" tag_type="text">push for distributed deep learning. In Kamalika Chaudhuri and Ruslan Salakhutdinov, edi-</text>
<text top="313" left="135" width="369" height="9" font="font3" id="p12_t21" reading_order_no="20" segment_no="5" tag_type="text">tors, Proceedings of the 36th International Conference on Machine Learning , volume 97 of</text>
<text top="324" left="134" width="343" height="9" font="font13" id="p12_t22" reading_order_no="21" segment_no="5" tag_type="text">Proceedings of Machine Learning Research , pages 344–353. PMLR, 09–15 Jun 2019.</text>
<text top="339" left="113" width="391" height="9" font="font3" id="p12_t23" reading_order_no="22" segment_no="6" tag_type="text">[36] Jianyu Wang, Vinayak Tantia, Nicolas Ballas, and Michael Rabbat. Slowmo: Improving</text>
<text top="350" left="135" width="369" height="9" font="font3" id="p12_t24" reading_order_no="23" segment_no="6" tag_type="text">communication-efficient distributed sgd with slow momentum. In International Conference</text>
<text top="361" left="135" width="142" height="9" font="font13" id="p12_t25" reading_order_no="24" segment_no="6" tag_type="text">on Learning Representations , 2020.</text>
<text top="376" left="113" width="393" height="9" font="font3" id="p12_t26" reading_order_no="25" segment_no="7" tag_type="text">[37] Samyam Rajbhandari, Olatunji Ruwase, Jeff Rasley, Shaden Smith, and Yuxiong He. Zero-</text>
<text top="387" left="135" width="313" height="9" font="font3" id="p12_t27" reading_order_no="26" segment_no="7" tag_type="text">infinity: Breaking the gpu memory wall for extreme scale deep learning, 2021.</text>
<text top="402" left="113" width="391" height="9" font="font3" id="p12_t28" reading_order_no="27" segment_no="8" tag_type="text">[38] Mu Li. Scaling distributed machine learning with the parameter server. In Proceedings of</text>
<text top="413" left="135" width="370" height="9" font="font13" id="p12_t29" reading_order_no="28" segment_no="8" tag_type="text">the 2014 International Conference on Big Data Science and Computing , BigDataScience ’14,</text>
<text top="423" left="135" width="269" height="9" font="font3" id="p12_t30" reading_order_no="29" segment_no="8" tag_type="text">New York, NY, USA, 2014. Association for Computing Machinery.</text>
<text top="438" left="113" width="391" height="9" font="font3" id="p12_t31" reading_order_no="30" segment_no="9" tag_type="text">[39] Jeffrey Dean, Greg Corrado, Rajat Monga, Kai Chen, Matthieu Devin, Mark Mao, Marc' aurelio</text>
<text top="449" left="135" width="369" height="9" font="font3" id="p12_t32" reading_order_no="31" segment_no="9" tag_type="text">Ranzato, Andrew Senior, Paul Tucker, Ke Yang, Quoc Le, and Andrew Ng. Large scale</text>
<text top="460" left="135" width="371" height="9" font="font3" id="p12_t33" reading_order_no="32" segment_no="9" tag_type="text">distributed deep networks. In F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,</text>
<text top="471" left="135" width="370" height="9" font="font3" id="p12_t34" reading_order_no="33" segment_no="9" tag_type="text">editors, Advances in Neural Information Processing Systems , volume 25, pages 1223–1231.</text>
<text top="482" left="135" width="120" height="9" font="font3" id="p12_t35" reading_order_no="34" segment_no="9" tag_type="text">Curran Associates, Inc., 2012.</text>
<text top="497" left="113" width="391" height="9" font="font3" id="p12_t36" reading_order_no="35" segment_no="10" tag_type="text">[40] Benjamin Recht, Christopher Re, Stephen Wright, and Feng Niu. Hogwild: A lock-free</text>
<text top="508" left="135" width="370" height="9" font="font3" id="p12_t37" reading_order_no="36" segment_no="10" tag_type="text">approach to parallelizing stochastic gradient descent. In Advances in neural information</text>
<text top="519" left="135" width="167" height="9" font="font13" id="p12_t38" reading_order_no="37" segment_no="10" tag_type="text">processing systems , pages 693–701, 2011.</text>
<text top="534" left="113" width="391" height="9" font="font3" id="p12_t39" reading_order_no="38" segment_no="11" tag_type="text">[41] Yimin Jiang, Yibo Zhu, Chang Lan, Bairen Yi, Yong Cui, and Chuanxiong Guo. A unified</text>
<text top="545" left="135" width="369" height="9" font="font3" id="p12_t40" reading_order_no="39" segment_no="11" tag_type="text">architecture for accelerating distributed DNN training in heterogeneous gpu/cpu clusters. In</text>
<text top="555" left="134" width="370" height="10" font="font13" id="p12_t41" reading_order_no="40" segment_no="11" tag_type="text">14th USENIX Symposium on Operating Systems Design and Implementation (OSDI 20) , pages</text>
<text top="566" left="134" width="198" height="9" font="font3" id="p12_t42" reading_order_no="41" segment_no="11" tag_type="text">463–479. USENIX Association, November 2020.</text>
<text top="581" left="113" width="391" height="9" font="font3" id="p12_t43" reading_order_no="42" segment_no="12" tag_type="text">[42] Frank Seide, Hao Fu, Jasha Droppo, Gang Li, and Dong Yu. 1-bit stochastic gradient descent</text>
<text top="592" left="135" width="369" height="9" font="font3" id="p12_t44" reading_order_no="43" segment_no="12" tag_type="text">and its application to data-parallel distributed training of speech dnns. In Fifteenth Annual</text>
<text top="603" left="134" width="298" height="9" font="font13" id="p12_t45" reading_order_no="44" segment_no="12" tag_type="text">Conference of the International Speech Communication Association , 2014.</text>
<text top="618" left="113" width="392" height="9" font="font3" id="p12_t46" reading_order_no="45" segment_no="13" tag_type="text">[43] Dan Alistarh, Demjan Grubic, Jerry Z Li, Ryota Tomioka, and Milan Vojnovic. Qsgd:</text>
<text top="629" left="135" width="369" height="9" font="font3" id="p12_t47" reading_order_no="46" segment_no="13" tag_type="text">communication-efficient sgd via gradient quantization and encoding. In Proceedings of the</text>
<text top="640" left="134" width="372" height="9" font="font13" id="p12_t48" reading_order_no="47" segment_no="13" tag_type="text">31st International Conference on Neural Information Processing Systems , pages 1707–1718,</text>
<text top="651" left="135" width="22" height="9" font="font3" id="p12_t49" reading_order_no="48" segment_no="13" tag_type="text">2017.</text>
<text top="666" left="113" width="393" height="9" font="font3" id="p12_t50" reading_order_no="49" segment_no="14" tag_type="text">[44] Yujun Lin, Song Han, Huizi Mao, Yu Wang, and William J Dally. Deep Gradient Compres-</text>
<text top="677" left="135" width="369" height="9" font="font3" id="p12_t51" reading_order_no="50" segment_no="14" tag_type="text">sion: Reducing the communication bandwidth for distributed training. In The International</text>
<text top="687" left="134" width="191" height="10" font="font13" id="p12_t52" reading_order_no="51" segment_no="14" tag_type="text">Conference on Learning Representations , 2018.</text>
<text top="702" left="113" width="391" height="9" font="font3" id="p12_t53" reading_order_no="52" segment_no="15" tag_type="text">[45] Konstantin Mishchenko, Eduard Gorbunov, Martin Takáˇc, and Peter Richtárik. Distributed</text>
<text top="713" left="135" width="349" height="9" font="font3" id="p12_t54" reading_order_no="53" segment_no="15" tag_type="text">learning with compressed gradient differences. arXiv preprint arXiv:1901.09269 , 2019.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p12_t55" reading_order_no="54" segment_no="16" tag_type="text">12</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="113" width="391" height="9" font="font3" id="p13_t1" reading_order_no="0" segment_no="0" tag_type="text">[46] Anastasia Koloskova*, Tao Lin*, Sebastian U Stich, and Martin Jaggi. Decentralized deep</text>
<text top="86" left="135" width="369" height="9" font="font3" id="p13_t2" reading_order_no="1" segment_no="0" tag_type="text">learning with arbitrary communication compression. In International Conference on Learning</text>
<text top="97" left="134" width="91" height="9" font="font13" id="p13_t3" reading_order_no="2" segment_no="0" tag_type="text">Representations , 2020.</text>
<text top="112" left="113" width="393" height="9" font="font3" id="p13_t4" reading_order_no="3" segment_no="1" tag_type="text">[47] Eduard Gorbunov, Dmitry Kovalev, Dmitry Makarenko, and Peter Richtárik. Linearly con-</text>
<text top="123" left="134" width="372" height="9" font="font3" id="p13_t5" reading_order_no="4" segment_no="1" tag_type="text">verging error compensated sgd. Advances in Neural Information Processing Systems , 33,</text>
<text top="134" left="135" width="22" height="9" font="font3" id="p13_t6" reading_order_no="5" segment_no="1" tag_type="text">2020.</text>
<text top="149" left="113" width="391" height="9" font="font3" id="p13_t7" reading_order_no="6" segment_no="2" tag_type="text">[48] Eduard Gorbunov, Konstantin Burlachenko, Zhize Li, and Peter Richtárik. Marina: Faster</text>
<text top="160" left="135" width="364" height="9" font="font3" id="p13_t8" reading_order_no="7" segment_no="2" tag_type="text">non-convex distributed learning with compression. arXiv preprint arXiv:2102.07845 , 2021.</text>
<text top="175" left="113" width="391" height="9" font="font3" id="p13_t9" reading_order_no="8" segment_no="3" tag_type="text">[49] Hiroaki Mikami, Hisahiro Suganuma, Pongsakorn U-chupala, Yoshiki Tanaka, and Yuichi</text>
<text top="186" left="135" width="332" height="9" font="font3" id="p13_t10" reading_order_no="9" segment_no="3" tag_type="text">Kageyama. Massively distributed sgd: Imagenet/resnet-50 training in a flash, 2019.</text>
<text top="201" left="113" width="392" height="9" font="font3" id="p13_t11" reading_order_no="10" segment_no="4" tag_type="text">[50] Yang You, Jing Li, Sashank Reddi, Jonathan Hseu, Sanjiv Kumar, Srinadh Bhojanapalli,</text>
<text top="212" left="134" width="370" height="9" font="font3" id="p13_t12" reading_order_no="11" segment_no="4" tag_type="text">Xiaodan Song, James Demmel, Kurt Keutzer, and Cho-Jui Hsieh. Large batch optimization</text>
<text top="223" left="135" width="369" height="9" font="font3" id="p13_t13" reading_order_no="12" segment_no="4" tag_type="text">for deep learning: Training bert in 76 minutes. In International Conference on Learning</text>
<text top="234" left="134" width="91" height="9" font="font13" id="p13_t14" reading_order_no="13" segment_no="4" tag_type="text">Representations , 2020.</text>
<text top="249" left="113" width="391" height="9" font="font3" id="p13_t15" reading_order_no="14" segment_no="5" tag_type="text">[51] Peva Blanchard, El Mahdi El Mhamdi, Rachid Guerraoui, and Julien Stainer. Machine learning</text>
<text top="260" left="134" width="370" height="9" font="font3" id="p13_t16" reading_order_no="15" segment_no="5" tag_type="text">with adversaries: Byzantine tolerant gradient descent. In Proceedings of the 31st International</text>
<text top="271" left="134" width="311" height="9" font="font13" id="p13_t17" reading_order_no="16" segment_no="5" tag_type="text">Conference on Neural Information Processing Systems , pages 118–128, 2017.</text>
<text top="286" left="113" width="393" height="9" font="font3" id="p13_t18" reading_order_no="17" segment_no="6" tag_type="text">[52] Dong Yin, Yudong Chen, Ramchandran Kannan, and Peter Bartlett. Byzantine-robust dis-</text>
<text top="297" left="135" width="369" height="9" font="font3" id="p13_t19" reading_order_no="18" segment_no="6" tag_type="text">tributed learning: Towards optimal statistical rates. In International Conference on Machine</text>
<text top="307" left="134" width="171" height="10" font="font13" id="p13_t20" reading_order_no="19" segment_no="6" tag_type="text">Learning , pages 5650–5659. PMLR, 2018.</text>
<text top="323" left="113" width="391" height="9" font="font3" id="p13_t21" reading_order_no="20" segment_no="7" tag_type="text">[53] Georgios Damaskinos, El Mahdi El Mhamdi, Rachid Guerraoui, Arsany Hany Abdelmessih</text>
<text top="333" left="135" width="369" height="9" font="font3" id="p13_t22" reading_order_no="21" segment_no="7" tag_type="text">Guirguis, and Sébastien Louis Alexandre Rouault. Aggregathor: Byzantine machine learning</text>
<text top="344" left="134" width="372" height="9" font="font3" id="p13_t23" reading_order_no="22" segment_no="7" tag_type="text">via robust gradient aggregation. In The Conference on Systems and Machine Learning (SysML),</text>
<text top="355" left="134" width="47" height="9" font="font13" id="p13_t24" reading_order_no="23" segment_no="7" tag_type="text">2019 , 2019.</text>
<text top="370" left="113" width="391" height="9" font="font3" id="p13_t25" reading_order_no="24" segment_no="8" tag_type="text">[54] El Mahdi El Mhamdi, Rachid Guerraoui, and Sébastien Rouault. The hidden vulnerability of</text>
<text top="381" left="135" width="369" height="9" font="font3" id="p13_t26" reading_order_no="25" segment_no="8" tag_type="text">distributed learning in Byzantium. In Jennifer Dy and Andreas Krause, editors, Proceedings</text>
<text top="392" left="135" width="369" height="9" font="font13" id="p13_t27" reading_order_no="26" segment_no="8" tag_type="text">of the 35th International Conference on Machine Learning , volume 80 of Proceedings of</text>
<text top="403" left="134" width="289" height="9" font="font13" id="p13_t28" reading_order_no="27" segment_no="8" tag_type="text">Machine Learning Research , pages 3521–3530. PMLR, 10–15 Jul 2018.</text>
<text top="418" left="113" width="391" height="9" font="font3" id="p13_t29" reading_order_no="28" segment_no="9" tag_type="text">[55] Krishna Pillutla, Sham M Kakade, and Zaid Harchaoui. Robust aggregation for federated</text>
<text top="429" left="135" width="197" height="9" font="font3" id="p13_t30" reading_order_no="29" segment_no="9" tag_type="text">learning. arXiv preprint arXiv:1912.13445 , 2019.</text>
<text top="444" left="113" width="391" height="9" font="font3" id="p13_t31" reading_order_no="30" segment_no="10" tag_type="text">[56] Gilad Baruch, Moran Baruch, and Yoav Goldberg. A little is enough: Circumventing defenses</text>
<text top="455" left="135" width="371" height="9" font="font3" id="p13_t32" reading_order_no="31" segment_no="10" tag_type="text">for distributed learning. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alché-Buc, E. Fox,</text>
<text top="466" left="135" width="371" height="9" font="font3" id="p13_t33" reading_order_no="32" segment_no="10" tag_type="text">and R. Garnett, editors, Advances in Neural Information Processing Systems , volume 32.</text>
<text top="477" left="135" width="120" height="9" font="font3" id="p13_t34" reading_order_no="33" segment_no="10" tag_type="text">Curran Associates, Inc., 2019.</text>
<text top="492" left="113" width="393" height="9" font="font3" id="p13_t35" reading_order_no="34" segment_no="11" tag_type="text">[57] Cong Xie, Oluwasanmi Koyejo, and Indranil Gupta. Fall of empires: Breaking byzantine-</text>
<text top="503" left="135" width="369" height="9" font="font3" id="p13_t36" reading_order_no="35" segment_no="11" tag_type="text">tolerant sgd by inner product manipulation. In Uncertainty in Artificial Intelligence , pages</text>
<text top="514" left="135" width="94" height="9" font="font3" id="p13_t37" reading_order_no="36" segment_no="11" tag_type="text">261–270. PMLR, 2020.</text>
<text top="529" left="113" width="391" height="9" font="font3" id="p13_t38" reading_order_no="37" segment_no="12" tag_type="text">[58] Sai Praneeth Karimireddy, Lie He, and Martin Jaggi. Learning from history for byzantine</text>
<text top="540" left="135" width="252" height="9" font="font3" id="p13_t39" reading_order_no="38" segment_no="12" tag_type="text">robust optimization. arXiv preprint arXiv:2012.10333v1 , 2020.</text>
<text top="555" left="113" width="391" height="9" font="font3" id="p13_t40" reading_order_no="39" segment_no="13" tag_type="text">[59] Dan Alistarh, Zeyuan Allen-Zhu, and Jerry Li. Byzantine stochastic gradient descent. In</text>
<text top="566" left="134" width="371" height="9" font="font13" id="p13_t41" reading_order_no="40" segment_no="13" tag_type="text">Proceedings of the 32nd International Conference on Neural Information Processing Systems ,</text>
<text top="577" left="135" width="97" height="9" font="font3" id="p13_t42" reading_order_no="41" segment_no="13" tag_type="text">pages 4618–4628, 2018.</text>
<text top="592" left="113" width="391" height="9" font="font3" id="p13_t43" reading_order_no="42" segment_no="14" tag_type="text">[60] Zeyuan Allen-Zhu, Faeze Ebrahimianghazani, Jerry Li, and Dan Alistarh. Byzantine-resilient</text>
<text top="603" left="135" width="370" height="9" font="font3" id="p13_t44" reading_order_no="43" segment_no="14" tag_type="text">non-convex stochastic gradient descent. In International Conference on Learning Representa-</text>
<text top="613" left="135" width="46" height="10" font="font13" id="p13_t45" reading_order_no="44" segment_no="14" tag_type="text">tions , 2021.</text>
<text top="629" left="113" width="391" height="9" font="font3" id="p13_t46" reading_order_no="45" segment_no="15" tag_type="text">[61] Zhaoxian Wu, Qing Ling, Tianyi Chen, and Georgios B Giannakis. Federated variance-reduced</text>
<text top="639" left="135" width="369" height="10" font="font3" id="p13_t47" reading_order_no="46" segment_no="15" tag_type="text">stochastic gradient descent with robustness to byzantine attacks. IEEE Transactions on Signal</text>
<text top="650" left="134" width="134" height="9" font="font13" id="p13_t48" reading_order_no="47" segment_no="15" tag_type="text">Processing , 68:4583–4596, 2020.</text>
<text top="665" left="113" width="391" height="9" font="font3" id="p13_t49" reading_order_no="48" segment_no="16" tag_type="text">[62] Aaron Defazio, Francis Bach, and Simon Lacoste-Julien. Saga: A fast incremental gradient</text>
<text top="676" left="135" width="369" height="9" font="font3" id="p13_t50" reading_order_no="49" segment_no="16" tag_type="text">method with support for non-strongly convex composite objectives. In Advances In Neural</text>
<text top="687" left="134" width="155" height="9" font="font13" id="p13_t51" reading_order_no="50" segment_no="16" tag_type="text">Information Processing Systems , 2014.</text>
<text top="702" left="113" width="391" height="9" font="font3" id="p13_t52" reading_order_no="51" segment_no="17" tag_type="text">[63] Aaron Defazio and Leon Bottou. On the ineffectiveness of variance reduced optimization for</text>
<text top="713" left="135" width="369" height="9" font="font3" id="p13_t53" reading_order_no="52" segment_no="17" tag_type="text">deep learning. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d'Alché-Buc, E. Fox, and</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p13_t54" reading_order_no="53" segment_no="18" tag_type="text">13</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="135" width="369" height="9" font="font3" id="p14_t1" reading_order_no="0" segment_no="0" tag_type="text">R. Garnett, editors, Advances in Neural Information Processing Systems , volume 32. Curran</text>
<text top="86" left="134" width="90" height="9" font="font3" id="p14_t2" reading_order_no="1" segment_no="0" tag_type="text">Associates, Inc., 2019.</text>
<text top="102" left="113" width="392" height="9" font="font3" id="p14_t3" reading_order_no="2" segment_no="1" tag_type="text">[64] Nuria Rodríguez-Barroso, Eugenio Martínez-Cámara, M Luzón, Gerardo González Seco,</text>
<text top="114" left="135" width="370" height="9" font="font3" id="p14_t4" reading_order_no="3" segment_no="1" tag_type="text">Miguel Ángel Veganzones, and Francisco Herrera. Dynamic federated learning model for</text>
<text top="125" left="135" width="283" height="9" font="font3" id="p14_t5" reading_order_no="4" segment_no="1" tag_type="text">identifying adversarial clients. arXiv preprint arXiv:2007.15030 , 2020.</text>
<text top="141" left="113" width="391" height="9" font="font3" id="p14_t6" reading_order_no="5" segment_no="2" tag_type="text">[65] Jayanth Regatti, Hao Chen, and Abhishek Gupta. Bygars: Byzantine sgd with arbitrary number</text>
<text top="151" left="135" width="211" height="10" font="font3" id="p14_t7" reading_order_no="6" segment_no="2" tag_type="text">of attackers. arXiv preprint arXiv:2006.13421 , 2020.</text>
<text top="167" left="113" width="393" height="9" font="font3" id="p14_t8" reading_order_no="7" segment_no="3" tag_type="text">[66] Xinyi Xu and Lingjuan Lyu. Towards building a robust and fair federated learning system.</text>
<text top="178" left="135" width="159" height="9" font="font13" id="p14_t9" reading_order_no="8" segment_no="3" tag_type="text">arXiv preprint arXiv:2011.10464 , 2020.</text>
<text top="194" left="113" width="391" height="9" font="font3" id="p14_t10" reading_order_no="9" segment_no="4" tag_type="text">[67] Lingjuan Lyu, Han Yu, Xingjun Ma, Lichao Sun, Jun Zhao, Qiang Yang, and Philip S</text>
<text top="205" left="134" width="370" height="9" font="font3" id="p14_t11" reading_order_no="10" segment_no="4" tag_type="text">Yu. Privacy and robustness in federated learning: Attacks and defenses. arXiv preprint</text>
<text top="216" left="135" width="99" height="9" font="font13" id="p14_t12" reading_order_no="11" segment_no="4" tag_type="text">arXiv:2012.06337 , 2020.</text>
<text top="231" left="113" width="391" height="9" font="font3" id="p14_t13" reading_order_no="12" segment_no="5" tag_type="text">[68] Zhixiong Yang and Waheed U Bajwa. Byrdie: Byzantine-resilient distributed coordinate</text>
<text top="242" left="135" width="369" height="9" font="font3" id="p14_t14" reading_order_no="13" segment_no="5" tag_type="text">descent for decentralized learning. IEEE Transactions on Signal and Information Processing</text>
<text top="253" left="135" width="144" height="9" font="font13" id="p14_t15" reading_order_no="14" segment_no="5" tag_type="text">over Networks , 5(4):611–627, 2019.</text>
<text top="269" left="113" width="391" height="9" font="font3" id="p14_t16" reading_order_no="15" segment_no="6" tag_type="text">[69] Zhixiong Yang and Waheed U Bajwa. Bridge: Byzantine-resilient decentralized gradient</text>
<text top="280" left="135" width="195" height="9" font="font3" id="p14_t17" reading_order_no="16" segment_no="6" tag_type="text">descent. arXiv preprint arXiv:1908.08098 , 2019.</text>
<text top="296" left="113" width="391" height="9" font="font3" id="p14_t18" reading_order_no="17" segment_no="7" tag_type="text">[70] Jie Peng, Weiyu Li, and Qing Ling. Byzantine-robust decentralized stochastic optimization</text>
<text top="306" left="135" width="308" height="10" font="font3" id="p14_t19" reading_order_no="18" segment_no="7" tag_type="text">over static and time-varying networks. Signal Processing , 183:108020, 2021.</text>
<text top="322" left="113" width="391" height="9" font="font3" id="p14_t20" reading_order_no="19" segment_no="8" tag_type="text">[71] Walid Ben-Ameur, Pascal Bianchi, and Jérémie Jakubowicz. Robust consensus in distributed</text>
<text top="333" left="135" width="278" height="9" font="font3" id="p14_t21" reading_order_no="20" segment_no="8" tag_type="text">networks using total variation. arXiv preprint arXiv:1309.7264 , 2013.</text>
<text top="349" left="113" width="393" height="9" font="font3" id="p14_t22" reading_order_no="21" segment_no="9" tag_type="text">[72] Liping Li, Wei Xu, Tianyi Chen, Georgios B Giannakis, and Qing Ling. Rsa: Byzantine-</text>
<text top="360" left="135" width="369" height="9" font="font3" id="p14_t23" reading_order_no="22" segment_no="9" tag_type="text">robust stochastic aggregation methods for distributed learning from heterogeneous datasets. In</text>
<text top="371" left="134" width="372" height="9" font="font13" id="p14_t24" reading_order_no="23" segment_no="9" tag_type="text">Proceedings of the AAAI Conference on Artificial Intelligence , volume 33, pages 1544–1551,</text>
<text top="382" left="135" width="22" height="9" font="font3" id="p14_t25" reading_order_no="24" segment_no="9" tag_type="text">2019.</text>
<text top="397" left="113" width="391" height="9" font="font3" id="p14_t26" reading_order_no="25" segment_no="10" tag_type="text">[73] Manuel Blum. Coin flipping by telephone a protocol for solving impossible problems. ACM</text>
<text top="408" left="134" width="140" height="9" font="font13" id="p14_t27" reading_order_no="26" segment_no="10" tag_type="text">SIGACT News , 15(1):23–27, 1983.</text>
<text top="424" left="113" width="393" height="9" font="font3" id="p14_t28" reading_order_no="27" segment_no="11" tag_type="text">[74] Danny Dolev and H. Raymond Strong. Authenticated algorithms for byzantine agreement.</text>
<text top="435" left="134" width="207" height="9" font="font13" id="p14_t29" reading_order_no="28" segment_no="11" tag_type="text">SIAM Journal on Computing , 12(4):656–666, 1983.</text>
<text top="450" left="113" width="391" height="9" font="font3" id="p14_t30" reading_order_no="29" segment_no="12" tag_type="text">[75] Marshall Pease, Robert Shostak, and Leslie Lamport. Reaching agreement in the presence of</text>
<text top="461" left="135" width="232" height="9" font="font3" id="p14_t31" reading_order_no="30" segment_no="12" tag_type="text">faults. Journal of the ACM (JACM) , 27(2):228–234, 1980.</text>
<text top="477" left="113" width="393" height="9" font="font3" id="p14_t32" reading_order_no="31" segment_no="13" tag_type="text">[76] Zhenyu Li, James Davis, and Stephen Jarvis. An efficient task-based all-reduce for ma-</text>
<text top="488" left="135" width="371" height="9" font="font3" id="p14_t33" reading_order_no="32" segment_no="13" tag_type="text">chine learning applications. In Proceedings of the Machine Learning on HPC Environments ,</text>
<text top="499" left="135" width="322" height="9" font="font3" id="p14_t34" reading_order_no="33" segment_no="13" tag_type="text">MLHPC’17, New York, NY, USA, 2017. Association for Computing Machinery.</text>
<text top="515" left="113" width="391" height="9" font="font3" id="p14_t35" reading_order_no="34" segment_no="14" tag_type="text">[77] Hammurabi King of Babylon and Robert Francis Harper. The Code of Hammurabi, King of</text>
<text top="526" left="134" width="370" height="9" font="font13" id="p14_t36" reading_order_no="35" segment_no="14" tag_type="text">Babylon: About 2250 BC: Autographed Text, Transliteration, Translation, Glossary Index of</text>
<text top="536" left="134" width="353" height="10" font="font13" id="p14_t37" reading_order_no="36" segment_no="14" tag_type="text">Subjects, Lists of Proper Names, Signs, Numuerals... University of Chicago Press, 1904.</text>
<text top="552" left="113" width="393" height="9" font="font3" id="p14_t38" reading_order_no="37" segment_no="15" tag_type="text">[78] Arkadi Nemirovski, Anatoli Juditsky, Guanghui Lan, and Alexander Shapiro. Robust stochas-</text>
<text top="563" left="135" width="232" height="9" font="font3" id="p14_t39" reading_order_no="38" segment_no="15" tag_type="text">tic approximation approach to stochastic programming.</text>
<text top="563" left="375" width="131" height="9" font="font13" id="p14_t40" reading_order_no="39" segment_no="15" tag_type="text">SIAM Journal on optimization ,</text>
<text top="574" left="134" width="97" height="9" font="font3" id="p14_t41" reading_order_no="40" segment_no="15" tag_type="text">19(4):1574–1609, 2009.</text>
<text top="590" left="113" width="391" height="9" font="font3" id="p14_t42" reading_order_no="41" segment_no="16" tag_type="text">[79] Saeed Ghadimi and Guanghui Lan. Optimal stochastic approximation algorithms for strongly</text>
<text top="601" left="135" width="369" height="9" font="font3" id="p14_t43" reading_order_no="42" segment_no="16" tag_type="text">convex stochastic composite optimization i: A generic algorithmic framework. SIAM Journal</text>
<text top="612" left="135" width="166" height="9" font="font13" id="p14_t44" reading_order_no="43" segment_no="16" tag_type="text">on Optimization , 22(4):1469–1492, 2012.</text>
<text top="627" left="113" width="391" height="9" font="font3" id="p14_t45" reading_order_no="44" segment_no="17" tag_type="text">[80] Saeed Ghadimi and Guanghui Lan. Stochastic first-and zeroth-order methods for nonconvex</text>
<text top="638" left="135" width="327" height="9" font="font3" id="p14_t46" reading_order_no="45" segment_no="17" tag_type="text">stochastic programming. SIAM Journal on Optimization , 23(4):2341–2368, 2013.</text>
<text top="654" left="113" width="392" height="9" font="font3" id="p14_t47" reading_order_no="46" segment_no="18" tag_type="text">[81] Jingzhao Zhang, Sai Praneeth Karimireddy, Andreas Veit, Seungyeon Kim, Sashank Reddi,</text>
<text top="665" left="135" width="369" height="9" font="font3" id="p14_t48" reading_order_no="47" segment_no="18" tag_type="text">Sanjiv Kumar, and Suvrit Sra. Why are adaptive methods good for attention models? In</text>
<text top="676" left="135" width="369" height="9" font="font3" id="p14_t49" reading_order_no="48" segment_no="18" tag_type="text">H. Larochelle, M. Ranzato, R. Hadsell, M. F. Balcan, and H. Lin, editors, Advances in Neural</text>
<text top="687" left="134" width="372" height="9" font="font13" id="p14_t50" reading_order_no="49" segment_no="18" tag_type="text">Information Processing Systems , volume 33, pages 15383–15393. Curran Associates, Inc.,</text>
<text top="698" left="135" width="22" height="9" font="font3" id="p14_t51" reading_order_no="50" segment_no="18" tag_type="text">2020.</text>
<text top="713" left="113" width="228" height="9" font="font3" id="p14_t52" reading_order_no="51" segment_no="19" tag_type="text">[82] John R. Douceur. The sybil attack. In IPTPS , 2002.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p14_t53" reading_order_no="52" segment_no="20" tag_type="text">14</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="113" width="391" height="9" font="font3" id="p15_t1" reading_order_no="0" segment_no="0" tag_type="text">[83] Petar Maymounkov and David Mazieres. Kademlia: A peer-to-peer information system based</text>
<text top="86" left="135" width="370" height="9" font="font3" id="p15_t2" reading_order_no="1" segment_no="0" tag_type="text">on the xor metric. In International Workshop on Peer-to-Peer Systems , pages 53–65. Springer,</text>
<text top="97" left="135" width="22" height="9" font="font3" id="p15_t3" reading_order_no="2" segment_no="0" tag_type="text">2002.</text>
<text top="112" left="113" width="393" height="9" font="font3" id="p15_t4" reading_order_no="3" segment_no="1" tag_type="text">[84] Ben Zhao, Ling Huang, Jeremy Stribling, Sean Rhea, Anthony Joseph, and John Kubiatowicz.</text>
<text top="123" left="134" width="370" height="9" font="font3" id="p15_t5" reading_order_no="4" segment_no="1" tag_type="text">Tapestry: A resilient global-scale overlay for service deployment. IEEE Journal on Selected</text>
<text top="134" left="134" width="158" height="9" font="font13" id="p15_t6" reading_order_no="5" segment_no="1" tag_type="text">Areas in Communications , 22, 07 2003.</text>
<text top="149" left="113" width="391" height="9" font="font3" id="p15_t7" reading_order_no="6" segment_no="2" tag_type="text">[85] M Frans Kaashoek and David R Karger. Koorde: A simple degree-optimal distributed hash</text>
<text top="160" left="135" width="356" height="9" font="font3" id="p15_t8" reading_order_no="7" segment_no="2" tag_type="text">table. In International Workshop on Peer-to-Peer Systems , pages 98–107. Springer, 2003.</text>
<text top="175" left="113" width="391" height="9" font="font3" id="p15_t9" reading_order_no="8" segment_no="3" tag_type="text">[86] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image</text>
<text top="186" left="135" width="371" height="9" font="font3" id="p15_t10" reading_order_no="9" segment_no="3" tag_type="text">recognition. 2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR) ,</text>
<text top="197" left="135" width="87" height="9" font="font3" id="p15_t11" reading_order_no="10" segment_no="3" tag_type="text">pages 770–778, 2015.</text>
<text top="212" left="113" width="391" height="9" font="font3" id="p15_t12" reading_order_no="11" segment_no="4" tag_type="text">[87] Alex Krizhevsky, Vinod Nair, and Geoffrey Hinton. Cifar-10 (canadian institute for advanced</text>
<text top="222" left="135" width="39" height="9" font="font3" id="p15_t13" reading_order_no="12" segment_no="4" tag_type="text">research).</text>
<text top="237" left="113" width="391" height="9" font="font3" id="p15_t14" reading_order_no="13" segment_no="5" tag_type="text">[88] Y. Nesterov. A method for solving the convex programming problem with convergence rate</text>
<text top="247" left="135" width="309" height="10" font="font17" id="p15_t15" reading_order_no="14" segment_no="5" tag_type="text">o (1 /k 2 ) . Proceedings of the USSR Academy of Sciences , 269:543–547, 1983.</text>
<text top="263" left="113" width="393" height="9" font="font3" id="p15_t16" reading_order_no="15" segment_no="6" tag_type="text">[89] I. Loshchilov and F. Hutter. Sgdr: Stochastic gradient descent with warm restarts. In In-</text>
<text top="274" left="135" width="369" height="9" font="font13" id="p15_t17" reading_order_no="16" segment_no="6" tag_type="text">ternational Conference on Learning Representations (ICLR) 2017 Conference Track , April</text>
<text top="285" left="135" width="22" height="9" font="font3" id="p15_t18" reading_order_no="17" segment_no="6" tag_type="text">2017.</text>
<text top="300" left="113" width="391" height="9" font="font3" id="p15_t19" reading_order_no="18" segment_no="7" tag_type="text">[90] Zhen-Zhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and</text>
<text top="311" left="135" width="371" height="9" font="font3" id="p15_t20" reading_order_no="19" segment_no="7" tag_type="text">Radu Soricut. Albert: A lite bert for self-supervised learning of language representations.</text>
<text top="322" left="134" width="119" height="9" font="font13" id="p15_t21" reading_order_no="20" segment_no="7" tag_type="text">ArXiv , abs/1909.11942, 2019.</text>
<text top="337" left="113" width="391" height="9" font="font3" id="p15_t22" reading_order_no="21" segment_no="8" tag_type="text">[91] Stephen Merity, Caiming Xiong, James Bradbury, and R. Socher. Pointer sentinel mixture</text>
<text top="348" left="135" width="154" height="9" font="font3" id="p15_t23" reading_order_no="22" segment_no="8" tag_type="text">models. ArXiv , abs/1609.07843, 2017.</text>
<text top="363" left="113" width="307" height="9" font="font3" id="p15_t24" reading_order_no="23" segment_no="9" tag_type="text">[92] https://foldingathome . org/covid19/ (accessed on June 4, 2020).</text>
<text top="378" left="113" width="392" height="9" font="font3" id="p15_t25" reading_order_no="24" segment_no="10" tag_type="text">[93] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer, James Bradbury, Gregory Chanan,</text>
<text top="389" left="134" width="370" height="9" font="font3" id="p15_t26" reading_order_no="25" segment_no="10" tag_type="text">Trevor Killeen, Zeming Lin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: An imperative</text>
<text top="400" left="135" width="369" height="9" font="font3" id="p15_t27" reading_order_no="26" segment_no="10" tag_type="text">style, high-performance deep learning library. In Advances in Neural Information Processing</text>
<text top="411" left="134" width="134" height="9" font="font13" id="p15_t28" reading_order_no="27" segment_no="10" tag_type="text">Systems , pages 8024–8035, 2019.</text>
<text top="426" left="113" width="391" height="9" font="font3" id="p15_t29" reading_order_no="28" segment_no="11" tag_type="text">[94] Ronald L Rivest, Adi Shamir, and Leonard Adleman. A method for obtaining digital signatures</text>
<text top="436" left="135" width="332" height="10" font="font3" id="p15_t30" reading_order_no="29" segment_no="11" tag_type="text">and public-key cryptosystems. Communications of the ACM , 21(2):120–126, 1978.</text>
<text top="451" left="113" width="391" height="9" font="font3" id="p15_t31" reading_order_no="30" segment_no="12" tag_type="text">[95] Shafi Goldwasser, Silvio Micali, and Ronald L Rivest. A digital signature scheme secure</text>
<text top="462" left="135" width="370" height="9" font="font3" id="p15_t32" reading_order_no="31" segment_no="12" tag_type="text">against adaptive chosen-message attacks. SIAM Journal on computing , 17(2):281–308, 1988.</text>
<text top="477" left="113" width="391" height="9" font="font3" id="p15_t33" reading_order_no="32" segment_no="13" tag_type="text">[96] Tal Rabin and Michael Ben-Or. Verifiable secret sharing and multiparty protocols with honest</text>
<text top="488" left="135" width="370" height="9" font="font3" id="p15_t34" reading_order_no="33" segment_no="13" tag_type="text">majority. In Proceedings of the twenty-first annual ACM symposium on Theory of computing ,</text>
<text top="499" left="135" width="77" height="9" font="font3" id="p15_t35" reading_order_no="34" segment_no="13" tag_type="text">pages 73–85, 1989.</text>
<text top="514" left="113" width="391" height="9" font="font3" id="p15_t36" reading_order_no="35" segment_no="14" tag_type="text">[97] Richard Cleve. Limits on the security of coin flips when half the processors are faulty. In</text>
<text top="525" left="134" width="371" height="9" font="font13" id="p15_t37" reading_order_no="36" segment_no="14" tag_type="text">Proceedings of the eighteenth annual ACM symposium on Theory of computing , pages 364–369,</text>
<text top="536" left="134" width="22" height="9" font="font3" id="p15_t38" reading_order_no="37" segment_no="14" tag_type="text">1986.</text>
<text top="551" left="113" width="391" height="9" font="font3" id="p15_t39" reading_order_no="38" segment_no="15" tag_type="text">[98] Amos Beimel, Eran Omri, and Ilan Orlov. Protocols for multiparty coin toss with dishonest</text>
<text top="562" left="135" width="305" height="9" font="font3" id="p15_t40" reading_order_no="39" segment_no="15" tag_type="text">majority. In Annual Cryptology Conference , pages 538–557. Springer, 2010.</text>
<text top="577" left="113" width="393" height="9" font="font3" id="p15_t41" reading_order_no="40" segment_no="16" tag_type="text">[99] Yurii Nesterov. Introductory lectures on convex optimization: A basic course , volume 87.</text>
<text top="588" left="135" width="171" height="9" font="font3" id="p15_t42" reading_order_no="41" segment_no="16" tag_type="text">Springer Science &amp; Business Media, 2003.</text>
<text top="603" left="108" width="398" height="9" font="font3" id="p15_t43" reading_order_no="42" segment_no="17" tag_type="text">[100] Zied Trifa and Maher Khemakhem. Sybil nodes as a mitigation strategy against sybil attack.</text>
<text top="614" left="134" width="202" height="9" font="font13" id="p15_t44" reading_order_no="43" segment_no="17" tag_type="text">Procedia Computer Science , 32:1135–1140, 2014.</text>
<text top="629" left="108" width="396" height="9" font="font3" id="p15_t45" reading_order_no="44" segment_no="18" tag_type="text">[101] Liang Wang and Jussi Kangasharju. Real-world sybil attacks in bittorrent mainline dht. In<a href="https://foldingathome.org/covid19/">https://foldingathome</a></text>
<text top="640" left="134" width="372" height="9" font="font13" id="p15_t46" reading_order_no="45" segment_no="18" tag_type="text">2012 IEEE Global Communications Conference (GLOBECOM) , pages 826–832. IEEE, 2012.<a href="https://foldingathome.org/covid19/">.</a></text>
<text top="655" left="108" width="396" height="9" font="font3" id="p15_t47" reading_order_no="46" segment_no="19" tag_type="text">[102] Hari Balakrishnan, M Frans Kaashoek, David Karger, Robert Morris, and Ion Stoica. Looking<a href="https://foldingathome.org/covid19/">org/covid19/</a></text>
<text top="666" left="135" width="294" height="9" font="font3" id="p15_t48" reading_order_no="47" segment_no="19" tag_type="text">up data in p2p systems. Communications of the ACM , 46(2):43–48, 2003.<a href="https://foldingathome.org/covid19/">(accessed </a>on June 4, 2020).</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p15_t49" reading_order_no="48" segment_no="20" tag_type="text">[103] Antony Rowstron and Peter Druschel. Pastry: Scalable, decentralized object location, and</text>
<text top="691" left="135" width="369" height="10" font="font3" id="p15_t50" reading_order_no="49" segment_no="20" tag_type="text">routing for large-scale peer-to-peer systems. In IFIP/ACM International Conference on</text>
<text top="702" left="134" width="371" height="9" font="font13" id="p15_t51" reading_order_no="50" segment_no="20" tag_type="text">Distributed Systems Platforms and Open Distributed Processing , pages 329–350. Springer,</text>
<text top="713" left="135" width="22" height="9" font="font3" id="p15_t52" reading_order_no="51" segment_no="20" tag_type="text">2001.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p15_t53" reading_order_no="52" segment_no="21" tag_type="text">15</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="398" height="9" font="font3" id="p16_t1" reading_order_no="0" segment_no="0" tag_type="text">[104] Guido Urdaneta, Guillaume Pierre, and Maarten Van Steen. A survey of dht security techniques.</text>
<text top="86" left="134" width="212" height="9" font="font13" id="p16_t2" reading_order_no="1" segment_no="0" tag_type="text">ACM Computing Surveys (CSUR) , 43(2):1–49, 2011.</text>
<text top="101" left="108" width="396" height="9" font="font3" id="p16_t3" reading_order_no="2" segment_no="1" tag_type="text">[105] Rico Sennrich, Barry Haddow, and Alexandra Birch. Neural machine translation of rare</text>
<text top="112" left="134" width="370" height="9" font="font3" id="p16_t4" reading_order_no="3" segment_no="1" tag_type="text">words with subword units. In Proceedings of the 54th Annual Meeting of the Association</text>
<text top="123" left="135" width="370" height="9" font="font13" id="p16_t5" reading_order_no="4" segment_no="1" tag_type="text">for Computational Linguistics (Volume 1: Long Papers) , pages 1715–1725, Berlin, Germany,</text>
<text top="134" left="134" width="228" height="9" font="font3" id="p16_t6" reading_order_no="5" segment_no="1" tag_type="text">August 2016. Association for Computational Linguistics.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p16_t7" reading_order_no="6" segment_no="2" tag_type="text">16</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="126" height="11" font="font6" id="p17_t1" reading_order_no="0" segment_no="0" tag_type="title">Supplementary Material</text>
<text top="100" left="108" width="9" height="11" font="font6" id="p17_t2" reading_order_no="1" segment_no="1" tag_type="title">A</text>
<text top="100" left="129" width="87" height="11" font="font6" id="p17_t3" reading_order_no="2" segment_no="1" tag_type="title">Table of contents</text>
<text top="125" left="108" width="210" height="9" font="font3" id="p17_t4" reading_order_no="3" segment_no="2" tag_type="text">We organize the supplementary materials as follows:</text>
<text top="147" left="108" width="396" height="9" font="font3" id="p17_t5" reading_order_no="4" segment_no="3" tag_type="list">• Appendix B provides a more detailed explanation of distributed security protocols that we outlines</text>
<text top="158" left="116" width="58" height="9" font="font3" id="p17_t6" reading_order_no="5" segment_no="3" tag_type="list">in Section 2.3 ,<a href="deeplearning_paper1.html#17">B</a></text>
<text top="174" left="108" width="398" height="9" font="font3" id="p17_t7" reading_order_no="6" segment_no="4" tag_type="list">• Appendix C analyzes the computation and communication cost of BTARD-SGD and BTARD-</text>
<text top="185" left="117" width="217" height="9" font="font3" id="p17_t8" reading_order_no="7" segment_no="4" tag_type="list">C LIPPED -SGD in comparison with regular AR-SGD,</text>
<text top="201" left="108" width="398" height="9" font="font3" id="p17_t9" reading_order_no="8" segment_no="5" tag_type="list">• Appendix D enumerates possible strategies that Byzantine peers can adopt to attack BTARD-SGD,<a href="deeplearning_paper1.html#4">2.3</a></text>
<text top="216" left="108" width="396" height="9" font="font3" id="p17_t10" reading_order_no="9" segment_no="6" tag_type="list">• Appendix E contains a detailed version of BTARD-SGD and auxiliary algorithms that were<a href="deeplearning_paper1.html#4">,</a></text>
<text top="227" left="116" width="115" height="9" font="font3" id="p17_t11" reading_order_no="10" segment_no="6" tag_type="list">previously announced in 3.1 ,</text>
<text top="243" left="108" width="384" height="9" font="font3" id="p17_t12" reading_order_no="11" segment_no="7" tag_type="list">• Appendix F formulates and proves the convergence bounds annouced in Table 1 (Section 3.2 ),<a href="deeplearning_paper1.html#18">C</a></text>
<text top="258" left="108" width="396" height="9" font="font3" id="p17_t13" reading_order_no="12" segment_no="8" tag_type="list">• Appendix G describes how to apply BTARD-SGD for public cooperative training where peers can</text>
<text top="269" left="116" width="65" height="9" font="font3" id="p17_t14" reading_order_no="13" segment_no="8" tag_type="list">join at any time,</text>
<text top="285" left="108" width="396" height="9" font="font3" id="p17_t15" reading_order_no="14" segment_no="9" tag_type="list">• Appendix H explains Distributed Hash Tables and the additional security measures necessary for</text>
<text top="296" left="116" width="39" height="9" font="font3" id="p17_t16" reading_order_no="15" segment_no="9" tag_type="list">our setup,</text>
<text top="311" left="108" width="397" height="9" font="font3" id="p17_t17" reading_order_no="16" segment_no="10" tag_type="list">• Appendix I reports experimental evaluation of BTARD-SGD for ResNet-18 in alternative settings,</text>
<text top="327" left="108" width="397" height="9" font="font3" id="p17_t18" reading_order_no="17" segment_no="11" tag_type="list">• Appendix J contains a detailed description of ALBERT training hyerparameters used in Section 4.2 .<a href="deeplearning_paper1.html#18">D</a></text>
<text top="355" left="108" width="8" height="11" font="font6" id="p17_t19" reading_order_no="18" segment_no="12" tag_type="title">B</text>
<text top="355" left="128" width="136" height="11" font="font6" id="p17_t20" reading_order_no="19" segment_no="12" tag_type="title">Secure distributed systems</text>
<text top="380" left="108" width="14" height="9" font="font1" id="p17_t21" reading_order_no="20" segment_no="13" tag_type="title">B.1<a href="deeplearning_paper1.html#19">E</a></text>
<text top="380" left="132" width="83" height="9" font="font1" id="p17_t22" reading_order_no="21" segment_no="13" tag_type="title">Broadcast channels</text>
<text top="400" left="108" width="396" height="9" font="font3" id="p17_t23" reading_order_no="22" segment_no="14" tag_type="text">Many distributed systems rely exclusively on direct peer-to-peer connections, avoiding any centralized</text>
<text top="411" left="108" width="396" height="9" font="font3" id="p17_t24" reading_order_no="23" segment_no="14" tag_type="text">servers to increase reliability and avoid the performance bottleneck. In presence of malicious<a href="deeplearning_paper1.html#4">3.1</a></text>
<text top="422" left="108" width="396" height="9" font="font3" id="p17_t25" reading_order_no="24" segment_no="14" tag_type="text">participants, this introduces additional security challenges since an attacker can send corrupted data to<a href="deeplearning_paper1.html#4">,</a></text>
<text top="433" left="108" width="396" height="9" font="font3" id="p17_t26" reading_order_no="25" segment_no="14" tag_type="text">one participant and behave honestly with others. If a peer accuses another peer in sending corrupted</text>
<text top="444" left="108" width="396" height="9" font="font3" id="p17_t27" reading_order_no="26" segment_no="14" tag_type="text">data, it is impossible for remaining peers to determine whether the accusation is fair since only these<a href="deeplearning_paper1.html#25">F</a></text>
<text top="455" left="108" width="328" height="9" font="font3" id="p17_t28" reading_order_no="27" segment_no="14" tag_type="text">two peers had access to the contents of the communication channel between them.</text>
<text top="471" left="108" width="397" height="9" font="font3" id="p17_t29" reading_order_no="28" segment_no="15" tag_type="text">To overcome this, [ 75 ] provide algorithms to build broadcast channels over the peer-to-peer connec-<a href="deeplearning_paper1.html#7">1</a></text>
<text top="482" left="108" width="396" height="9" font="font3" id="p17_t30" reading_order_no="29" segment_no="15" tag_type="text">tions and [ 74 ] improves their performance with the usage of digital signatures [ 94 , 95 ]. Broadcast</text>
<text top="493" left="108" width="396" height="9" font="font3" id="p17_t31" reading_order_no="30" segment_no="15" tag_type="text">channels guarantee that if a peer p sends a message, (a) all honest peers receive the same message<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="504" left="108" width="396" height="9" font="font3" id="p17_t32" reading_order_no="31" segment_no="15" tag_type="text">and (b) the received message coincides with the original one if p is honest. If t peers out of n are<a href="deeplearning_paper1.html#6">),</a></text>
<text top="515" left="108" width="396" height="9" font="font3" id="p17_t33" reading_order_no="32" segment_no="15" tag_type="text">malicious, the algorithm takes O ( t ) consecutive rounds of O ( n ) messages each to broadcast the</text>
<text top="526" left="108" width="36" height="9" font="font3" id="p17_t34" reading_order_no="33" segment_no="15" tag_type="text">message.<a href="deeplearning_paper1.html#51">G</a></text>
<text top="551" left="108" width="14" height="9" font="font1" id="p17_t35" reading_order_no="34" segment_no="16" tag_type="title">B.2</text>
<text top="551" left="132" width="201" height="9" font="font1" id="p17_t36" reading_order_no="35" segment_no="16" tag_type="title">Multi-party pseudorandom number generation</text>
<text top="571" left="108" width="396" height="9" font="font3" id="p17_t37" reading_order_no="36" segment_no="17" tag_type="text">Distributed systems benefit from the algorithms [ 73 ] for the joint pseudorandom number generation</text>
<text top="582" left="108" width="398" height="9" font="font3" id="p17_t38" reading_order_no="37" segment_no="17" tag_type="text">(JPRNG) where a group of malicious peers would have little influence (bias) on the generator output.<a href="deeplearning_paper1.html#52">H</a></text>
<text top="593" left="108" width="396" height="9" font="font3" id="p17_t39" reading_order_no="38" segment_no="17" tag_type="text">For example, the JPRNG allows to decide which participant wins a lottery or whose calculations are</text>
<text top="604" left="108" width="253" height="9" font="font3" id="p17_t40" reading_order_no="39" segment_no="17" tag_type="text">going to be validated by other peers to detect possible cheating.</text>
<text top="620" left="108" width="396" height="9" font="font3" id="p17_t41" reading_order_no="40" segment_no="18" tag_type="text">While there are JPRNGs [ 96 ] with a negligible bias for the case when more than a half parties are</text>
<text top="631" left="108" width="396" height="9" font="font3" id="p17_t42" reading_order_no="41" segment_no="18" tag_type="text">honest (assuming the presence of the broadcast channel), [ 97 ] proves that it is impossible to reach the<a href="deeplearning_paper1.html#53">I</a></text>
<text top="642" left="108" width="396" height="9" font="font3" id="p17_t43" reading_order_no="42" segment_no="18" tag_type="text">negligible bias for the case of dishonest majority, which may be reached in practice with the Sybil</text>
<text top="653" left="108" width="30" height="9" font="font3" id="p17_t44" reading_order_no="43" segment_no="18" tag_type="text">attacks.</text>
<text top="670" left="108" width="396" height="9" font="font3" id="p17_t45" reading_order_no="44" segment_no="19" tag_type="text">[ 98 ] propose variants of JPRNGs robust to a dishonest majority with the bias close to the lower<a href="deeplearning_paper1.html#55">J</a></text>
<text top="681" left="108" width="396" height="9" font="font3" id="p17_t46" reading_order_no="45" segment_no="19" tag_type="text">bound from [ 97 ]. The bias appears because sometimes an attacker may learn the result earlier than</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p17_t47" reading_order_no="46" segment_no="19" tag_type="text">other peers and abort the procedure. However, if we use a JPRNG to select a peer to be checked<a href="deeplearning_paper1.html#9">4.2</a></text>
<text top="702" left="108" width="396" height="9" font="font3" id="p17_t48" reading_order_no="47" segment_no="19" tag_type="text">for cheating, using these algorithms is not necessary since we may ban peers who have aborted the<a href="deeplearning_paper1.html#9">.</a></text>
<text top="713" left="108" width="203" height="9" font="font3" id="p17_t49" reading_order_no="48" segment_no="19" tag_type="text">procedure and restart it from scratch without them.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p17_t50" reading_order_no="49" segment_no="20" tag_type="text">17</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="9" height="11" font="font6" id="p18_t1" reading_order_no="0" segment_no="0" tag_type="title">C</text>
<text top="74" left="129" width="221" height="11" font="font6" id="p18_t2" reading_order_no="1" segment_no="0" tag_type="title">Compute and network overhead of BTARD</text>
<text top="99" left="108" width="396" height="9" font="font3" id="p18_t3" reading_order_no="2" segment_no="1" tag_type="text">Despite having complex structure, BTARD-SGD has only limited communication overhead, when</text>
<text top="110" left="108" width="396" height="9" font="font3" id="p18_t4" reading_order_no="3" segment_no="1" tag_type="text">compared to regular A LL -R EDUCE SGD. When operating without Byzantines, a single step of</text>
<text top="121" left="108" width="396" height="9" font="font3" id="p18_t5" reading_order_no="4" segment_no="1" tag_type="text">BTARD requires each peer to send each gradient tensor exactly once for aggregation, then download</text>
<text top="131" left="108" width="396" height="9" font="font3" id="p18_t6" reading_order_no="5" segment_no="1" tag_type="text">the results, exactly as in Butterfly All-Reduce. In contrast, all additional communication only</text>
<text top="142" left="108" width="396" height="9" font="font3" id="p18_t7" reading_order_no="6" segment_no="1" tag_type="text">requires sending scalars that are independent of the total size of the trained model. As a result, the</text>
<text top="151" left="108" width="322" height="11" font="font3" id="p18_t8" reading_order_no="7" segment_no="1" tag_type="text">communication complexity of a single BTARD-SGD step for each peer is O ( n − 1</text>
<text top="159" left="420" width="5" height="6" font="font28" id="p18_t9" reading_order_no="8" segment_no="1" tag_type="text">n</text>
<text top="152" left="433" width="71" height="10" font="font19" id="p18_t10" reading_order_no="9" segment_no="1" tag_type="text">· d + n 2 · b ) where</text>
<text top="164" left="108" width="396" height="9" font="font17" id="p18_t11" reading_order_no="10" segment_no="1" tag_type="text">n is the number of peers, b is the number of “active” byzantines and d is the total vector size. The</text>
<text top="173" left="108" width="398" height="11" font="font17" id="p18_t12" reading_order_no="11" segment_no="1" tag_type="text">n 2 · b component comes from the broadcast channel worst case complexity under b malicious peers.</text>
<text top="186" left="108" width="396" height="9" font="font3" id="p18_t13" reading_order_no="12" segment_no="1" tag_type="text">In all setups considered in Section 4 , these costs were dominated by the vector size d , as both models</text>
<text top="197" left="108" width="161" height="9" font="font3" id="p18_t14" reading_order_no="13" segment_no="1" tag_type="text">contain millions of trainable parameters.</text>
<text top="213" left="108" width="396" height="9" font="font3" id="p18_t15" reading_order_no="14" segment_no="2" tag_type="text">In terms of computation, BTARD-SGD introduces two main overheads: from validators and</text>
<text top="224" left="108" width="397" height="9" font="font3" id="p18_t16" reading_order_no="15" segment_no="2" tag_type="text">C ENTERED C LIP respectively. As we have shown empirically, both BTARD-SGD and BTARD-</text>
<text top="235" left="108" width="396" height="9" font="font3" id="p18_t17" reading_order_no="16" segment_no="2" tag_type="text">C LIPPED -SGD can withstand attacks even with 1 random validator chosen from 16 peers. As</text>
<text top="246" left="108" width="396" height="9" font="font3" id="p18_t18" reading_order_no="17" segment_no="2" tag_type="text">such, the computation overhead for these validators is under 10% of the total compute. As for the</text>
<text top="257" left="108" width="398" height="9" font="font3" id="p18_t19" reading_order_no="18" segment_no="2" tag_type="text">C ENTERED C LIP , our algorithm executes the same computation as the original C ENTERED C LIP [ 58 ],</text>
<text top="268" left="108" width="268" height="9" font="font3" id="p18_t20" reading_order_no="19" segment_no="2" tag_type="text">except that now the extra load is distributed evenly across all peers.</text>
<text top="295" left="108" width="9" height="11" font="font6" id="p18_t21" reading_order_no="20" segment_no="3" tag_type="title">D</text>
<text top="295" left="129" width="136" height="11" font="font6" id="p18_t22" reading_order_no="21" segment_no="3" tag_type="title">Overview of attack vectors</text>
<text top="320" left="108" width="398" height="9" font="font3" id="p18_t23" reading_order_no="22" segment_no="4" tag_type="text">In Section 3.2 we have outlined 4 main types of byzantine attacks that can affect BTARD-SGD.</text>
<text top="331" left="108" width="371" height="9" font="font3" id="p18_t24" reading_order_no="23" segment_no="4" tag_type="text">Here, we analyze each of these types in detail and provide a list of attacks that fit these types.</text>
<text top="355" left="108" width="74" height="9" font="font1" id="p18_t25" reading_order_no="24" segment_no="5" tag_type="text">Gradient attacks.</text>
<text top="355" left="192" width="312" height="9" font="font3" id="p18_t26" reading_order_no="25" segment_no="5" tag_type="text">This attack vector encompasses all attacks where byzantine peers replace their</text>
<text top="366" left="108" width="396" height="9" font="font3" id="p18_t27" reading_order_no="26" segment_no="5" tag_type="text">true gradients with something else, but otherwise act normally. With this attack, b byzantine peers can</text>
<text top="376" left="108" width="397" height="10" font="font3" id="p18_t28" reading_order_no="27" segment_no="5" tag_type="text">collectively shift the outputs of C ENTERED C LIP by up to τ · b/n in any chosen direction. However,</text>
<text top="388" left="108" width="396" height="9" font="font3" id="p18_t29" reading_order_no="28" segment_no="5" tag_type="text">since byzantine peers will need to commit hash of their incorrect gradients, every honest validator</text>
<text top="398" left="108" width="206" height="10" font="font3" id="p18_t30" reading_order_no="29" segment_no="5" tag_type="text">can accuse one of these peers with probability b/n .</text>
<text top="422" left="108" width="88" height="9" font="font1" id="p18_t31" reading_order_no="30" segment_no="6" tag_type="text">Aggregation attacks.</text>
<text top="422" left="206" width="298" height="9" font="font3" id="p18_t32" reading_order_no="31" segment_no="6" tag_type="text">A similar, but opposite attack type can be attempted when a byzantine peer</text>
<text top="433" left="108" width="396" height="9" font="font3" id="p18_t33" reading_order_no="32" segment_no="6" tag_type="text">performs gradient aggregation. Instead of honestly computing C ENTERED C LIP , an attacker may</text>
<text top="444" left="108" width="398" height="9" font="font3" id="p18_t34" reading_order_no="33" segment_no="6" tag_type="text">modify the returned vector to incorporate the same kinds of changes as in gradient attacks (see above).</text>
<text top="455" left="108" width="397" height="9" font="font3" id="p18_t35" reading_order_no="34" segment_no="6" tag_type="text">This time, the maximum difference that can be applied through such attacks is larger, but it only</text>
<text top="466" left="108" width="271" height="9" font="font3" id="p18_t36" reading_order_no="35" segment_no="6" tag_type="text">affects b/n of vector coordinates that are aggregated by Byzantines.</text>
<text top="482" left="108" width="396" height="9" font="font3" id="p18_t37" reading_order_no="36" segment_no="7" tag_type="text">Done naively, such attacks can be detected and banned by the gradient checksum (see L15-17 in</text>
<text top="492" left="108" width="357" height="12" font="font3" id="p18_t38" reading_order_no="37" segment_no="7" tag_type="text">Alg. 1 ). In order to ensure that the above check passes, Byzantines can misreport their s j</text>
<text top="495" left="462" width="42" height="11" font="font3" id="p18_t39" reading_order_no="38" segment_no="7" tag_type="text">i in such a</text>
<text top="505" left="108" width="59" height="14" font="font3" id="p18_t40" reading_order_no="39" segment_no="7" tag_type="text">way that P i s j</text>
<text top="505" left="164" width="120" height="14" font="font18" id="p18_t41" reading_order_no="40" segment_no="7" tag_type="text">i =0 . However, since actual s j</text>
<text top="506" left="281" width="79" height="13" font="font3" id="p18_t42" reading_order_no="41" segment_no="7" tag_type="text">i depend only on g k<a href="deeplearning_paper1.html#8">4</a></text>
<text top="506" left="356" width="148" height="13" font="font3" id="p18_t43" reading_order_no="42" segment_no="7" tag_type="text">i and ˆ g k , these values can be verified<a href="deeplearning_paper1.html#8">, </a>these costs were dominated by the vector size</text>
<text top="519" left="108" width="293" height="9" font="font3" id="p18_t44" reading_order_no="43" segment_no="7" tag_type="text">by the chosen validators, and, in case of mismatch, reported via A CCUSE .</text>
<text top="534" left="108" width="340" height="12" font="font3" id="p18_t45" reading_order_no="44" segment_no="8" tag_type="text">Furthermore, if an honest validator finds that a certain peer has broadcast incorrect s j</text>
<text top="537" left="445" width="59" height="11" font="font3" id="p18_t46" reading_order_no="45" segment_no="8" tag_type="text">i , the validator</text>
<text top="548" left="108" width="396" height="9" font="font3" id="p18_t47" reading_order_no="46" segment_no="8" tag_type="text">can simultaneously accuse the corresponding byzantine aggregator j that should have detected</text>
<text top="558" left="108" width="46" height="11" font="font3" id="p18_t48" reading_order_no="47" segment_no="8" tag_type="text">incorrect s j</text>
<text top="560" left="151" width="325" height="11" font="font3" id="p18_t49" reading_order_no="48" segment_no="8" tag_type="text">i (see L12-14 in Alg. 1 ), but didn’t. We analyze this attack further in Appendix F .</text>
<text top="584" left="108" width="77" height="9" font="font1" id="p18_t50" reading_order_no="49" segment_no="9" tag_type="text">Reputation abuse.</text>
<text top="584" left="195" width="309" height="9" font="font3" id="p18_t51" reading_order_no="50" segment_no="9" tag_type="text">Since BTARD-SGD provides means by which benign participants can ban</text>
<text top="595" left="108" width="396" height="9" font="font3" id="p18_t52" reading_order_no="51" segment_no="9" tag_type="text">byzantine attackers, it is important to ensure that the same means cannot be exploited by byzantine</text>
<text top="606" left="108" width="396" height="9" font="font3" id="p18_t53" reading_order_no="52" segment_no="9" tag_type="text">peers to eliminate benign ones or otherwise abuse the system. There are three potential attack vectors</text>
<text top="617" left="108" width="92" height="9" font="font3" id="p18_t54" reading_order_no="53" segment_no="9" tag_type="text">that fit this description:</text>
<text top="639" left="108" width="133" height="9" font="font3" id="p18_t55" reading_order_no="54" segment_no="10" tag_type="list">• Falsely accusing a benign peer,</text>
<text top="654" left="108" width="271" height="9" font="font3" id="p18_t56" reading_order_no="55" segment_no="11" tag_type="list">• Persistently calling the A CCUSE procedure to slow down training,</text>
<text top="670" left="108" width="251" height="9" font="font3" id="p18_t57" reading_order_no="56" segment_no="12" tag_type="list">• Automatically approving gradients without actual validation,</text>
<text top="691" left="108" width="397" height="9" font="font3" id="p18_t58" reading_order_no="57" segment_no="13" tag_type="text">In BTARD-SGD, we protect against slander (issues 1. and 2.) by the design of A CCUSE protocol,</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p18_t59" reading_order_no="58" segment_no="13" tag_type="text">by which a peer that initiates false allegations will itself be banned. As such, Byzantines can only</text>
<text top="713" left="108" width="366" height="9" font="font3" id="p18_t60" reading_order_no="59" segment_no="13" tag_type="text">invoke A CCUSE protocol a limited number of times before they are all permanently banned.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p18_t61" reading_order_no="60" segment_no="14" tag_type="text">18</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="396" height="9" font="font3" id="p19_t1" reading_order_no="0" segment_no="0" tag_type="text">In turn, the attack vector (3.) is more effective: if one Byzantine was chosen as validator for another</text>
<text top="86" left="108" width="396" height="9" font="font3" id="p19_t2" reading_order_no="1" segment_no="0" tag_type="text">Byzantine, they can automatically report successful validation without negative consequences for</text>
<text top="97" left="108" width="396" height="9" font="font3" id="p19_t3" reading_order_no="2" segment_no="0" tag_type="text">either of them. However, since all validators are chosen through JPRNG, an attacker has no way of</text>
<text top="108" left="108" width="396" height="9" font="font3" id="p19_t4" reading_order_no="3" segment_no="0" tag_type="text">predicting whether its validator will be benign or byzantine. Thus, any malicious activity will always</text>
<text top="119" left="108" width="212" height="9" font="font3" id="p19_t5" reading_order_no="4" segment_no="0" tag_type="text">have a chance of being caught by an honest validator.</text>
<text top="145" left="108" width="83" height="9" font="font1" id="p19_t6" reading_order_no="5" segment_no="1" tag_type="text">Protocol violations.</text>
<text top="146" left="201" width="304" height="9" font="font3" id="p19_t7" reading_order_no="6" segment_no="1" tag_type="text">Finally, a byzantine attacker can deviate from the protocol prescribed by</text>
<text top="156" left="108" width="203" height="9" font="font3" id="p19_t8" reading_order_no="7" segment_no="1" tag_type="text">BTARD-SGD in simpler ways ways, for instance:</text>
<text top="178" left="108" width="251" height="9" font="font3" id="p19_t9" reading_order_no="8" segment_no="2" tag_type="list">1. Not committing the hash of its gradient when required by 4 ,</text>
<text top="196" left="108" width="314" height="9" font="font3" id="p19_t10" reading_order_no="9" segment_no="3" tag_type="list">2. Not sending data to a particular peer when required (or sending data twice),<a href="deeplearning_paper1.html#23">4</a></text>
<text top="215" left="108" width="319" height="9" font="font3" id="p19_t11" reading_order_no="10" segment_no="4" tag_type="list">3. Deliberately broadcasting a hash that mismatches the subsequently sent data,<a href="deeplearning_paper1.html#23">,</a></text>
<text top="233" left="108" width="382" height="9" font="font3" id="p19_t12" reading_order_no="11" segment_no="5" tag_type="list">4. Sending metadata (e.g. gradient norm) that is inconsistent with previously sent gradient part,</text>
<text top="250" left="108" width="253" height="10" font="font3" id="p19_t13" reading_order_no="12" segment_no="6" tag_type="list">5. Sending s i that is inconsistent with previously sent gradient,</text>
<text top="269" left="108" width="396" height="9" font="font3" id="p19_t14" reading_order_no="13" segment_no="7" tag_type="list">6. Not validating when chosen as validator, validating when not chosen, or validating a different</text>
<text top="280" left="120" width="163" height="9" font="font3" id="p19_t15" reading_order_no="14" segment_no="7" tag_type="list">peer than was chosen by BTARD-SGD.</text>
<text top="302" left="108" width="396" height="9" font="font3" id="p19_t16" reading_order_no="15" segment_no="8" tag_type="text">For protocol deviations that are visible to all benign participants, such as in (1.) or (6.), benign peers</text>
<text top="312" left="108" width="396" height="9" font="font3" id="p19_t17" reading_order_no="16" segment_no="8" tag_type="text">can ban the offender instantaneously. However, this is not the case for attacks such as (2.), where the</text>
<text top="323" left="108" width="176" height="9" font="font3" id="p19_t18" reading_order_no="17" segment_no="8" tag_type="text">deviation is only visible to one or few peers.</text>
<text top="340" left="108" width="396" height="9" font="font3" id="p19_t19" reading_order_no="18" segment_no="9" tag_type="text">As described earlier in Section 3.2 , we address this issue with a special procedure that allows any</text>
<text top="351" left="108" width="396" height="9" font="font3" id="p19_t20" reading_order_no="19" segment_no="9" tag_type="text">peer to ban any other peer at the cost of also being banned. Thus, if an attacker sends inconsistent</text>
<text top="362" left="108" width="396" height="9" font="font3" id="p19_t21" reading_order_no="20" segment_no="9" tag_type="text">gradients, norms or inner products to only one benign peer, that peer can still get the attacker banned</text>
<text top="373" left="108" width="193" height="9" font="font3" id="p19_t22" reading_order_no="21" segment_no="9" tag_type="text">even though it wouldn’t be able to call A CCUSE .</text>
<text top="389" left="108" width="398" height="9" font="font3" id="p19_t23" reading_order_no="22" segment_no="10" tag_type="text">Protecting from attacks 3, 4 and 5 from the above list also relies on this mutual elimination procedure.</text>
<text top="400" left="108" width="396" height="9" font="font3" id="p19_t24" reading_order_no="23" segment_no="10" tag_type="text">Specifically, if an attacker sends provably incorrect data to a benign peer, that peer will immediately</text>
<text top="411" left="108" width="396" height="9" font="font3" id="p19_t25" reading_order_no="24" segment_no="10" tag_type="text">trigger the mutual elimination procedure. The only exception to this rule is if one byzantine peer</text>
<text top="422" left="108" width="397" height="9" font="font3" id="p19_t26" reading_order_no="25" segment_no="10" tag_type="text">sends incorrect data to another byzantine peer: this behavior is neither punishable nor, in itself,</text>
<text top="433" left="108" width="397" height="9" font="font3" id="p19_t27" reading_order_no="26" segment_no="10" tag_type="text">harmful. In turn, the mutuality of this elimination procedure prevents potential misuse by Byzantines:<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="443" left="108" width="378" height="9" font="font3" id="p19_t28" reading_order_no="27" segment_no="10" tag_type="text">if an attacker decides to ban someone through this procedure, that attacker will also be banned.<a href="deeplearning_paper1.html#6">, </a>we address this issue with a special procedure that allows any</text>
<text top="474" left="108" width="8" height="11" font="font6" id="p19_t29" reading_order_no="28" segment_no="11" tag_type="title">E</text>
<text top="474" left="128" width="156" height="11" font="font6" id="p19_t30" reading_order_no="29" segment_no="11" tag_type="title">Detailed algorithm description</text>
<text top="501" left="108" width="396" height="9" font="font3" id="p19_t31" reading_order_no="30" segment_no="12" tag_type="text">In this section, we provide more formal versions of BTARD (Alg. 4 ) and BTARD-SGD (Alg. 6 )</text>
<text top="512" left="108" width="396" height="9" font="font3" id="p19_t32" reading_order_no="31" segment_no="12" tag_type="text">algorithms, as well as auxiliary subroutines. For completeness, we describe our approach in a</text>
<text top="522" left="108" width="396" height="9" font="font3" id="p19_t33" reading_order_no="32" segment_no="12" tag_type="text">bottom-up manner. First, we describe a single aggregation step in Algorithm 4 . Then, we formulate</text>
<text top="533" left="108" width="396" height="9" font="font3" id="p19_t34" reading_order_no="33" segment_no="12" tag_type="text">the A CCUSE subroutine for blocking malicious peers in Algorithm 5 . Finally, we formulate the full</text>
<text top="544" left="108" width="313" height="9" font="font3" id="p19_t35" reading_order_no="34" segment_no="12" tag_type="text">BTARD-SGD in Algorithm 6 using the above subroutines as building blocks.</text>
<text top="561" left="108" width="396" height="9" font="font3" id="p19_t36" reading_order_no="35" segment_no="13" tag_type="text">Algorithm 4 defines a single gradient aggregation step (outlined earlier in Alg. 2 ) with additional</text>
<text top="572" left="108" width="396" height="9" font="font3" id="p19_t37" reading_order_no="36" segment_no="13" tag_type="text">verifications needed to reduce the negative influence of Byzantine peers. For simplicity, we assume</text>
<text top="582" left="108" width="397" height="10" font="font3" id="p19_t38" reading_order_no="37" segment_no="13" tag_type="text">that workers run each line in a synchronous manner (e.g. wait for all peers to broadcast hash ( g i )</text>
<text top="593" left="108" width="396" height="9" font="font3" id="p19_t39" reading_order_no="38" segment_no="13" tag_type="text">before communicating the actual gradients). In practice, this restriction can be lifted in favor of</text>
<text top="604" left="108" width="396" height="9" font="font3" id="p19_t40" reading_order_no="39" segment_no="13" tag_type="text">asynchronous steps with several explicit synchronization barriers, but that would further complicate</text>
<text top="615" left="108" width="68" height="9" font="font3" id="p19_t41" reading_order_no="40" segment_no="13" tag_type="text">the pseudo-code.</text>
<text top="642" left="108" width="57" height="9" font="font1" id="p19_t42" reading_order_no="41" segment_no="14" tag_type="text">CenteredClip</text>
<text top="642" left="175" width="329" height="9" font="font3" id="p19_t43" reading_order_no="42" segment_no="14" tag_type="text">is a robust aggregation rule proposed in [ 58 ]. Unlike a number of other aggregation<a href="deeplearning_paper1.html#23">4</a></text>
<text top="653" left="108" width="396" height="9" font="font3" id="p19_t44" reading_order_no="43" segment_no="14" tag_type="text">rules as coordinate-wise median, Krum, geometric median, C ENTERED C LIP is provably robust<a href="deeplearning_paper1.html#23">) </a>and BTARD-SGD (Alg.</text>
<text top="664" left="108" width="282" height="9" font="font3" id="p19_t45" reading_order_no="44" segment_no="14" tag_type="text">against Byzantine attacks (see Theorem III from [ 58 ] and Lemma F.1 ).<a href="deeplearning_paper1.html#24">6</a></text>
<text top="679" left="108" width="397" height="10" font="font3" id="p19_t46" reading_order_no="45" segment_no="15" tag_type="text">Let G be the set of good peers, B be the set of Byzantine workers, and, for simplicity, let [ n ] = G t B ,<a href="deeplearning_paper1.html#24">)</a></text>
<text top="690" left="108" width="378" height="10" font="font19" id="p19_t47" reading_order_no="46" segment_no="15" tag_type="text">|B| = δn ≤ δ 0 n &lt; n / 2 . Assume that we have n random vectors x 1 , . . . , x n , such that ∀ i, j ∈ G</text>
<text top="713" left="219" width="78" height="10" font="font34" id="p19_t48" reading_order_no="47" segment_no="16" tag_type="formula">E [ x i ] = E [ x j ] = x,</text>
<text top="711" left="309" width="84" height="12" font="font34" id="p19_t49" reading_order_no="48" segment_no="16" tag_type="formula">E [ k x i − x j k 2 ] ≤ σ 2 ,<a href="deeplearning_paper1.html#23">4</a></text>
<text top="743" left="301" width="10" height="9" font="font3" id="p19_t50" reading_order_no="49" segment_no="17" tag_type="text">19<a href="deeplearning_paper1.html#23">. </a>Then, we formulate</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font52" size="7" family="CMEX7" color="#000000"/>
<text top="74" left="108" width="396" height="11" font="font3" id="p20_t1" reading_order_no="0" segment_no="0" tag_type="text">and for all i ∈ B vectors x i can be arbitrary. C ENTERED C LIP works as follows: it is an iterative</text>
<text top="85" left="108" width="205" height="11" font="font3" id="p20_t2" reading_order_no="1" segment_no="0" tag_type="text">procedure generating a sequence { v l } l ≥ 0 satisfying</text>
<text top="107" left="174" width="59" height="15" font="font17" id="p20_t3" reading_order_no="2" segment_no="1" tag_type="formula">v l +1 = v l + 1</text>
<text top="120" left="227" width="6" height="9" font="font17" id="p20_t4" reading_order_no="3" segment_no="1" tag_type="formula">n</text>
<text top="103" left="241" width="5" height="6" font="font28" id="p20_t5" reading_order_no="4" segment_no="1" tag_type="formula">n</text>
<text top="110" left="236" width="14" height="4" font="font29" id="p20_t6" reading_order_no="5" segment_no="1" tag_type="formula">X</text>
<text top="127" left="237" width="13" height="6" font="font28" id="p20_t7" reading_order_no="6" segment_no="1" tag_type="formula">i =1</text>
<text top="111" left="251" width="55" height="12" font="font18" id="p20_t8" reading_order_no="7" segment_no="1" tag_type="formula">( x i − v l ) min</text>
<text top="113" left="315" width="8" height="9" font="font18" id="p20_t9" reading_order_no="8" segment_no="1" tag_type="formula">1 ,</text>
<text top="107" left="342" width="7" height="9" font="font17" id="p20_t10" reading_order_no="9" segment_no="1" tag_type="formula">τ l</text>
<text top="119" left="326" width="39" height="11" font="font19" id="p20_t11" reading_order_no="10" segment_no="1" tag_type="formula">k x i − v l k</text>
<text top="113" left="375" width="3" height="9" font="font17" id="p20_t12" reading_order_no="11" segment_no="1" tag_type="formula">,</text>
<text top="113" left="444" width="60" height="9" font="font3" id="p20_t13" reading_order_no="12" segment_no="1" tag_type="text">(CenteredClip)</text>
<text top="141" left="108" width="24" height="9" font="font3" id="p20_t14" reading_order_no="13" segment_no="2" tag_type="text">where</text>
<text top="163" left="172" width="18" height="10" font="font17" id="p20_t15" reading_order_no="14" segment_no="3" tag_type="formula">τ l =</text>
<text top="150" left="192" width="10" height="4" font="font29" id="p20_t16" reading_order_no="15" segment_no="3" tag_type="formula">s</text>
<text top="156" left="204" width="5" height="9" font="font18" id="p20_t17" reading_order_no="17" segment_no="3" tag_type="formula">4</text>
<text top="147" left="209" width="8" height="9" font="font19" id="p20_t18" reading_order_no="16" segment_no="3" tag_type="formula">√</text>
<text top="155" left="217" width="50" height="12" font="font18" id="p20_t19" reading_order_no="18" segment_no="3" tag_type="formula">2 ( B 2 l + σ 2 )</text>
<text top="170" left="233" width="4" height="9" font="font17" id="p20_t20" reading_order_no="19" segment_no="3" tag_type="formula">δ</text>
<text top="163" left="268" width="3" height="9" font="font17" id="p20_t21" reading_order_no="20" segment_no="3" tag_type="formula">,</text>
<text top="161" left="282" width="12" height="11" font="font17" id="p20_t22" reading_order_no="21" segment_no="3" tag_type="formula">B 2</text>
<text top="163" left="290" width="24" height="11" font="font18" id="p20_t23" reading_order_no="22" segment_no="3" tag_type="formula">l +1 =</text>
<text top="161" left="322" width="32" height="11" font="font18" id="p20_t24" reading_order_no="23" segment_no="3" tag_type="formula">4 δ 2 + 4</text>
<text top="154" left="353" width="8" height="9" font="font19" id="p20_t25" reading_order_no="24" segment_no="3" tag_type="formula">√</text>
<text top="163" left="362" width="9" height="9" font="font18" id="p20_t26" reading_order_no="25" segment_no="3" tag_type="formula">2 δ</text>
<text top="161" left="379" width="12" height="11" font="font17" id="p20_t27" reading_order_no="26" segment_no="3" tag_type="formula">B 2</text>
<text top="163" left="387" width="22" height="11" font="font18" id="p20_t28" reading_order_no="27" segment_no="3" tag_type="formula">l + 4</text>
<text top="154" left="409" width="8" height="9" font="font19" id="p20_t29" reading_order_no="28" segment_no="3" tag_type="formula">√</text>
<text top="161" left="417" width="23" height="11" font="font18" id="p20_t30" reading_order_no="29" segment_no="3" tag_type="formula">2 δσ 2 .</text>
<text top="163" left="492" width="12" height="9" font="font3" id="p20_t31" reading_order_no="30" segment_no="3" tag_type="text">(3)</text>
<text top="192" left="108" width="329" height="10" font="font3" id="p20_t32" reading_order_no="31" segment_no="4" tag_type="text">The goal of this procedure is natural: find good enough approximation b x of x =</text>
<text top="190" left="444" width="4" height="6" font="font30" id="p20_t33" reading_order_no="32" segment_no="4" tag_type="text">1</text>
<text top="191" left="441" width="63" height="13" font="font29" id="p20_t34" reading_order_no="33" segment_no="4" tag_type="text">|G| P i ∈G x i . In</text>
<text top="205" left="108" width="384" height="11" font="font3" id="p20_t35" reading_order_no="34" segment_no="4" tag_type="text">[ 58 ], it is shown 5 that for δ ≤ 0 . 15 the sequence { v l } l ≥ 0 generated by C ENTERED C LIP satisfies</text>
<text top="224" left="216" width="181" height="12" font="font34" id="p20_t36" reading_order_no="35" segment_no="5" tag_type="formula">E [ k v l − x k 2 ] ≤ 0 . 94 l E [ k v 0 − x k 2 ] + 95 δσ 2 .</text>
<text top="244" left="108" width="397" height="11" font="font3" id="p20_t37" reading_order_no="36" segment_no="6" tag_type="text">Moreover, the authors of [ 58 ] prove that for all possible aggregation rules producing b x and given δ 0 ,</text>
<text top="254" left="108" width="326" height="11" font="font17" id="p20_t38" reading_order_no="37" segment_no="6" tag_type="text">σ there exists such set of vectors x 1 , . . . , x n and such a partition [ n ] = G t B that</text>
<text top="272" left="258" width="96" height="13" font="font34" id="p20_t39" reading_order_no="38" segment_no="7" tag_type="formula">E [ k b x − x k 2 ] = Ω( δσ 2 ) .</text>
<text top="292" left="108" width="398" height="9" font="font3" id="p20_t40" reading_order_no="39" segment_no="8" tag_type="text">Therefore, C ENTERED C LIP can be seen as an optimal aggregation rule neglecting numerical constants.</text>
<text top="303" left="108" width="396" height="9" font="font3" id="p20_t41" reading_order_no="40" segment_no="8" tag_type="text">The usage of C ENTERED C LIP helps the good peer i to produce a good enough approximation of the</text>
<text top="314" left="108" width="335" height="9" font="font3" id="p20_t42" reading_order_no="41" segment_no="8" tag_type="text">ideal average of the i -th parts of stochastic gradients among good peers in BTARD.</text>
<text top="330" left="108" width="192" height="11" font="font3" id="p20_t43" reading_order_no="42" segment_no="9" tag_type="text">Moreover, since δ ≤ 0 . 15 we have that 4 δ 2 + 4</text>
<text top="323" left="300" width="8" height="9" font="font19" id="p20_t44" reading_order_no="43" segment_no="9" tag_type="text">√</text>
<text top="330" left="308" width="113" height="11" font="font18" id="p20_t45" reading_order_no="44" segment_no="9" tag_type="text">2 δ ≤ 0 . 94 implying that B 2</text>
<text top="330" left="417" width="87" height="13" font="font19" id="p20_t46" reading_order_no="45" segment_no="9" tag_type="formula">l → B 2 ∼ δσ 2 when</text>
<text top="343" left="108" width="134" height="15" font="font17" id="p20_t47" reading_order_no="46" segment_no="9" tag_type="formula">l → ∞ , and τ l → τ ∼ q σ 2 + σ 2</text>
<text top="348" left="237" width="267" height="12" font="font3" id="p20_t48" reading_order_no="47" segment_no="9" tag_type="text">δ . These limits can be easily computed from ( 3 ). Next, for l → ∞</text>
<text top="362" left="108" width="261" height="9" font="font20" id="p20_t49" reading_order_no="48" segment_no="9" tag_type="text">CenteredClip converges to the solution of the following equation:</text>
<text top="378" left="234" width="5" height="6" font="font28" id="p20_t50" reading_order_no="49" segment_no="10" tag_type="formula">n</text>
<text top="385" left="230" width="14" height="4" font="font29" id="p20_t51" reading_order_no="50" segment_no="10" tag_type="formula">X</text>
<text top="402" left="230" width="13" height="6" font="font28" id="p20_t52" reading_order_no="51" segment_no="10" tag_type="formula">i =1</text>
<text top="388" left="244" width="52" height="10" font="font18" id="p20_t53" reading_order_no="52" segment_no="10" tag_type="formula">( x i − v ) min</text>
<text top="388" left="306" width="8" height="9" font="font18" id="p20_t54" reading_order_no="53" segment_no="10" tag_type="formula">1 ,</text>
<text top="382" left="332" width="4" height="9" font="font17" id="p20_t55" reading_order_no="54" segment_no="10" tag_type="formula">τ</text>
<text top="395" left="316" width="37" height="10" font="font19" id="p20_t56" reading_order_no="55" segment_no="10" tag_type="formula">k x i − v k</text>
<text top="388" left="364" width="19" height="9" font="font18" id="p20_t57" reading_order_no="56" segment_no="10" tag_type="formula">= 0 .</text>
<text top="389" left="492" width="12" height="9" font="font3" id="p20_t58" reading_order_no="57" segment_no="10" tag_type="text">(4)</text>
<text top="416" left="108" width="396" height="9" font="font3" id="p20_t59" reading_order_no="58" segment_no="11" tag_type="text">In other words, CenteredClip for large enough l approximates the fixed point iteration process of</text>
<text top="427" left="108" width="289" height="9" font="font3" id="p20_t60" reading_order_no="59" segment_no="11" tag_type="text">solving ( 4 ). This property plays a key role in Verification 2 of BTARD.</text>
<text top="450" left="108" width="88" height="9" font="font1" id="p20_t61" reading_order_no="60" segment_no="12" tag_type="text">Verifications 1 and 2.</text>
<text top="451" left="206" width="298" height="9" font="font3" id="p20_t62" reading_order_no="61" segment_no="12" tag_type="text">While good peers always run C ENTERED C LIP , Byzantine peers can arbitrary</text>
<text top="462" left="108" width="396" height="9" font="font3" id="p20_t63" reading_order_no="62" segment_no="12" tag_type="text">violate the protocol meaning that they can send an arbitrary vector instead of sending the result of</text>
<text top="472" left="108" width="396" height="9" font="font3" id="p20_t64" reading_order_no="63" segment_no="12" tag_type="text">C ENTERED C LIP . Verification 1 and 2 are needed to prevent such violations and make it possible to</text>
<text top="483" left="108" width="192" height="9" font="font3" id="p20_t65" reading_order_no="64" segment_no="12" tag_type="text">identify them during the check of computations.</text>
<text top="500" left="108" width="396" height="9" font="font3" id="p20_t66" reading_order_no="65" segment_no="13" tag_type="text">First of all, both verifications are split into 2 rounds in order to let the aggregators of the corresponding</text>
<text top="511" left="108" width="396" height="9" font="font3" id="p20_t67" reading_order_no="66" segment_no="13" tag_type="text">part accuse those peers who send inconsistent norms or inner products. Next, in theory, we assume</text>
<text top="522" left="108" width="396" height="9" font="font3" id="p20_t68" reading_order_no="67" segment_no="13" tag_type="text">that all good peers find exactly the solution of C ENTERED C LIP equaition ( 4 ). Therefore, it is possible</text>
<text top="532" left="108" width="396" height="9" font="font3" id="p20_t69" reading_order_no="68" segment_no="13" tag_type="text">to compute the weights from ( 4 ) for each worker i and each component j knowing only a norm of the</text>
<text top="543" left="108" width="268" height="9" font="font3" id="p20_t70" reading_order_no="69" segment_no="13" tag_type="text">difference of corresponding vectors, i.e., one can compute min { 1 ,</text>
<text top="541" left="398" width="4" height="6" font="font28" id="p20_t71" reading_order_no="70" segment_no="13" tag_type="text">τ</text>
<text top="543" left="378" width="128" height="13" font="font19" id="p20_t72" reading_order_no="71" segment_no="13" tag_type="text">k g i ( j ) − b g ( i ) k } by k g i ( j ) − b g ( i ) k .</text>
<text top="556" left="108" width="396" height="11" font="font3" id="p20_t73" reading_order_no="72" segment_no="13" tag_type="text">That is, if Byzantine peer i sends norm ij 6 = k g i ( j ) − b g ( j ) k , it will be either revealed by j -th worker</text>
<text top="567" left="108" width="395" height="10" font="font3" id="p20_t74" reading_order_no="73" segment_no="13" tag_type="text">if j ∈ G or it will be revealed with some probability during the subsequent checks of computations.</text>
<text top="584" left="108" width="397" height="9" font="font3" id="p20_t75" reading_order_no="74" segment_no="14" tag_type="text">However, Verification 1 is insufficient to prevent malicious behavior: at iteration k Byzantine peer</text>
<text top="594" left="108" width="137" height="12" font="font3" id="p20_t76" reading_order_no="75" segment_no="14" tag_type="text">can send g k i ( j ) such that k g k i ( j ) −</text>
<text top="594" left="247" width="117" height="12" font="font29" id="p20_t77" reading_order_no="76" segment_no="14" tag_type="text">b g k ( j ) k = k∇ ( j ) f ( x k , ξ i,k ) −</text>
<text top="594" left="366" width="138" height="12" font="font29" id="p20_t78" reading_order_no="77" segment_no="14" tag_type="text">b g k ( j ) k . If j ∈ B , then it can be the</text>
<text top="607" left="108" width="396" height="11" font="font3" id="p20_t79" reading_order_no="78" segment_no="14" tag_type="text">case that i -th worker commits the hash of ∇ ( j ) f ( x k , ξ i,k ) and the check of gradient computation will</text>
<text top="619" left="108" width="321" height="9" font="font3" id="p20_t80" reading_order_no="79" segment_no="14" tag_type="text">not identify the violation of the protocol. That is why, Verification 2 is required.</text>
<text top="635" left="108" width="396" height="10" font="font3" id="p20_t81" reading_order_no="80" segment_no="15" tag_type="text">The goal of Verification 2 , is to check that C ENTERED C LIP equation ( 4 ) holds for the received</text>
<text top="646" left="108" width="115" height="9" font="font3" id="p20_t82" reading_order_no="81" segment_no="15" tag_type="text">vector. The idea is simple: if</text>
<text top="663" left="213" width="5" height="6" font="font28" id="p20_t83" reading_order_no="82" segment_no="16" tag_type="formula">n</text>
<text top="670" left="209" width="14" height="4" font="font29" id="p20_t84" reading_order_no="83" segment_no="16" tag_type="formula">X</text>
<text top="687" left="210" width="12" height="6" font="font28" id="p20_t85" reading_order_no="84" segment_no="16" tag_type="formula">l =1</text>
<text top="672" left="223" width="33" height="11" font="font18" id="p20_t86" reading_order_no="85" segment_no="16" tag_type="formula">( g l ( i ) −</text>
<text top="673" left="258" width="38" height="11" font="font29" id="p20_t87" reading_order_no="86" segment_no="16" tag_type="formula">b g ( i )) min</text>
<text top="673" left="306" width="8" height="9" font="font18" id="p20_t88" reading_order_no="87" segment_no="16" tag_type="formula">1 ,</text>
<text top="666" left="342" width="4" height="9" font="font17" id="p20_t89" reading_order_no="88" segment_no="16" tag_type="formula">τ</text>
<text top="679" left="316" width="58" height="11" font="font19" id="p20_t90" reading_order_no="89" segment_no="16" tag_type="formula">k g l ( i ) − b g ( i ) k</text>
<text top="673" left="385" width="19" height="9" font="font18" id="p20_t91" reading_order_no="90" segment_no="16" tag_type="formula">= 0 ,</text>
<text top="673" left="492" width="12" height="9" font="font3" id="p20_t92" reading_order_no="91" segment_no="16" tag_type="text">(5)</text>
<text top="702" left="121" width="383" height="10" font="font9" id="p20_t93" reading_order_no="92" segment_no="17" tag_type="footnote">5 On the moment of writing this paper, the proof of Theorem III from [ 58 ] contained a minor inaccuracy. The</text>
<text top="712" left="108" width="346" height="11" font="font9" id="p20_t94" reading_order_no="93" segment_no="17" tag_type="footnote">issue can be easily resolved under assumption that for all i, j ∈ G we have E [ k x i − x j k 4 ] ≤ σ 4 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p20_t95" reading_order_no="94" segment_no="18" tag_type="text">20</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font53" size="8" family="NimbusRomNo9L-Medi" color="#000000"/>
<text top="75" left="108" width="173" height="10" font="font3" id="p21_t1" reading_order_no="0" segment_no="0" tag_type="text">then for any z i of an appropriate dimension</text>
<text top="88" left="207" width="5" height="6" font="font28" id="p21_t2" reading_order_no="1" segment_no="1" tag_type="formula">n</text>
<text top="95" left="202" width="14" height="4" font="font29" id="p21_t3" reading_order_no="2" segment_no="1" tag_type="formula">X</text>
<text top="112" left="203" width="13" height="6" font="font28" id="p21_t4" reading_order_no="3" segment_no="1" tag_type="formula">l =1</text>
<text top="97" left="217" width="33" height="11" font="font19" id="p21_t5" reading_order_no="4" segment_no="1" tag_type="formula">h g l ( i ) −</text>
<text top="97" left="252" width="51" height="12" font="font29" id="p21_t6" reading_order_no="5" segment_no="1" tag_type="formula">b g ( i ) , z i i min</text>
<text top="98" left="312" width="8" height="9" font="font18" id="p21_t7" reading_order_no="6" segment_no="1" tag_type="formula">1 ,</text>
<text top="91" left="348" width="4" height="9" font="font17" id="p21_t8" reading_order_no="7" segment_no="1" tag_type="formula">τ</text>
<text top="104" left="322" width="58" height="11" font="font19" id="p21_t9" reading_order_no="8" segment_no="1" tag_type="formula">k g l ( i ) − b g ( i ) k</text>
<text top="98" left="391" width="19" height="9" font="font18" id="p21_t10" reading_order_no="9" segment_no="1" tag_type="formula">= 0 .</text>
<text top="98" left="492" width="12" height="9" font="font3" id="p21_t11" reading_order_no="10" segment_no="1" tag_type="text">(6)</text>
<text top="122" left="108" width="393" height="10" font="font3" id="p21_t12" reading_order_no="11" segment_no="2" tag_type="text">Since z i in BTARD is generated from the uniform distribution on the unit Euclidean sphere, we have</text>
<text top="136" left="221" width="80" height="11" font="font34" id="p21_t13" reading_order_no="12" segment_no="3" tag_type="formula">P { ( 5 ) does not hold</text>
<text top="136" left="312" width="8" height="9" font="font18" id="p21_t14" reading_order_no="13" segment_no="3" tag_type="formula">&amp;</text>
<text top="136" left="329" width="62" height="10" font="font3" id="p21_t15" reading_order_no="14" segment_no="3" tag_type="formula">( 6 ) holds } = 0 .</text>
<text top="137" left="492" width="12" height="9" font="font3" id="p21_t16" reading_order_no="15" segment_no="3" tag_type="text">(7)</text>
<text top="150" left="108" width="396" height="10" font="font3" id="p21_t17" reading_order_no="16" segment_no="4" tag_type="text">However, it is impossible to verify ( 6 ) explicitly for workers j 6 = i . Therefore, in the algorithm, good</text>
<text top="162" left="108" width="58" height="9" font="font3" id="p21_t18" reading_order_no="17" segment_no="4" tag_type="text">workers check</text>
<text top="174" left="152" width="5" height="6" font="font28" id="p21_t19" reading_order_no="18" segment_no="5" tag_type="formula">n</text>
<text top="181" left="147" width="14" height="4" font="font29" id="p21_t20" reading_order_no="19" segment_no="5" tag_type="formula">X</text>
<text top="198" left="148" width="12" height="6" font="font28" id="p21_t21" reading_order_no="20" segment_no="5" tag_type="formula">l =1</text>
<text top="182" left="163" width="8" height="11" font="font17" id="p21_t22" reading_order_no="21" segment_no="5" tag_type="formula">s i</text>
<text top="184" left="168" width="24" height="11" font="font18" id="p21_t23" reading_order_no="22" segment_no="5" tag_type="formula">l = 0 ,</text>
<text top="182" left="204" width="34" height="11" font="font3" id="p21_t24" reading_order_no="23" segment_no="5" tag_type="formula">where s i</text>
<text top="184" left="235" width="14" height="11" font="font18" id="p21_t25" reading_order_no="24" segment_no="5" tag_type="formula">l =</text>
<text top="173" left="252" width="110" height="15" font="font29" id="p21_t26" reading_order_no="25" segment_no="5" tag_type="formula">( h g l ( i ) − b g ( i ) , z i i min n 1 ,</text>
<text top="176" left="384" width="4" height="6" font="font28" id="p21_t27" reading_order_no="26" segment_no="5" tag_type="formula">τ</text>
<text top="183" left="365" width="43" height="8" font="font4" id="p21_t28" reading_order_no="27" segment_no="5" tag_type="formula">k g l ( i ) − b g ( i ) k</text>
<text top="173" left="409" width="12" height="14" font="font29" id="p21_t29" reading_order_no="28" segment_no="5" tag_type="formula">o ,</text>
<text top="177" left="430" width="34" height="10" font="font3" id="p21_t30" reading_order_no="29" segment_no="5" tag_type="formula">if l ∈ G ,</text>
<text top="193" left="260" width="8" height="9" font="font19" id="p21_t31" reading_order_no="30" segment_no="5" tag_type="formula">∗ ,</text>
<text top="193" left="430" width="34" height="9" font="font3" id="p21_t32" reading_order_no="31" segment_no="5" tag_type="formula">if l ∈ B .</text>
<text top="184" left="492" width="12" height="9" font="font3" id="p21_t33" reading_order_no="32" segment_no="5" tag_type="text">(8)</text>
<text top="208" left="108" width="209" height="11" font="font3" id="p21_t34" reading_order_no="33" segment_no="6" tag_type="text">Unfortunately, Byzantine peers can send arbitrary s i</text>
<text top="210" left="314" width="190" height="11" font="font3" id="p21_t35" reading_order_no="34" segment_no="6" tag_type="text">l . This can lead to the situations when ( 8 ) holds</text>
<text top="221" left="108" width="396" height="9" font="font3" id="p21_t36" reading_order_no="35" segment_no="6" tag_type="text">while ( 6 ) and, as a consequence, ( 5 ) do not. Below, we rigorously show that all possible violations of</text>
<text top="232" left="108" width="396" height="9" font="font3" id="p21_t37" reading_order_no="36" segment_no="6" tag_type="text">the protocol that are not detected by verifications of BTARD can be detected by the auxiliary check</text>
<text top="243" left="108" width="156" height="9" font="font3" id="p21_t38" reading_order_no="37" segment_no="6" tag_type="text">of computations with some probability.</text>
<text top="266" left="108" width="68" height="8" font="font5" id="p21_t39" reading_order_no="38" segment_no="7" tag_type="text">random_vector</text>
<text top="265" left="186" width="318" height="9" font="font3" id="p21_t40" reading_order_no="39" segment_no="7" tag_type="text">as described earlier in Section 3.1 , this function generates a pseudo-random unit</text>
<text top="276" left="108" width="396" height="9" font="font3" id="p21_t41" reading_order_no="40" segment_no="7" tag_type="text">vector in the space of model parameters. This vector is based on a random seed obtained from</text>
<text top="287" left="108" width="33" height="9" font="font3" id="p21_t42" reading_order_no="41" segment_no="7" tag_type="text">JPRNG.</text>
<text top="309" left="108" width="110" height="9" font="font1" id="p21_t43" reading_order_no="42" segment_no="8" tag_type="text">A CCUSE and E LIMINATE</text>
<text top="309" left="228" width="276" height="9" font="font3" id="p21_t44" reading_order_no="43" segment_no="8" tag_type="text">are the two protocols by which peers ban bock Byzantine attackers</text>
<text top="320" left="108" width="396" height="9" font="font3" id="p21_t45" reading_order_no="44" segment_no="8" tag_type="text">from training. The A CCUSE protocol is only invoked if there the malicious activity of the target peer</text>
<text top="331" left="108" width="396" height="9" font="font3" id="p21_t46" reading_order_no="45" segment_no="8" tag_type="text">can be proven to others (we detail the exact mechanism in Algorithm 3 ). In contrast, E LIMINATE is a</text>
<text top="342" left="108" width="396" height="9" font="font3" id="p21_t47" reading_order_no="46" segment_no="8" tag_type="text">mechanism that allows any peer i to ban any other peer j from training without proof — but at the</text>
<text top="353" left="108" width="396" height="9" font="font3" id="p21_t48" reading_order_no="47" segment_no="8" tag_type="text">cost of peer i also being banned. We have described this protocol earlier as a countermeasure for</text>
<text top="364" left="108" width="151" height="9" font="font3" id="p21_t49" reading_order_no="48" segment_no="8" tag_type="text">protocol violations (see Appendix D ).</text>
<text top="386" left="108" width="59" height="9" font="font1" id="p21_t50" reading_order_no="49" segment_no="9" tag_type="text">Verification 3.<a href="deeplearning_paper1.html#20">(</a></text>
<text top="386" left="177" width="328" height="10" font="font3" id="p21_t51" reading_order_no="50" segment_no="9" tag_type="text">This is an additional verification that serves to limit the potential scope of aggrega-<a href="deeplearning_paper1.html#20">5</a></text>
<text top="397" left="108" width="396" height="9" font="font13" id="p21_t52" reading_order_no="51" segment_no="9" tag_type="text">tion attacks (as described in Appendix D ). If the result of CenteredClip landed far from too many<a href="deeplearning_paper1.html#20">) </a>does not hold</text>
<text top="408" left="108" width="396" height="9" font="font3" id="p21_t53" reading_order_no="52" segment_no="9" tag_type="text">benign participants, BTARD will verify it by re-running the same aggregation across all peers. While</text>
<text top="419" left="108" width="396" height="9" font="font3" id="p21_t54" reading_order_no="53" segment_no="9" tag_type="text">this procedure is costly, our analysis proves that it is has a very small probability of triggering unless<a href="deeplearning_paper1.html#21">(</a></text>
<text top="430" left="108" width="396" height="9" font="font3" id="p21_t55" reading_order_no="54" segment_no="9" tag_type="text">some of the peers perform aggregation attacks. In the latter case, verifying the gradient accumulation<a href="deeplearning_paper1.html#21">6</a></text>
<text top="441" left="108" width="234" height="9" font="font3" id="p21_t56" reading_order_no="55" segment_no="9" tag_type="text">will root out such attacks and ban the corresponding peers.<a href="deeplearning_paper1.html#21">) </a>holds</text>
<text top="463" left="108" width="101" height="9" font="font1" id="p21_t57" reading_order_no="56" segment_no="10" tag_type="text">Check of computations.</text>
<text top="463" left="219" width="285" height="9" font="font3" id="p21_t58" reading_order_no="57" segment_no="10" tag_type="text">As we mentioned earlier, it is possible to violate the protocol without</text>
<text top="474" left="108" width="398" height="9" font="font3" id="p21_t59" reading_order_no="58" segment_no="10" tag_type="text">being detected by the verifications of BTARD. Therefore, extra checks of computations are required.</text>
<text top="485" left="108" width="398" height="9" font="font3" id="p21_t60" reading_order_no="59" segment_no="10" tag_type="text">In particular, after each aggregation in BTARD-SGD 2 m workers are selected uniformly at random:</text>
<text top="496" left="108" width="396" height="9" font="font17" id="p21_t61" reading_order_no="60" segment_no="10" tag_type="text">m workers check the computations at the previous step of other m workers. That is, each Byzantine<a href="deeplearning_paper1.html#21">(</a></text>
<text top="506" left="108" width="398" height="10" font="font3" id="p21_t62" reading_order_no="61" segment_no="10" tag_type="text">peer is checked at iteration k with probability ∼ m / n by some good worker (see the proof of Thm. F.1 ).<a href="deeplearning_paper1.html#21">6</a></text>
<text top="518" left="108" width="396" height="9" font="font3" id="p21_t63" reading_order_no="62" segment_no="10" tag_type="text">Consider an arbitrary Byzantine peer j and all possible violations of the protocol at iteration k that<a href="deeplearning_paper1.html#21">) </a>explicitly for workers</text>
<text top="529" left="108" width="178" height="9" font="font3" id="p21_t64" reading_order_no="63" segment_no="10" tag_type="text">are not detected by verifications of BTARD.</text>
<text top="544" left="108" width="396" height="11" font="font3" id="p21_t65" reading_order_no="64" segment_no="11" tag_type="text">First of all, we notice that if c j ( i ) 6 = hash ( ∇ ( i ) f ( x k , ξ j,k )) , then it will be detected during the</text>
<text top="557" left="108" width="396" height="10" font="font3" id="p21_t66" reading_order_no="65" segment_no="11" tag_type="text">check of computations with some probability 6 . Moreover, if i ∈ G , then j -th worker has to send</text>
<text top="569" left="108" width="135" height="9" font="font17" id="p21_t67" reading_order_no="66" segment_no="11" tag_type="text">c j ( i ) = hash ( g j ( i )) to avoid ban.</text>
<text top="585" left="108" width="397" height="9" font="font3" id="p21_t68" reading_order_no="67" segment_no="12" tag_type="text">Therefore, the only non-trivial case is when i ∈ B as well. In this case, j -th worker can com-</text>
<text top="595" left="108" width="398" height="11" font="font3" id="p21_t69" reading_order_no="68" segment_no="12" tag_type="text">mit c j ( i ) = hash ( ∇ ( i ) f ( x k , ξ j,k )) since it is meaningless for i -th worker to accuse j -th one.</text>
<text top="607" left="108" width="67" height="13" font="font3" id="p21_t70" reading_order_no="69" segment_no="12" tag_type="text">Since norm ij , s j</text>
<text top="610" left="172" width="332" height="11" font="font3" id="p21_t71" reading_order_no="70" segment_no="12" tag_type="text">i and b g ( i ) are known for all i and j , j -th worker has to broadcast norm ji =</text>
<text top="621" left="108" width="296" height="15" font="font19" id="p21_t72" reading_order_no="71" segment_no="12" tag_type="formula">k∇ ( i ) f ( x k , ξ j,k ) − b g ( i ) k and s i j = h∇ ( i ) f ( x k , ξ j,k ) − b g ( i ) , z i i min n 1 ,</text>
<text top="624" left="443" width="4" height="6" font="font28" id="p21_t73" reading_order_no="72" segment_no="12" tag_type="formula">τ</text>
<text top="630" left="407" width="78" height="9" font="font4" id="p21_t74" reading_order_no="73" segment_no="12" tag_type="formula">k∇ ( i ) f ( x k ,ξ j,k ) − b g ( i ) k</text>
<text top="621" left="486" width="18" height="14" font="font29" id="p21_t75" reading_order_no="74" segment_no="12" tag_type="formula">o to</text>
<text top="640" left="108" width="396" height="10" font="font3" id="p21_t76" reading_order_no="75" segment_no="12" tag_type="text">avoid the ban during the check of the computations. Therefore, regardless to the choice g j ( i ) , to pass</text>
<text top="651" left="108" width="211" height="11" font="font1" id="p21_t77" reading_order_no="76" segment_no="12" tag_type="text">Verification 2 i -th worker should send such b g ( i ) that</text>
<text top="670" left="135" width="14" height="4" font="font29" id="p21_t78" reading_order_no="77" segment_no="13" tag_type="formula">X</text>
<text top="687" left="127" width="30" height="7" font="font28" id="p21_t79" reading_order_no="78" segment_no="13" tag_type="formula">l ∈G∪{ j }</text>
<text top="671" left="158" width="128" height="12" font="font19" id="p21_t80" reading_order_no="79" segment_no="13" tag_type="formula">h∇ ( i ) f ( x k , ξ l,k ) − b g ( i ) , z i i min</text>
<text top="673" left="294" width="8" height="9" font="font18" id="p21_t81" reading_order_no="80" segment_no="13" tag_type="formula">1 ,</text>
<text top="666" left="352" width="4" height="9" font="font17" id="p21_t82" reading_order_no="81" segment_no="13" tag_type="formula">τ</text>
<text top="679" left="305" width="99" height="11" font="font19" id="p21_t83" reading_order_no="82" segment_no="13" tag_type="formula">k∇ ( i ) f ( x k , ξ l,k ) − b g ( i ) k</text>
<text top="673" left="415" width="8" height="9" font="font18" id="p21_t84" reading_order_no="83" segment_no="13" tag_type="formula">+</text>
<text top="670" left="432" width="14" height="4" font="font29" id="p21_t85" reading_order_no="84" segment_no="13" tag_type="formula">X</text>
<text top="687" left="425" width="29" height="7" font="font28" id="p21_t86" reading_order_no="85" segment_no="13" tag_type="formula">l ∈B\{ j }</text>
<text top="671" left="456" width="29" height="12" font="font17" id="p21_t87" reading_order_no="86" segment_no="13" tag_type="formula">s i l = 0 .</text>
<text top="702" left="121" width="383" height="10" font="font9" id="p21_t88" reading_order_no="87" segment_no="14" tag_type="footnote">6 Here and below, this means that the attack/violation will be detected iff a non-Byzantine peer is chosen to</text>
<text top="714" left="108" width="85" height="8" font="font9" id="p21_t89" reading_order_no="88" segment_no="14" tag_type="footnote">validate the perpetrator.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p21_t90" reading_order_no="89" segment_no="15" tag_type="text">21</text>
</page>
<page number="22" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="397" height="9" font="font3" id="p22_t1" reading_order_no="0" segment_no="0" tag_type="text">In this case, the behavior of the j -th worker along i -th component is equivalent to the behavior</text>
<text top="86" left="108" width="398" height="9" font="font3" id="p22_t2" reading_order_no="1" segment_no="0" tag_type="text">of the good one. It means, that to avoid ban during the check of computations, each Byzan-</text>
<text top="95" left="108" width="304" height="12" font="font3" id="p22_t3" reading_order_no="2" segment_no="0" tag_type="text">tine worker l should broadcast norm li = k∇ ( i ) f ( x k , ξ l,k ) − b g ( i ) k and s i</text>
<text top="95" left="409" width="95" height="13" font="font18" id="p22_t4" reading_order_no="3" segment_no="0" tag_type="text">l = h∇ ( i ) f ( x k , ξ l,k ) −</text>
<text top="108" left="108" width="67" height="15" font="font29" id="p22_t5" reading_order_no="4" segment_no="0" tag_type="formula">b g ( i ) , z i i min n 1 ,</text>
<text top="111" left="214" width="4" height="6" font="font28" id="p22_t6" reading_order_no="5" segment_no="0" tag_type="formula">τ</text>
<text top="118" left="178" width="77" height="8" font="font4" id="p22_t7" reading_order_no="6" segment_no="0" tag_type="formula">k∇ ( i ) f ( x k ,ξ l,k ) − b g ( i ) k</text>
<text top="108" left="256" width="217" height="15" font="font29" id="p22_t8" reading_order_no="7" segment_no="0" tag_type="text">o implying that i -th worker should send such b g ( i ) that</text>
<text top="133" left="165" width="5" height="6" font="font28" id="p22_t9" reading_order_no="8" segment_no="1" tag_type="formula">n</text>
<text top="141" left="161" width="14" height="4" font="font29" id="p22_t10" reading_order_no="9" segment_no="1" tag_type="formula">X</text>
<text top="158" left="162" width="12" height="6" font="font28" id="p22_t11" reading_order_no="10" segment_no="1" tag_type="formula">l =1</text>
<text top="142" left="175" width="128" height="12" font="font19" id="p22_t12" reading_order_no="11" segment_no="1" tag_type="formula">h∇ ( i ) f ( x k , ξ l,k ) − b g ( i ) , z i i min</text>
<text top="144" left="312" width="8" height="9" font="font18" id="p22_t13" reading_order_no="12" segment_no="1" tag_type="formula">1 ,</text>
<text top="137" left="369" width="4" height="9" font="font17" id="p22_t14" reading_order_no="13" segment_no="1" tag_type="formula">τ</text>
<text top="150" left="322" width="100" height="11" font="font19" id="p22_t15" reading_order_no="14" segment_no="1" tag_type="formula">k∇ ( i ) f ( x k , ξ l,k ) − b g ( i ) k</text>
<text top="144" left="433" width="19" height="9" font="font18" id="p22_t16" reading_order_no="15" segment_no="1" tag_type="formula">= 0 .</text>
<text top="172" left="108" width="114" height="9" font="font3" id="p22_t17" reading_order_no="16" segment_no="2" tag_type="text">In view of ( 7 ), it implies that</text>
<text top="189" left="146" width="321" height="12" font="font29" id="p22_t18" reading_order_no="17" segment_no="3" tag_type="formula">b g ( i ) = C ENTERED C LIP ( ∇ ( i ) f ( x k , ξ 1 ,k ) , ∇ ( i ) f ( x k , ξ 2 ,k ) , . . . , ∇ ( i ) f ( x k , ξ 2 ,k )) ,</text>
<text top="208" left="108" width="272" height="10" font="font3" id="p22_t19" reading_order_no="18" segment_no="4" tag_type="text">i.e., there are no violations of the protocol along the i -th component.</text>
<text top="232" left="108" width="60" height="9" font="font1" id="p22_t20" reading_order_no="19" segment_no="5" tag_type="text">BTARD-SGD.</text>
<text top="232" left="178" width="326" height="9" font="font3" id="p22_t21" reading_order_no="20" segment_no="5" tag_type="text">Finally, the Algorithm 6 incorporates the two above procedures into a secure</text>
<text top="243" left="108" width="396" height="9" font="font3" id="p22_t22" reading_order_no="21" segment_no="5" tag_type="text">decentralized SGD training loop. This algorithm is intended as a more formal version of Alg. 1 from</text>
<text top="254" left="108" width="47" height="9" font="font3" id="p22_t23" reading_order_no="22" segment_no="5" tag_type="text">Section 3.1 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p22_t24" reading_order_no="23" segment_no="6" tag_type="text">22</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font54" size="10" family="NimbusRomNo9L-Medi" color="#0000ff"/>
	<fontspec id="font55" size="7" family="SFTT0800" color="#000000"/>
<text top="102" left="108" width="226" height="9" font="font1" id="p23_t1" reading_order_no="0" segment_no="0" tag_type="title">Algorithm 4 B yzantine- T olerant A ll- R e d uce (BTARD)</text>
<text top="117" left="108" width="397" height="12" font="font1" id="p23_t2" reading_order_no="1" segment_no="1" tag_type="code">Input: n -number of workers, g 1 , g 2 , . . . , g n ∈ R d – vectors on the workers, d &gt; n , ∆ max &gt; 0 –</text>
<text top="130" left="125" width="109" height="9" font="font3" id="p23_t3" reading_order_no="2" segment_no="1" tag_type="code">parameter for verification 3</text>
<text top="140" left="113" width="167" height="10" font="font1" id="p23_t4" reading_order_no="3" segment_no="1" tag_type="code">1: for workers i = 1 , . . . , n in parallel do</text>
<text top="152" left="113" width="7" height="8" font="font9" id="p23_t5" reading_order_no="4" segment_no="1" tag_type="code">2:</text>
<text top="149" left="140" width="316" height="13" font="font3" id="p23_t6" reading_order_no="5" segment_no="1" tag_type="code">Split g i into n parts: g i = ( g i (1) &gt; , . . . , g i ( n ) &gt; ) &gt; , g i ( j ) ∈ R d j for all i, j ∈ [ n ]</text>
<text top="163" left="113" width="7" height="8" font="font9" id="p23_t7" reading_order_no="6" segment_no="1" tag_type="code">3:</text>
<text top="174" left="113" width="7" height="8" font="font9" id="p23_t8" reading_order_no="7" segment_no="1" tag_type="code">4:</text>
<text top="173" left="140" width="100" height="10" font="font3" id="p23_t9" reading_order_no="8" segment_no="1" tag_type="code">Broadcast hash ( g i ) as c i</text>
<text top="185" left="113" width="7" height="8" font="font9" id="p23_t10" reading_order_no="9" segment_no="1" tag_type="code">5:</text>
<text top="184" left="140" width="74" height="9" font="font1" id="p23_t11" reading_order_no="10" segment_no="1" tag_type="code">for j = 1, . . . , n do</text>
<text top="196" left="113" width="7" height="8" font="font9" id="p23_t12" reading_order_no="11" segment_no="1" tag_type="code">6:</text>
<text top="195" left="155" width="125" height="10" font="font3" id="p23_t13" reading_order_no="12" segment_no="1" tag_type="code">Broadcast hash ( g i ( j )) as c i ( j )</text>
<text top="209" left="113" width="7" height="8" font="font9" id="p23_t14" reading_order_no="13" segment_no="1" tag_type="code">7:</text>
<text top="220" left="113" width="7" height="8" font="font9" id="p23_t15" reading_order_no="14" segment_no="1" tag_type="code">8:</text>
<text top="219" left="140" width="159" height="9" font="font1" id="p23_t16" reading_order_no="15" segment_no="1" tag_type="code">Aggregate gradients (same as Alg. 2 ):</text>
<text top="231" left="113" width="7" height="8" font="font9" id="p23_t17" reading_order_no="16" segment_no="1" tag_type="code">9:</text>
<text top="230" left="140" width="364" height="10" font="font3" id="p23_t18" reading_order_no="17" segment_no="1" tag_type="code">Send g i ( j ) to the j -th worker for all j 6 = i and receive g j ( i ) for all j 6 = i from other workers</text>
<text top="242" left="108" width="11" height="8" font="font9" id="p23_t19" reading_order_no="18" segment_no="1" tag_type="code">10:</text>
<text top="241" left="140" width="79" height="9" font="font1" id="p23_t20" reading_order_no="19" segment_no="1" tag_type="code">for j = 1 , . . . , n do</text>
<text top="253" left="108" width="11" height="8" font="font9" id="p23_t21" reading_order_no="20" segment_no="1" tag_type="code">11:</text>
<text top="252" left="155" width="112" height="10" font="font1" id="p23_t22" reading_order_no="21" segment_no="1" tag_type="code">if hash ( g j ( i )) 6 = c j ( i ) then</text>
<text top="264" left="108" width="11" height="8" font="font9" id="p23_t23" reading_order_no="22" segment_no="1" tag_type="code">12:</text>
<text top="263" left="170" width="190" height="11" font="font3" id="p23_t24" reading_order_no="23" segment_no="1" tag_type="code">E LIMINATE ( i, j ) signed with peer i private key</text>
<text top="277" left="108" width="11" height="8" font="font9" id="p23_t25" reading_order_no="24" segment_no="1" tag_type="code">13:</text>
<text top="277" left="140" width="233" height="10" font="font3" id="p23_t26" reading_order_no="25" segment_no="1" tag_type="code">Compute b g ( i ) = C ENTERED C LIP ( g 1 ( i ) , g 2 ( i ) , . . . , g n ( i ))</text>
<text top="288" left="108" width="11" height="8" font="font9" id="p23_t27" reading_order_no="26" segment_no="1" tag_type="code">14:</text>
<text top="287" left="140" width="116" height="11" font="font3" id="p23_t28" reading_order_no="27" segment_no="1" tag_type="code">Broadcast hash ( b g ( i )) as b c ( i )</text>
<text top="299" left="108" width="11" height="8" font="font9" id="p23_t29" reading_order_no="28" segment_no="1" tag_type="code">15:</text>
<text top="298" left="140" width="298" height="11" font="font3" id="p23_t30" reading_order_no="29" segment_no="1" tag_type="code">Send b g ( i ) to each worker and receive b g ( j ) for all j 6 = i from other workers</text>
<text top="310" left="108" width="11" height="8" font="font9" id="p23_t31" reading_order_no="30" segment_no="1" tag_type="code">16:</text>
<text top="309" left="140" width="79" height="9" font="font1" id="p23_t32" reading_order_no="31" segment_no="1" tag_type="code">for j = 1 , . . . , n do</text>
<text top="321" left="108" width="11" height="8" font="font9" id="p23_t33" reading_order_no="32" segment_no="1" tag_type="code">17:</text>
<text top="320" left="155" width="106" height="11" font="font1" id="p23_t34" reading_order_no="33" segment_no="1" tag_type="code">if hash ( b g ( j )) 6 = b c ( j ) then</text>
<text top="332" left="108" width="11" height="8" font="font9" id="p23_t35" reading_order_no="34" segment_no="1" tag_type="code">18:</text>
<text top="331" left="170" width="190" height="11" font="font3" id="p23_t36" reading_order_no="35" segment_no="1" tag_type="code">E LIMINATE ( i, j ) signed with peer i private key</text>
<text top="346" left="108" width="11" height="8" font="font9" id="p23_t37" reading_order_no="36" segment_no="1" tag_type="code">19:</text>
<text top="345" left="140" width="150" height="10" font="font3" id="p23_t38" reading_order_no="37" segment_no="1" tag_type="code">Compute b g = merge ( b g (1) , . . . , b g ( n ))</text>
<text top="356" left="108" width="11" height="8" font="font9" id="p23_t39" reading_order_no="38" segment_no="1" tag_type="code">20:</text>
<text top="367" left="108" width="11" height="8" font="font9" id="p23_t40" reading_order_no="39" segment_no="1" tag_type="code">21:</text>
<text top="367" left="140" width="132" height="9" font="font1" id="p23_t41" reading_order_no="40" segment_no="1" tag_type="code">Send metadata for verification:</text>
<text top="378" left="108" width="11" height="8" font="font9" id="p23_t42" reading_order_no="41" segment_no="1" tag_type="code">22:</text>
<text top="377" left="140" width="86" height="10" font="font3" id="p23_t43" reading_order_no="42" segment_no="1" tag_type="code">Generate r via JPRNG</text>
<text top="389" left="108" width="11" height="8" font="font9" id="p23_t44" reading_order_no="43" segment_no="1" tag_type="code">23:</text>
<text top="388" left="140" width="73" height="9" font="font1" id="p23_t45" reading_order_no="44" segment_no="1" tag_type="code">for j ∈ 1 , ..., n do</text>
<text top="404" left="108" width="11" height="8" font="font9" id="p23_t46" reading_order_no="45" segment_no="1" tag_type="code">24:</text>
<text top="400" left="155" width="11" height="12" font="font18" id="p23_t47" reading_order_no="46" segment_no="1" tag_type="code">∆ j</text>
<text top="398" left="163" width="110" height="16" font="font18" id="p23_t48" reading_order_no="47" segment_no="1" tag_type="code">i =( g i ( j ) − b g ( j )) · min n 1 ,</text>
<text top="401" left="298" width="4" height="6" font="font28" id="p23_t49" reading_order_no="48" segment_no="1" tag_type="code">τ</text>
<text top="408" left="276" width="48" height="8" font="font4" id="p23_t50" reading_order_no="49" segment_no="1" tag_type="code">k g i ( j ) − b g ( j ) k 2</text>
<text top="398" left="326" width="7" height="4" font="font29" id="p23_t51" reading_order_no="50" segment_no="1" tag_type="code">o</text>
<text top="419" left="108" width="11" height="8" font="font9" id="p23_t52" reading_order_no="51" segment_no="1" tag_type="code">25:</text>
<text top="417" left="155" width="112" height="10" font="font17" id="p23_t53" reading_order_no="52" segment_no="1" tag_type="code">z j = random_vector ( r k j )</text>
<text top="432" left="108" width="11" height="8" font="font9" id="p23_t54" reading_order_no="53" segment_no="1" tag_type="code">26:</text>
<text top="428" left="155" width="71" height="13" font="font3" id="p23_t55" reading_order_no="54" segment_no="1" tag_type="code">Broadcast h z j , ∆ j</text>
<text top="428" left="223" width="29" height="14" font="font19" id="p23_t56" reading_order_no="55" segment_no="1" tag_type="code">i i as s j</text>
<text top="436" left="249" width="3" height="6" font="font28" id="p23_t57" reading_order_no="56" segment_no="1" tag_type="code">i</text>
<text top="443" left="108" width="11" height="8" font="font9" id="p23_t58" reading_order_no="57" segment_no="1" tag_type="code">27:</text>
<text top="441" left="155" width="147" height="11" font="font3" id="p23_t59" reading_order_no="58" segment_no="1" tag_type="code">Broadcast k g i ( j ) − b g ( j ) k 2 as norm ij</text>
<text top="454" left="108" width="11" height="8" font="font9" id="p23_t60" reading_order_no="59" segment_no="1" tag_type="code">28:</text>
<text top="453" left="155" width="78" height="9" font="font1" id="p23_t61" reading_order_no="60" segment_no="1" tag_type="code">for l = 1 , . . . , n do</text>
<text top="468" left="108" width="11" height="8" font="font9" id="p23_t62" reading_order_no="61" segment_no="1" tag_type="code">29:</text>
<text top="463" left="170" width="99" height="14" font="font3" id="p23_t63" reading_order_no="62" segment_no="1" tag_type="code">Compute w lj = min n 1 ,</text>
<text top="465" left="280" width="4" height="6" font="font28" id="p23_t64" reading_order_no="63" segment_no="1" tag_type="code">τ</text>
<text top="473" left="271" width="20" height="6" font="font55" id="p23_t65" reading_order_no="64" segment_no="1" tag_type="code">norm lj</text>
<text top="463" left="294" width="7" height="4" font="font29" id="p23_t66" reading_order_no="65" segment_no="1" tag_type="code">o</text>
<text top="485" left="108" width="11" height="8" font="font9" id="p23_t67" reading_order_no="66" segment_no="1" tag_type="code">30:</text>
<text top="496" left="108" width="11" height="8" font="font9" id="p23_t68" reading_order_no="67" segment_no="1" tag_type="code">31:</text>
<text top="495" left="140" width="79" height="10" font="font1" id="p23_t69" reading_order_no="68" segment_no="1" tag_type="code">for j = 1 , . . . , n do</text>
<text top="507" left="108" width="11" height="8" font="font9" id="p23_t70" reading_order_no="69" segment_no="1" tag_type="code">32:</text>
<text top="506" left="155" width="60" height="9" font="font1" id="p23_t71" reading_order_no="70" segment_no="1" tag_type="code">Verification 1:</text>
<text top="518" left="108" width="11" height="8" font="font9" id="p23_t72" reading_order_no="71" segment_no="1" tag_type="code">33:</text>
<text top="517" left="155" width="134" height="11" font="font1" id="p23_t73" reading_order_no="72" segment_no="1" tag_type="code">if norm ji 6 = k g j ( i ) − b g ( i ) k 2 then</text>
<text top="529" left="108" width="11" height="8" font="font9" id="p23_t74" reading_order_no="73" segment_no="1" tag_type="code">34:</text>
<text top="528" left="170" width="167" height="10" font="font3" id="p23_t75" reading_order_no="74" segment_no="1" tag_type="code">A CCUSE (i, j, norm ji does not mach c j ( i ) )</text>
<text top="543" left="108" width="11" height="8" font="font9" id="p23_t76" reading_order_no="75" segment_no="1" tag_type="code">35:</text>
<text top="542" left="155" width="60" height="9" font="font1" id="p23_t77" reading_order_no="76" segment_no="1" tag_type="code">Verification 2:</text>
<text top="554" left="108" width="11" height="8" font="font9" id="p23_t78" reading_order_no="77" segment_no="1" tag_type="code">36:</text>
<text top="551" left="155" width="73" height="11" font="font3" id="p23_t79" reading_order_no="78" segment_no="1" tag_type="code">// peer i knows ∆ i</text>
<text top="553" left="225" width="82" height="11" font="font3" id="p23_t80" reading_order_no="79" segment_no="1" tag_type="code">j from CenteredClip</text>
<text top="567" left="108" width="11" height="8" font="font9" id="p23_t81" reading_order_no="80" segment_no="1" tag_type="code">37:</text>
<text top="565" left="155" width="97" height="12" font="font1" id="p23_t82" reading_order_no="81" segment_no="1" tag_type="code">if s i j 6 = h z k [ j ] , ∆ i j i then</text>
<text top="581" left="108" width="11" height="8" font="font9" id="p23_t83" reading_order_no="82" segment_no="1" tag_type="code">38:</text>
<text top="578" left="170" width="62" height="12" font="font3" id="p23_t84" reading_order_no="83" segment_no="1" tag_type="code">A CCUSE (i, j, s j</text>
<text top="581" left="229" width="92" height="10" font="font3" id="p23_t85" reading_order_no="84" segment_no="1" tag_type="code">i does not match c j ( i ) )</text>
<text top="595" left="108" width="11" height="8" font="font9" id="p23_t86" reading_order_no="85" segment_no="1" tag_type="code">39:</text>
<text top="591" left="155" width="24" height="12" font="font1" id="p23_t87" reading_order_no="86" segment_no="1" tag_type="code">if P n</text>
<text top="592" left="174" width="15" height="13" font="font17" id="p23_t88" reading_order_no="87" segment_no="1" tag_type="code">i s j</text>
<text top="594" left="186" width="44" height="11" font="font19" id="p23_t89" reading_order_no="88" segment_no="1" tag_type="code">i 6 = 0 then</text>
<text top="609" left="108" width="11" height="8" font="font9" id="p23_t90" reading_order_no="89" segment_no="1" tag_type="code">40:</text>
<text top="605" left="170" width="183" height="14" font="font3" id="p23_t91" reading_order_no="90" segment_no="1" tag_type="code">// peer j already verified that all s j · are correct</text>
<text top="621" left="108" width="11" height="8" font="font9" id="p23_t92" reading_order_no="91" segment_no="1" tag_type="code">41:</text>
<text top="620" left="170" width="112" height="11" font="font3" id="p23_t93" reading_order_no="92" segment_no="1" tag_type="code">A CCUSE (i, j, b g ( j ) is wrong)</text>
<text top="635" left="108" width="11" height="8" font="font9" id="p23_t94" reading_order_no="93" segment_no="1" tag_type="code">42:</text>
<text top="634" left="155" width="60" height="9" font="font1" id="p23_t95" reading_order_no="94" segment_no="1" tag_type="code">Verification 3:</text>
<text top="645" left="108" width="11" height="8" font="font9" id="p23_t96" reading_order_no="95" segment_no="1" tag_type="code">43:</text>
<text top="644" left="155" width="226" height="11" font="font3" id="p23_t97" reading_order_no="96" segment_no="1" tag_type="code">Broadcast binary ( k g i ( j ) − b g ( j ) k 2 &gt; ∆ max ) as check ij</text>
<text top="656" left="108" width="11" height="8" font="font9" id="p23_t98" reading_order_no="97" segment_no="1" tag_type="code">44:</text>
<text top="654" left="155" width="79" height="13" font="font1" id="p23_t99" reading_order_no="98" segment_no="1" tag_type="code">if P l check l j &gt; n</text>
<text top="656" left="230" width="27" height="11" font="font1" id="p23_t100" reading_order_no="99" segment_no="1" tag_type="code">2 then</text>
<text top="667" left="108" width="11" height="8" font="font9" id="p23_t101" reading_order_no="100" segment_no="1" tag_type="code">45:</text>
<text top="666" left="170" width="95" height="10" font="font3" id="p23_t102" reading_order_no="101" segment_no="1" tag_type="code">C HECK A VERAGING ( j )</text>
<text top="681" left="108" width="11" height="8" font="font9" id="p23_t103" reading_order_no="102" segment_no="1" tag_type="code">46:</text>
<text top="680" left="140" width="36" height="10" font="font1" id="p23_t104" reading_order_no="103" segment_no="1" tag_type="code">return b g</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p23_t105" reading_order_no="104" segment_no="2" tag_type="text">23</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="792" width="612">
<text top="105" left="108" width="221" height="9" font="font1" id="p24_t1" reading_order_no="0" segment_no="0" tag_type="title">Algorithm 5 A CCUSE (i, j, allegation), detailed version</text>
<text top="120" left="108" width="290" height="9" font="font1" id="p24_t2" reading_order_no="1" segment_no="1" tag_type="code">Input: i accuser, j target, n peers, all values exchanged in Algorithm 4 .</text>
<text top="131" left="113" width="136" height="9" font="font1" id="p24_t3" reading_order_no="2" segment_no="1" tag_type="code">1: if Alleged wrong gradient then</text>
<text top="143" left="113" width="7" height="8" font="font9" id="p24_t4" reading_order_no="3" segment_no="1" tag_type="code">2:</text>
<text top="140" left="140" width="194" height="12" font="font3" id="p24_t5" reading_order_no="4" segment_no="1" tag_type="code">Recalculate g k j = compute_gradients ( x k , ξ k j )</text>
<text top="153" left="113" width="27" height="9" font="font1" id="p24_t6" reading_order_no="5" segment_no="1" tag_type="code">3: else</text>
<text top="164" left="113" width="7" height="8" font="font9" id="p24_t7" reading_order_no="6" segment_no="1" tag_type="code">4:</text>
<text top="162" left="140" width="139" height="12" font="font5" id="p24_t8" reading_order_no="7" segment_no="1" tag_type="code">peer j must broadcast its g k j</text>
<text top="175" left="113" width="7" height="8" font="font9" id="p24_t9" reading_order_no="8" segment_no="1" tag_type="code">5:</text>
<text top="175" left="140" width="317" height="9" font="font3" id="p24_t10" reading_order_no="9" segment_no="1" tag_type="code">/* this branch is a time-saving optimization. If this optimization is not required,</text>
<text top="186" left="113" width="7" height="8" font="font9" id="p24_t11" reading_order_no="10" segment_no="1" tag_type="code">6:</text>
<text top="184" left="140" width="305" height="12" font="font3" id="p24_t12" reading_order_no="11" segment_no="1" tag_type="code">all peers should instead compute g k i from scratch as in the previous branch*/<a href="deeplearning_paper1.html#23">4</a></text>
<text top="197" left="113" width="328" height="12" font="font3" id="p24_t13" reading_order_no="12" segment_no="1" tag_type="code">7: Split g i into n parts: g i = ( g i (1) &gt; , . . . , g i ( n ) &gt; ) &gt; , g i ( j ) ∈ R d j for all i, j ∈ [ n ]<a href="deeplearning_paper1.html#23">.</a></text>
<text top="211" left="113" width="7" height="8" font="font9" id="p24_t14" reading_order_no="13" segment_no="1" tag_type="code">8:</text>
<text top="221" left="113" width="83" height="9" font="font1" id="p24_t15" reading_order_no="14" segment_no="1" tag_type="code">9: for l = 1 . . . n do</text>
<text top="232" left="108" width="11" height="8" font="font9" id="p24_t16" reading_order_no="15" segment_no="1" tag_type="code">10:</text>
<text top="230" left="140" width="163" height="12" font="font1" id="p24_t17" reading_order_no="16" segment_no="1" tag_type="code">if hash ( g k j ) 6 = c k j or hash ( g k j ( l ) 6 = h l j then</text>
<text top="243" left="108" width="11" height="8" font="font9" id="p24_t18" reading_order_no="17" segment_no="1" tag_type="code">11:</text>
<text top="243" left="155" width="65" height="10" font="font1" id="p24_t19" reading_order_no="18" segment_no="1" tag_type="code">vote ban peer j</text>
<text top="243" left="233" width="94" height="9" font="font3" id="p24_t20" reading_order_no="19" segment_no="1" tag_type="code">/* for gradient attack */</text>
<text top="258" left="108" width="11" height="8" font="font9" id="p24_t21" reading_order_no="20" segment_no="1" tag_type="code">12:</text>
<text top="271" left="108" width="11" height="8" font="font9" id="p24_t22" reading_order_no="21" segment_no="1" tag_type="code">13:</text>
<text top="267" left="140" width="50" height="12" font="font3" id="p24_t23" reading_order_no="22" segment_no="1" tag_type="code">Compute ∆ j</text>
<text top="266" left="187" width="110" height="15" font="font18" id="p24_t24" reading_order_no="23" segment_no="1" tag_type="code">l =( g l ( j ) − b g ( j )) · min n 1 ,</text>
<text top="268" left="322" width="4" height="6" font="font28" id="p24_t25" reading_order_no="24" segment_no="1" tag_type="code">τ</text>
<text top="275" left="300" width="48" height="8" font="font4" id="p24_t26" reading_order_no="25" segment_no="1" tag_type="code">k g l ( j ) − b g ( j ) k 2</text>
<text top="266" left="350" width="7" height="4" font="font29" id="p24_t27" reading_order_no="26" segment_no="1" tag_type="code">o</text>
<text top="288" left="108" width="11" height="8" font="font9" id="p24_t28" reading_order_no="27" segment_no="1" tag_type="code">14:</text>
<text top="284" left="140" width="144" height="13" font="font1" id="p24_t29" reading_order_no="28" segment_no="1" tag_type="code">if k g j ( l ) − b g ( l ) k 2 6 = norm jl or h ∆ j</text>
<text top="284" left="281" width="37" height="14" font="font17" id="p24_t30" reading_order_no="29" segment_no="1" tag_type="code">l , z j i6 = s j</text>
<text top="284" left="315" width="35" height="14" font="font1" id="p24_t31" reading_order_no="30" segment_no="1" tag_type="code">l or P n</text>
<text top="284" left="345" width="23" height="14" font="font17" id="p24_t32" reading_order_no="31" segment_no="1" tag_type="code">l =1 s j</text>
<text top="286" left="365" width="38" height="12" font="font19" id="p24_t33" reading_order_no="32" segment_no="1" tag_type="code">l 6 =0 then</text>
<text top="299" left="108" width="11" height="8" font="font9" id="p24_t34" reading_order_no="33" segment_no="1" tag_type="code">15:</text>
<text top="298" left="155" width="65" height="11" font="font1" id="p24_t35" reading_order_no="34" segment_no="1" tag_type="code">vote ban peer j</text>
<text top="298" left="233" width="108" height="9" font="font3" id="p24_t36" reading_order_no="35" segment_no="1" tag_type="code">/* for aggregation attack */</text>
<text top="311" left="108" width="11" height="8" font="font9" id="p24_t37" reading_order_no="36" segment_no="1" tag_type="code">16:</text>
<text top="310" left="155" width="79" height="9" font="font1" id="p24_t38" reading_order_no="37" segment_no="1" tag_type="code">for o = 1 , . . . , n do</text>
<text top="322" left="108" width="11" height="8" font="font9" id="p24_t39" reading_order_no="38" segment_no="1" tag_type="code">17:</text>
<text top="319" left="170" width="148" height="12" font="font1" id="p24_t40" reading_order_no="39" segment_no="1" tag_type="code">if peer o approved norm jo or s o j then</text>
<text top="332" left="108" width="11" height="8" font="font9" id="p24_t41" reading_order_no="40" segment_no="1" tag_type="code">18:</text>
<text top="332" left="185" width="66" height="10" font="font1" id="p24_t42" reading_order_no="41" segment_no="1" tag_type="code">vote ban peer o</text>
<text top="332" left="264" width="190" height="10" font="font3" id="p24_t43" reading_order_no="42" segment_no="1" tag_type="code">/* for covering up peer j ’s aggregation attack */</text>
<text top="347" left="108" width="11" height="8" font="font9" id="p24_t44" reading_order_no="43" segment_no="1" tag_type="code">19:</text>
<text top="358" left="108" width="153" height="10" font="font1" id="p24_t45" reading_order_no="44" segment_no="1" tag_type="code">20: if did not vote against peer j then</text>
<text top="369" left="108" width="11" height="8" font="font9" id="p24_t46" reading_order_no="45" segment_no="1" tag_type="code">21:</text>
<text top="369" left="140" width="154" height="10" font="font3" id="p24_t47" reading_order_no="46" segment_no="1" tag_type="code">/* caught reputation abuse by peer i */</text>
<text top="380" left="108" width="11" height="8" font="font9" id="p24_t48" reading_order_no="47" segment_no="1" tag_type="code">22:</text>
<text top="380" left="140" width="65" height="10" font="font1" id="p24_t49" reading_order_no="48" segment_no="1" tag_type="code">vote ban peer i</text>
<text top="380" left="218" width="95" height="9" font="font3" id="p24_t50" reading_order_no="49" segment_no="1" tag_type="code">/* for false allegation */</text>
<text top="393" left="108" width="88" height="9" font="font1" id="p24_t51" reading_order_no="50" segment_no="1" tag_type="code">23: for l = 1 . . . n do</text>
<text top="405" left="108" width="11" height="8" font="font9" id="p24_t52" reading_order_no="51" segment_no="1" tag_type="code">24:</text>
<text top="403" left="140" width="117" height="12" font="font1" id="p24_t53" reading_order_no="52" segment_no="1" tag_type="code">if votes ( peer l ) ≥ n/ 2 then</text>
<text top="416" left="108" width="11" height="8" font="font9" id="p24_t54" reading_order_no="53" segment_no="1" tag_type="code">25:</text>
<text top="416" left="155" width="46" height="10" font="font5" id="p24_t55" reading_order_no="54" segment_no="1" tag_type="code">BAN peer ˆ l</text>
<text top="500" left="108" width="114" height="9" font="font1" id="p24_t56" reading_order_no="55" segment_no="2" tag_type="title">Algorithm 6 BTARD-SGD</text>
<text top="515" left="108" width="316" height="12" font="font1" id="p24_t57" reading_order_no="56" segment_no="3" tag_type="code">Input: x 0 – starting point, γ – stepsize, K – number of iterations, { s i,k } n,K − 1</text>
<text top="518" left="400" width="104" height="11" font="font3" id="p24_t58" reading_order_no="57" segment_no="3" tag_type="code">i,k =0 , 0 – seeds for batches</text>
<text top="530" left="125" width="54" height="9" font="font3" id="p24_t59" reading_order_no="58" segment_no="3" tag_type="code">computations</text>
<text top="541" left="113" width="99" height="10" font="font17" id="p24_t60" reading_order_no="59" segment_no="3" tag_type="code">1: C 0 = Banned − 1 = ∅</text>
<text top="551" left="113" width="122" height="10" font="font1" id="p24_t61" reading_order_no="60" segment_no="3" tag_type="code">2: for k = 0 , 1 , . . . , K − 1 do</text>
<text top="571" left="113" width="7" height="8" font="font9" id="p24_t62" reading_order_no="61" segment_no="3" tag_type="code">3:</text>
<text top="569" left="140" width="99" height="12" font="font3" id="p24_t63" reading_order_no="62" segment_no="3" tag_type="code">Worker i computes g k i =</text>
<text top="562" left="249" width="55" height="11" font="font19" id="p24_t64" reading_order_no="63" segment_no="3" tag_type="code">∇ f ( x k , ξ i,k ) ,</text>
<text top="563" left="313" width="58" height="10" font="font3" id="p24_t65" reading_order_no="64" segment_no="3" tag_type="code">if i ∈ G k \ C k ,</text>
<text top="576" left="249" width="8" height="10" font="font19" id="p24_t66" reading_order_no="65" segment_no="3" tag_type="code">∗ ,</text>
<text top="570" left="313" width="191" height="17" font="font3" id="p24_t67" reading_order_no="66" segment_no="3" tag_type="code">if i ∈ B k \ C k , , where ξ i,k is generated via seed</text>
<text top="589" left="125" width="117" height="9" font="font17" id="p24_t68" reading_order_no="67" segment_no="3" tag_type="code">s i,k available to every worker</text>
<text top="602" left="113" width="7" height="8" font="font9" id="p24_t69" reading_order_no="68" segment_no="3" tag_type="code">4:</text>
<text top="599" left="140" width="127" height="13" font="font29" id="p24_t70" reading_order_no="69" segment_no="3" tag_type="code">b g k , public_info k = BTARD ( g k</text>
<text top="606" left="262" width="7" height="8" font="font28" id="p24_t71" reading_order_no="70" segment_no="3" tag_type="code">i k 1</text>
<text top="599" left="270" width="14" height="11" font="font17" id="p24_t72" reading_order_no="71" segment_no="3" tag_type="code">, g k</text>
<text top="606" left="279" width="7" height="8" font="font28" id="p24_t73" reading_order_no="72" segment_no="3" tag_type="code">i k 1</text>
<text top="599" left="287" width="31" height="11" font="font17" id="p24_t74" reading_order_no="73" segment_no="3" tag_type="code">, . . . , g k</text>
<text top="606" left="314" width="11" height="10" font="font28" id="p24_t75" reading_order_no="74" segment_no="3" tag_type="code">i k ak</text>
<text top="599" left="326" width="83" height="13" font="font18" id="p24_t76" reading_order_no="75" segment_no="3" tag_type="code">) , where { i k 1 , . . . , i k a k</text>
<text top="600" left="410" width="78" height="11" font="font19" id="p24_t77" reading_order_no="76" segment_no="3" tag_type="code">} = ( G k ∪ B k ) \ C k</text>
<text top="617" left="113" width="7" height="8" font="font9" id="p24_t78" reading_order_no="77" segment_no="3" tag_type="code">5:</text>
<text top="616" left="140" width="240" height="9" font="font3" id="p24_t79" reading_order_no="78" segment_no="3" tag_type="code">/* The above step is described in more detail in Algorithm 4</text>
<text top="629" left="113" width="7" height="8" font="font9" id="p24_t80" reading_order_no="79" segment_no="3" tag_type="code">6:</text>
<text top="626" left="140" width="102" height="11" font="font3" id="p24_t81" reading_order_no="80" segment_no="3" tag_type="code">Choose 2 m workers c k +1</text>
<text top="633" left="228" width="4" height="6" font="font30" id="p24_t82" reading_order_no="81" segment_no="3" tag_type="code">1</text>
<text top="627" left="243" width="41" height="12" font="font17" id="p24_t83" reading_order_no="82" segment_no="3" tag_type="code">, . . . , c k +1 m</text>
<text top="626" left="284" width="25" height="11" font="font17" id="p24_t84" reading_order_no="83" segment_no="3" tag_type="code">, u k +1</text>
<text top="633" left="294" width="4" height="6" font="font30" id="p24_t85" reading_order_no="84" segment_no="3" tag_type="code">1</text>
<text top="627" left="309" width="42" height="12" font="font17" id="p24_t86" reading_order_no="85" segment_no="3" tag_type="code">, . . . , u k +1 m</text>
<text top="628" left="355" width="151" height="9" font="font3" id="p24_t87" reading_order_no="86" segment_no="3" tag_type="code">uniformly at random without replace-</text>
<text top="639" left="125" width="82" height="11" font="font3" id="p24_t88" reading_order_no="87" segment_no="3" tag_type="code">ment, C k +1 = { c k +1</text>
<text top="646" left="193" width="4" height="6" font="font30" id="p24_t89" reading_order_no="88" segment_no="3" tag_type="code">1</text>
<text top="639" left="208" width="40" height="12" font="font17" id="p24_t90" reading_order_no="89" segment_no="3" tag_type="code">, . . . , c k +1 m</text>
<text top="639" left="249" width="70" height="11" font="font19" id="p24_t91" reading_order_no="90" segment_no="3" tag_type="code">} , U k +1 = { u k +1</text>
<text top="646" left="304" width="4" height="6" font="font30" id="p24_t92" reading_order_no="91" segment_no="3" tag_type="code">1</text>
<text top="639" left="319" width="42" height="12" font="font17" id="p24_t93" reading_order_no="92" segment_no="3" tag_type="code">, . . . , u k +1 m</text>
<text top="640" left="362" width="5" height="9" font="font19" id="p24_t94" reading_order_no="93" segment_no="3" tag_type="code">}</text>
<text top="653" left="113" width="7" height="8" font="font9" id="p24_t95" reading_order_no="94" segment_no="3" tag_type="code">7:</text>
<text top="651" left="140" width="256" height="12" font="font3" id="p24_t96" reading_order_no="95" segment_no="3" tag_type="code">Banned k = C HECK C OMPUTATIONS ( C k +1 , U k +1 , public_info k )</text>
<text top="665" left="113" width="7" height="8" font="font9" id="p24_t97" reading_order_no="96" segment_no="3" tag_type="code">8:</text>
<text top="662" left="140" width="242" height="13" font="font17" id="p24_t98" reading_order_no="97" segment_no="3" tag_type="code">x k +1 = proj Q ( x k − γ b g k ) := argmin x ∈ Q k x − ( x k − γ b g k ) k</text>
<text top="677" left="113" width="7" height="8" font="font9" id="p24_t99" reading_order_no="98" segment_no="3" tag_type="code">9:</text>
<text top="676" left="140" width="206" height="11" font="font19" id="p24_t100" reading_order_no="99" segment_no="3" tag_type="code">G k +1 = G k \ Banned k − 1 , B k +1 = B k \ Banned k − 1</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p24_t101" reading_order_no="100" segment_no="4" tag_type="text">24</text>
</page>
<page number="25" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="7" height="11" font="font6" id="p25_t1" reading_order_no="0" segment_no="0" tag_type="title">F</text>
<text top="74" left="127" width="279" height="11" font="font6" id="p25_t2" reading_order_no="1" segment_no="0" tag_type="title">Convergence analysis: missing proofs and extra details</text>
<text top="97" left="108" width="12" height="9" font="font1" id="p25_t3" reading_order_no="2" segment_no="1" tag_type="title">F.1</text>
<text top="97" left="130" width="57" height="9" font="font1" id="p25_t4" reading_order_no="3" segment_no="1" tag_type="title">Preliminaries</text>
<text top="118" left="108" width="396" height="9" font="font3" id="p25_t5" reading_order_no="4" segment_no="2" tag_type="text">For convenience, we provide the classical definitions and facts on smooth and strongly convex</text>
<text top="128" left="108" width="66" height="9" font="font3" id="p25_t6" reading_order_no="5" segment_no="2" tag_type="text">functions below.</text>
<text top="140" left="108" width="396" height="12" font="font1" id="p25_t7" reading_order_no="6" segment_no="3" tag_type="text">Definition F.1 ( L -smoothness) . We say that function f : Q → R , Q ⊆ R d is L -smooth if it is</text>
<text top="153" left="108" width="71" height="9" font="font13" id="p25_t8" reading_order_no="7" segment_no="3" tag_type="text">differentiable and</text>
<text top="163" left="214" width="41" height="9" font="font19" id="p25_t9" reading_order_no="8" segment_no="4" tag_type="formula">∀ x, y ∈ Q</text>
<text top="163" left="265" width="133" height="9" font="font19" id="p25_t10" reading_order_no="9" segment_no="4" tag_type="formula">k∇ f ( x ) − ∇ f ( y ) k ≤ L k x − y k .</text>
<text top="164" left="492" width="12" height="9" font="font3" id="p25_t11" reading_order_no="10" segment_no="4" tag_type="text">(9)</text>
<text top="181" left="108" width="184" height="10" font="font3" id="p25_t12" reading_order_no="11" segment_no="5" tag_type="text">One can show [ 99 ] that L -smoothness implies</text>
<text top="201" left="186" width="41" height="9" font="font19" id="p25_t13" reading_order_no="12" segment_no="6" tag_type="formula">∀ x, y ∈ Q</text>
<text top="194" left="237" width="147" height="16" font="font17" id="p25_t14" reading_order_no="13" segment_no="6" tag_type="formula">f ( y ) ≤ f ( x ) + h∇ f ( x ) , y − x i + L</text>
<text top="199" left="378" width="48" height="18" font="font18" id="p25_t15" reading_order_no="14" segment_no="6" tag_type="formula">2 k y − x k 2 ,</text>
<text top="201" left="487" width="17" height="9" font="font3" id="p25_t16" reading_order_no="15" segment_no="6" tag_type="text">(10)</text>
<text top="225" left="224" width="32" height="10" font="font19" id="p25_t17" reading_order_no="16" segment_no="7" tag_type="formula">∀ x ∈ Q</text>
<text top="224" left="266" width="122" height="12" font="font19" id="p25_t18" reading_order_no="17" segment_no="7" tag_type="formula">k∇ f ( x ) k 2 ≤ 2 L ( f ( x ) − f ∗ ) ,</text>
<text top="226" left="487" width="17" height="9" font="font3" id="p25_t19" reading_order_no="18" segment_no="7" tag_type="text">(11)</text>
<text top="238" left="108" width="163" height="11" font="font3" id="p25_t20" reading_order_no="19" segment_no="8" tag_type="text">where f ∗ is a uniform lower bound for f .</text>
<text top="250" left="108" width="396" height="12" font="font1" id="p25_t21" reading_order_no="20" segment_no="9" tag_type="text">Definition F.2 ( µ -strong convexity) . Differentiable function f : Q → R , Q ⊆ R d is called µ -strongly</text>
<text top="263" left="108" width="35" height="9" font="font13" id="p25_t22" reading_order_no="21" segment_no="9" tag_type="text">convex if</text>
<text top="276" left="187" width="41" height="10" font="font19" id="p25_t23" reading_order_no="22" segment_no="10" tag_type="formula">∀ x, y ∈ Q</text>
<text top="270" left="238" width="146" height="16" font="font17" id="p25_t24" reading_order_no="23" segment_no="10" tag_type="formula">f ( y ) ≥ f ( x ) + h∇ f ( x ) , y − x i + µ</text>
<text top="275" left="378" width="48" height="17" font="font18" id="p25_t25" reading_order_no="24" segment_no="10" tag_type="formula">2 k y − x k 2 .</text>
<text top="277" left="487" width="17" height="9" font="font3" id="p25_t26" reading_order_no="25" segment_no="10" tag_type="text">(12)</text>
<text top="304" left="108" width="12" height="9" font="font1" id="p25_t27" reading_order_no="26" segment_no="11" tag_type="title">F.2</text>
<text top="304" left="130" width="179" height="9" font="font1" id="p25_t28" reading_order_no="27" segment_no="11" tag_type="title">Convergence guarantees for BTARD-SGD</text>
<text top="324" left="108" width="20" height="9" font="font1" id="p25_t29" reading_order_no="28" segment_no="12" tag_type="title">F.2.1</text>
<text top="324" left="138" width="81" height="9" font="font1" id="p25_t30" reading_order_no="29" segment_no="12" tag_type="title">On Assumption 3.2</text>
<text top="343" left="108" width="396" height="9" font="font3" id="p25_t31" reading_order_no="30" segment_no="13" tag_type="text">As we show in Lemmas F.2 and F.4 , under As. 3.2 Verification 3 at BTARD leads to extra checking</text>
<text top="353" left="108" width="396" height="10" font="font3" id="p25_t32" reading_order_no="31" segment_no="13" tag_type="text">of computations with probability ∼ 1 / n at each iteration when all workers honestly follow the protocol</text>
<text top="365" left="108" width="396" height="9" font="font3" id="p25_t33" reading_order_no="32" segment_no="13" tag_type="text">and under a proper choice of ∆ max . Therefore, extra computations either appear due to malicious</text>
<text top="376" left="108" width="396" height="9" font="font3" id="p25_t34" reading_order_no="33" segment_no="13" tag_type="text">manipulations of byzantine peers, and lead eventually to the ban for the byzantine peers who deviate</text>
<text top="386" left="108" width="396" height="10" font="font3" id="p25_t35" reading_order_no="34" segment_no="13" tag_type="text">from the protocol, or, when all workers honestly follow the protocol, only once per n iterations</text>
<text top="397" left="108" width="396" height="9" font="font3" id="p25_t36" reading_order_no="35" segment_no="13" tag_type="text">on average. There are a number of important machine learning tasks, e.g., training ResNet-50 on</text>
<text top="408" left="108" width="396" height="9" font="font3" id="p25_t37" reading_order_no="36" segment_no="13" tag_type="text">Imagenet [ 81 ] and many others image classification problems, where the noise in the stochastic</text>
<text top="419" left="108" width="396" height="9" font="font3" id="p25_t38" reading_order_no="37" segment_no="13" tag_type="text">gradient has much “lighter” (sub-Gaussian) tails. That is, As. 3.2 is reasonable for a large class of</text>
<text top="430" left="108" width="125" height="9" font="font3" id="p25_t39" reading_order_no="38" segment_no="13" tag_type="text">practically important problems.</text>
<text top="452" left="108" width="20" height="9" font="font1" id="p25_t40" reading_order_no="39" segment_no="14" tag_type="title">F.2.2</text>
<text top="452" left="138" width="111" height="9" font="font1" id="p25_t41" reading_order_no="40" segment_no="14" tag_type="title">Quality of the aggregation</text>
<text top="471" left="108" width="396" height="9" font="font3" id="p25_t42" reading_order_no="41" segment_no="15" tag_type="text">The quality of the aggregation at each iteration of BTARD-SGD significantly affects the rate of</text>
<text top="480" left="108" width="398" height="12" font="font3" id="p25_t43" reading_order_no="42" segment_no="15" tag_type="text">the method. That is, properties of e g k are highly important for the convergence of BTARD-SGD.</text>
<text top="493" left="108" width="396" height="9" font="font3" id="p25_t44" reading_order_no="43" segment_no="15" tag_type="text">This aggregator is obtained via BTARD that requires to know a tight estimate of the total number</text>
<text top="504" left="108" width="396" height="9" font="font3" id="p25_t45" reading_order_no="44" segment_no="15" tag_type="text">of Byzantine workers violating the protocol at iteration k – clipping parameter τ depends on this</text>
<text top="515" left="108" width="396" height="9" font="font3" id="p25_t46" reading_order_no="45" segment_no="15" tag_type="text">quantity. Therefore, it is natural to start with relatively simple setup when the number of Byzantine</text>
<text top="526" left="108" width="227" height="9" font="font3" id="p25_t47" reading_order_no="46" segment_no="15" tag_type="text">workers violating the protocol is known at each iteration.</text>
<text top="542" left="108" width="396" height="10" font="font3" id="p25_t48" reading_order_no="47" segment_no="16" tag_type="text">Before we formulate the first result we introduce some useful notations. Let n k be the total number</text>
<text top="553" left="108" width="396" height="11" font="font3" id="p25_t49" reading_order_no="48" segment_no="16" tag_type="text">of peers at iteration k , b k be the total number of Byzantine peers at iteration k , b b k be the total number</text>
<text top="566" left="108" width="276" height="14" font="font3" id="p25_t50" reading_order_no="49" segment_no="16" tag_type="text">of Byzantine peers violating the protocol at iteration k , and δ k = b k n k<a href="deeplearning_paper1.html#15">[</a></text>
<text top="568" left="385" width="25" height="10" font="font3" id="p25_t51" reading_order_no="50" segment_no="16" tag_type="text">, b δ k =<a href="deeplearning_paper1.html#15">99</a></text>
<text top="566" left="414" width="90" height="15" font="font3" id="p25_t52" reading_order_no="51" segment_no="16" tag_type="text">b b k n k − m . In view of new<a href="deeplearning_paper1.html#15">] </a>that</text>
<text top="584" left="108" width="396" height="9" font="font3" id="p25_t53" reading_order_no="52" segment_no="16" tag_type="text">notation, we start with the ideal situation when b b k is known for each worker at each iteration k . First</text>
<text top="593" left="108" width="324" height="11" font="font3" id="p25_t54" reading_order_no="53" segment_no="16" tag_type="text">of all, it is needed to to estimate the quality of the aggregation for good workers 7 .</text>
<text top="607" left="108" width="396" height="10" font="font1" id="p25_t55" reading_order_no="54" segment_no="17" tag_type="text">Lemma F.1 (Theorem III from [ 58 ]) . Let ( Option I ) from As. 3.1 hold, δ ≤ 0 . 15( n − m ) , and</text>
<text top="621" left="108" width="396" height="10" font="font17" id="p25_t56" reading_order_no="55" segment_no="17" tag_type="text">i ∈ G k \ C k . Assume that b b k is known for each worker at iteration k and δ = b δ k is used to compute</text>
<text top="632" left="108" width="396" height="10" font="font13" id="p25_t57" reading_order_no="56" segment_no="17" tag_type="text">clipping parameter τ l for CenteredClip . If the total number of iterations T of CenteredClip satisfies</text>
<text top="645" left="108" width="48" height="11" font="font17" id="p25_t58" reading_order_no="57" segment_no="17" tag_type="formula">T ≥ log 0 . 94</text>
<text top="642" left="173" width="15" height="8" font="font30" id="p25_t59" reading_order_no="58" segment_no="17" tag_type="formula">2 δσ 2</text>
<text top="646" left="159" width="67" height="13" font="font13" id="p25_t60" reading_order_no="59" segment_no="17" tag_type="formula">E [ k v 0 − g k k 2 ] , then</text>
<text top="668" left="216" width="100" height="12" font="font34" id="p25_t61" reading_order_no="60" segment_no="18" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="669" left="324" width="34" height="10" font="font19" id="p25_t62" reading_order_no="61" segment_no="18" tag_type="formula">≤ 192 b δ k</text>
<text top="661" left="370" width="10" height="11" font="font17" id="p25_t63" reading_order_no="62" segment_no="18" tag_type="formula">σ 2</text>
<text top="670" left="360" width="36" height="16" font="font17" id="p25_t64" reading_order_no="63" segment_no="18" tag_type="formula">n k − m ,</text>
<text top="670" left="487" width="17" height="9" font="font3" id="p25_t65" reading_order_no="64" segment_no="18" tag_type="text">(13)</text>
<text top="692" left="121" width="383" height="10" font="font9" id="p25_t66" reading_order_no="65" segment_no="19" tag_type="footnote">7 On the moment of writing this paper, the proof of Theorem III from [ 58 ] contained a minor inaccuracy. The</text>
<text top="704" left="108" width="396" height="8" font="font9" id="p25_t67" reading_order_no="66" segment_no="19" tag_type="footnote">simplest way of resolving this inaccuracy is based on the assumption of boundedness of the 4 -th central moment</text>
<text top="714" left="108" width="92" height="8" font="font9" id="p25_t68" reading_order_no="67" segment_no="19" tag_type="footnote">of the stochastic gradient.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p25_t69" reading_order_no="68" segment_no="20" tag_type="text">25</text>
</page>
<page number="26" position="absolute" top="0" left="0" height="792" width="612">
<text top="73" left="108" width="58" height="11" font="font13" id="p26_t1" reading_order_no="0" segment_no="0" tag_type="formula">where g k ( i ) =</text>
<text top="73" left="181" width="4" height="6" font="font30" id="p26_t2" reading_order_no="1" segment_no="0" tag_type="formula">1</text>
<text top="80" left="170" width="26" height="7" font="font4" id="p26_t3" reading_order_no="2" segment_no="0" tag_type="formula">|G k \C k |</text>
<text top="74" left="210" width="11" height="4" font="font29" id="p26_t4" reading_order_no="3" segment_no="0" tag_type="formula">P</text>
<text top="86" left="200" width="30" height="7" font="font28" id="p26_t5" reading_order_no="4" segment_no="0" tag_type="formula">j ∈G k \C k</text>
<text top="74" left="232" width="23" height="12" font="font17" id="p26_t6" reading_order_no="5" segment_no="0" tag_type="formula">g k j ( i ) .</text>
<text top="108" left="108" width="396" height="9" font="font13" id="p26_t7" reading_order_no="6" segment_no="1" tag_type="text">Proof. The proof follows exactly the same steps as the proof of Theorem III from [ 58 ] with few</text>
<text top="119" left="108" width="95" height="9" font="font3" id="p26_t8" reading_order_no="7" segment_no="1" tag_type="text">technical modifications.</text>
<text top="142" left="108" width="396" height="9" font="font3" id="p26_t9" reading_order_no="8" segment_no="2" tag_type="text">Unlike the good peers, Byzantine workers can cooperate and shift the result of C ENTERED C LIP in</text>
<text top="153" left="108" width="396" height="9" font="font3" id="p26_t10" reading_order_no="9" segment_no="2" tag_type="text">the components they aggregate without being revealed at Verification 2 of BTARD. However, they</text>
<text top="164" left="108" width="396" height="9" font="font3" id="p26_t11" reading_order_no="10" segment_no="2" tag_type="text">cannot produce an arbitrary large shifts due to Verification 3 . The next lemma estimates the maximal</text>
<text top="175" left="108" width="396" height="9" font="font3" id="p26_t12" reading_order_no="11" segment_no="2" tag_type="text">possible magnitude of a shift together with probability of triggering C HECK A VERAGING at iteration</text>
<text top="185" left="108" width="99" height="10" font="font17" id="p26_t13" reading_order_no="12" segment_no="2" tag_type="text">k for at least one worker.</text>
<text top="200" left="108" width="396" height="10" font="font1" id="p26_t14" reading_order_no="13" segment_no="3" tag_type="text">Lemma F.2. Let As. 3.2 , ( Option I ) from As. 3.1 hold, b ≤ 0 . 15( n − m ) , and i ∈ B k \ C k . Assume</text>
<text top="206" left="108" width="271" height="20" font="font13" id="p26_t15" reading_order_no="14" segment_no="3" tag_type="text">that b b k is known for each worker at iteration k , ∆ k max = (1+ √ 3) √ 2 σ</text>
<text top="216" left="343" width="29" height="12" font="font4" id="p26_t16" reading_order_no="15" segment_no="3" tag_type="text">√ n k − m</text>
<text top="215" left="383" width="121" height="10" font="font13" id="p26_t17" reading_order_no="16" segment_no="3" tag_type="text">and δ = b δ k is used to compute</text>
<text top="228" left="108" width="396" height="10" font="font13" id="p26_t18" reading_order_no="17" segment_no="3" tag_type="text">clipping parameter τ l for CenteredClip . If the total number of iterations T of CenteredClip satisfies</text>
<text top="241" left="108" width="48" height="11" font="font17" id="p26_t19" reading_order_no="18" segment_no="3" tag_type="formula">T ≥ log 0 . 94</text>
<text top="238" left="173" width="15" height="8" font="font30" id="p26_t20" reading_order_no="19" segment_no="3" tag_type="formula">2 δσ 2</text>
<text top="242" left="159" width="244" height="13" font="font13" id="p26_t21" reading_order_no="20" segment_no="3" tag_type="formula">E [ k v 0 − g k k 2 ] and C HECK A VERAGING ( i ) is not triggered, then</text>
<text top="269" left="201" width="99" height="13" font="font34" id="p26_t22" reading_order_no="21" segment_no="4" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="264" left="308" width="42" height="16" font="font19" id="p26_t23" reading_order_no="22" segment_no="4" tag_type="formula">≤ 4 (1 +</text>
<text top="255" left="352" width="8" height="9" font="font19" id="p26_t24" reading_order_no="23" segment_no="4" tag_type="formula">√</text>
<text top="263" left="360" width="47" height="10" font="font18" id="p26_t25" reading_order_no="24" segment_no="4" tag_type="formula">3) 2 + 4 σ 2</text>
<text top="278" left="348" width="32" height="10" font="font17" id="p26_t26" reading_order_no="25" segment_no="4" tag_type="formula">n k − m</text>
<text top="272" left="409" width="3" height="9" font="font17" id="p26_t27" reading_order_no="26" segment_no="4" tag_type="formula">,<a href="deeplearning_paper1.html#13">[</a></text>
<text top="272" left="487" width="17" height="9" font="font3" id="p26_t28" reading_order_no="27" segment_no="4" tag_type="text">(14)<a href="deeplearning_paper1.html#13">58</a></text>
<text top="296" left="108" width="59" height="11" font="font13" id="p26_t29" reading_order_no="28" segment_no="4" tag_type="formula">where g k ( i ) =<a href="deeplearning_paper1.html#13">] </a>with few</text>
<text top="296" left="183" width="4" height="6" font="font30" id="p26_t30" reading_order_no="29" segment_no="4" tag_type="formula">1</text>
<text top="303" left="172" width="26" height="7" font="font4" id="p26_t31" reading_order_no="30" segment_no="4" tag_type="formula">|G k \C k |</text>
<text top="297" left="211" width="11" height="4" font="font29" id="p26_t32" reading_order_no="31" segment_no="4" tag_type="formula">P</text>
<text top="309" left="201" width="31" height="7" font="font28" id="p26_t33" reading_order_no="32" segment_no="4" tag_type="formula">j ∈G k \C k</text>
<text top="296" left="234" width="271" height="12" font="font17" id="p26_t34" reading_order_no="33" segment_no="4" tag_type="formula">g k j ( i ) . Moreover, if b b k = 0 and n k − m ≥ 170 , then b g k ( i ) = g k ( i )</text>
<text top="318" left="108" width="15" height="9" font="font13" id="p26_t35" reading_order_no="34" segment_no="5" tag_type="text">and</text>
<text top="334" left="160" width="6" height="8" font="font34" id="p26_t36" reading_order_no="35" segment_no="6" tag_type="formula">P</text>
<text top="330" left="174" width="203" height="11" font="font3" id="p26_t37" reading_order_no="36" segment_no="6" tag_type="formula">C HECK A VERAGING is triggered for ≥ 1 peer | x k</text>
<text top="331" left="387" width="8" height="9" font="font19" id="p26_t38" reading_order_no="37" segment_no="6" tag_type="formula">≤</text>
<text top="325" left="416" width="15" height="9" font="font18" id="p26_t39" reading_order_no="38" segment_no="6" tag_type="formula">149</text>
<text top="332" left="398" width="54" height="16" font="font18" id="p26_t40" reading_order_no="39" segment_no="6" tag_type="formula">49( n k − m ) .</text>
<text top="332" left="487" width="17" height="9" font="font3" id="p26_t41" reading_order_no="40" segment_no="6" tag_type="text">(15)</text>
<text top="361" left="108" width="337" height="12" font="font13" id="p26_t42" reading_order_no="41" segment_no="7" tag_type="text">Proof. If C HECK A VERAGING ( i ) is not triggered at iteration k , then for r k ≥ n k − m</text>
<text top="369" left="432" width="4" height="6" font="font30" id="p26_t43" reading_order_no="42" segment_no="7" tag_type="text">2</text>
<text top="363" left="449" width="55" height="9" font="font3" id="p26_t44" reading_order_no="43" segment_no="7" tag_type="text">good workers</text>
<text top="375" left="108" width="150" height="12" font="font17" id="p26_t45" reading_order_no="44" segment_no="7" tag_type="text">i 1 , i 2 , . . . , i r k ∈ G k \ C k we have k g k i j</text>
<text top="375" left="259" width="245" height="12" font="font18" id="p26_t46" reading_order_no="45" segment_no="7" tag_type="text">( i ) − b g k ( i ) k ≤ ∆ k max . Therefore, due to the independence of</text>
<text top="389" left="108" width="146" height="12" font="font17" id="p26_t47" reading_order_no="46" segment_no="7" tag_type="text">g k i , i ∈ G k \ C k for fixed x k we have</text>
<text top="420" left="108" width="13" height="14" font="font34" id="p26_t48" reading_order_no="47" segment_no="8" tag_type="formula">E h</text>
<text top="420" left="127" width="88" height="15" font="font29" id="p26_t49" reading_order_no="48" segment_no="8" tag_type="formula">b g k ( i ) − g k ( i ) 2 | x k i</text>
<text top="424" left="225" width="8" height="9" font="font19" id="p26_t50" reading_order_no="49" segment_no="8" tag_type="formula">≤</text>
<text top="424" left="242" width="12" height="10" font="font18" id="p26_t51" reading_order_no="50" segment_no="8" tag_type="formula">2 E<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="408" left="256" width="7" height="4" font="font29" id="p26_t52" reading_order_no="51" segment_no="8" tag_type="formula"><a href="deeplearning_paper1.html#6">,</a></text>
<text top="417" left="256" width="54" height="19" font="font29" id="p26_t53" reading_order_no="52" segment_no="8" tag_type="formula">  b g k ( i ) − 1<a href="deeplearning_paper1.html#6">(</a></text>
<text top="431" left="302" width="9" height="10" font="font17" id="p26_t54" reading_order_no="53" segment_no="8" tag_type="formula">r k<a href="deeplearning_paper1.html#6">Option I</a></text>
<text top="414" left="318" width="8" height="6" font="font28" id="p26_t55" reading_order_no="54" segment_no="8" tag_type="formula">r k<a href="deeplearning_paper1.html#6">)</a></text>
<text top="421" left="315" width="14" height="4" font="font29" id="p26_t56" reading_order_no="55" segment_no="8" tag_type="formula">X</text>
<text top="438" left="315" width="14" height="6" font="font28" id="p26_t57" reading_order_no="56" segment_no="8" tag_type="formula">j =1<a href="deeplearning_paper1.html#6">3.1</a></text>
<text top="422" left="331" width="9" height="11" font="font17" id="p26_t58" reading_order_no="57" segment_no="8" tag_type="formula">g k</text>
<text top="429" left="335" width="6" height="6" font="font28" id="p26_t59" reading_order_no="58" segment_no="8" tag_type="formula">i j</text>
<text top="424" left="343" width="11" height="9" font="font18" id="p26_t60" reading_order_no="59" segment_no="8" tag_type="formula">( i )</text>
<text top="408" left="359" width="4" height="6" font="font30" id="p26_t61" reading_order_no="60" segment_no="8" tag_type="formula">2</text>
<text top="422" left="366" width="16" height="11" font="font19" id="p26_t62" reading_order_no="61" segment_no="8" tag_type="formula">| x k</text>
<text top="408" left="383" width="7" height="4" font="font29" id="p26_t63" reading_order_no="62" segment_no="8" tag_type="formula"></text>
<text top="425" left="383" width="7" height="11" font="font29" id="p26_t64" reading_order_no="63" segment_no="8" tag_type="formula"> </text>
<text top="470" left="252" width="20" height="10" font="font18" id="p26_t65" reading_order_no="64" segment_no="8" tag_type="formula">+2 E</text>
<text top="453" left="273" width="7" height="4" font="font29" id="p26_t66" reading_order_no="65" segment_no="8" tag_type="formula"></text>
<text top="471" left="273" width="7" height="10" font="font29" id="p26_t67" reading_order_no="66" segment_no="8" tag_type="formula"> </text>
<text top="463" left="289" width="5" height="9" font="font18" id="p26_t68" reading_order_no="67" segment_no="8" tag_type="formula">1</text>
<text top="477" left="287" width="8" height="9" font="font17" id="p26_t69" reading_order_no="68" segment_no="8" tag_type="formula">r k</text>
<text top="459" left="302" width="8" height="7" font="font28" id="p26_t70" reading_order_no="69" segment_no="8" tag_type="formula">r k</text>
<text top="467" left="299" width="14" height="4" font="font29" id="p26_t71" reading_order_no="70" segment_no="8" tag_type="formula">X</text>
<text top="484" left="299" width="14" height="6" font="font28" id="p26_t72" reading_order_no="71" segment_no="8" tag_type="formula">j =1</text>
<text top="468" left="315" width="11" height="13" font="font17" id="p26_t73" reading_order_no="72" segment_no="8" tag_type="formula">g k i j</text>
<text top="468" left="327" width="45" height="11" font="font18" id="p26_t74" reading_order_no="73" segment_no="8" tag_type="formula">( i ) − g k ( i )</text>
<text top="454" left="377" width="4" height="6" font="font30" id="p26_t75" reading_order_no="74" segment_no="8" tag_type="formula">2</text>
<text top="468" left="384" width="15" height="11" font="font19" id="p26_t76" reading_order_no="75" segment_no="8" tag_type="formula">| x k</text>
<text top="453" left="400" width="7" height="4" font="font29" id="p26_t77" reading_order_no="76" segment_no="8" tag_type="formula"></text>
<text top="471" left="400" width="7" height="10" font="font29" id="p26_t78" reading_order_no="77" segment_no="8" tag_type="formula"> </text>
<text top="512" left="225" width="8" height="9" font="font19" id="p26_t79" reading_order_no="78" segment_no="8" tag_type="formula">≤</text>
<text top="513" left="242" width="12" height="10" font="font18" id="p26_t80" reading_order_no="79" segment_no="8" tag_type="formula">2 E</text>
<text top="499" left="256" width="7" height="4" font="font29" id="p26_t81" reading_order_no="80" segment_no="8" tag_type="formula"></text>
<text top="517" left="256" width="7" height="4" font="font29" id="p26_t82" reading_order_no="81" segment_no="8" tag_type="formula"></text>
<text top="506" left="266" width="5" height="9" font="font18" id="p26_t83" reading_order_no="82" segment_no="8" tag_type="formula">1</text>
<text top="520" left="264" width="8" height="9" font="font17" id="p26_t84" reading_order_no="83" segment_no="8" tag_type="formula">r k</text>
<text top="502" left="279" width="8" height="7" font="font28" id="p26_t85" reading_order_no="84" segment_no="8" tag_type="formula">r k</text>
<text top="510" left="276" width="14" height="4" font="font29" id="p26_t86" reading_order_no="85" segment_no="8" tag_type="formula">X</text>
<text top="527" left="276" width="14" height="6" font="font28" id="p26_t87" reading_order_no="86" segment_no="8" tag_type="formula">j =1</text>
<text top="511" left="292" width="49" height="13" font="font19" id="p26_t88" reading_order_no="87" segment_no="8" tag_type="formula">k b g k ( i ) − g k i j</text>
<text top="511" left="342" width="20" height="11" font="font18" id="p26_t89" reading_order_no="88" segment_no="8" tag_type="formula">( i ) k 2</text>
<text top="499" left="363" width="7" height="4" font="font29" id="p26_t90" reading_order_no="89" segment_no="8" tag_type="formula"></text>
<text top="511" left="363" width="144" height="12" font="font29" id="p26_t91" reading_order_no="90" segment_no="8" tag_type="formula"> + 4 E k∇ ( i ) f ( x k ) − g k ( i ) k 2 | x k</text>
<text top="556" left="252" width="12" height="10" font="font18" id="p26_t92" reading_order_no="91" segment_no="8" tag_type="formula">4 E</text>
<text top="539" left="266" width="7" height="4" font="font29" id="p26_t93" reading_order_no="92" segment_no="8" tag_type="formula"></text>
<text top="557" left="266" width="7" height="10" font="font29" id="p26_t94" reading_order_no="93" segment_no="8" tag_type="formula"> </text>
<text top="549" left="281" width="5" height="9" font="font18" id="p26_t95" reading_order_no="94" segment_no="8" tag_type="formula">1</text>
<text top="562" left="279" width="8" height="10" font="font17" id="p26_t96" reading_order_no="95" segment_no="8" tag_type="formula">r k</text>
<text top="545" left="294" width="8" height="7" font="font28" id="p26_t97" reading_order_no="96" segment_no="8" tag_type="formula">r k</text>
<text top="553" left="291" width="14" height="4" font="font29" id="p26_t98" reading_order_no="97" segment_no="8" tag_type="formula">X</text>
<text top="569" left="292" width="13" height="6" font="font28" id="p26_t99" reading_order_no="98" segment_no="8" tag_type="formula">j =1</text>
<text top="554" left="307" width="11" height="13" font="font17" id="p26_t100" reading_order_no="99" segment_no="8" tag_type="formula">g k i j</text>
<text top="554" left="319" width="66" height="11" font="font18" id="p26_t101" reading_order_no="100" segment_no="8" tag_type="formula">( i ) − ∇ ( i ) f ( x k )</text>
<text top="540" left="390" width="4" height="6" font="font30" id="p26_t102" reading_order_no="101" segment_no="8" tag_type="formula">2</text>
<text top="554" left="397" width="16" height="11" font="font19" id="p26_t103" reading_order_no="102" segment_no="8" tag_type="formula">| x k</text>
<text top="539" left="413" width="7" height="4" font="font29" id="p26_t104" reading_order_no="103" segment_no="8" tag_type="formula"></text>
<text top="557" left="413" width="7" height="10" font="font29" id="p26_t105" reading_order_no="104" segment_no="8" tag_type="formula"> </text>
<text top="592" left="225" width="8" height="9" font="font19" id="p26_t106" reading_order_no="105" segment_no="8" tag_type="formula">≤</text>
<text top="591" left="242" width="51" height="12" font="font18" id="p26_t107" reading_order_no="106" segment_no="8" tag_type="formula">2(∆ k max ) 2 +</text>
<text top="585" left="307" width="15" height="10" font="font18" id="p26_t108" reading_order_no="107" segment_no="8" tag_type="formula">4 σ 2<a href="deeplearning_paper1.html#20">CenteredClip</a></text>
<text top="593" left="296" width="48" height="16" font="font19" id="p26_t109" reading_order_no="108" segment_no="8" tag_type="formula">|G k \ C k | +<a href="deeplearning_paper1.html#20">. </a>If the total number of iterations</text>
<text top="585" left="355" width="15" height="10" font="font18" id="p26_t110" reading_order_no="109" segment_no="8" tag_type="formula">8 σ 2</text>
<text top="599" left="347" width="32" height="10" font="font17" id="p26_t111" reading_order_no="110" segment_no="8" tag_type="formula">n k − m</text>
<text top="622" left="225" width="8" height="9" font="font19" id="p26_t112" reading_order_no="111" segment_no="8" tag_type="formula">≤<a href="deeplearning_paper1.html#20">CenteredClip</a></text>
<text top="615" left="244" width="30" height="9" font="font18" id="p26_t113" reading_order_no="112" segment_no="8" tag_type="formula">4 (1 +</text>
<text top="606" left="276" width="8" height="9" font="font19" id="p26_t114" reading_order_no="113" segment_no="8" tag_type="formula">√</text>
<text top="614" left="284" width="47" height="10" font="font18" id="p26_t115" reading_order_no="114" segment_no="8" tag_type="formula">3) 2 + 4 σ 2</text>
<text top="629" left="272" width="32" height="10" font="font17" id="p26_t116" reading_order_no="115" segment_no="8" tag_type="formula">n k − m</text>
<text top="623" left="333" width="3" height="9" font="font17" id="p26_t117" reading_order_no="116" segment_no="8" tag_type="formula">,</text>
<text top="645" left="108" width="158" height="12" font="font3" id="p26_t118" reading_order_no="117" segment_no="9" tag_type="text">where we use |G k \ C k | ≥ r k ≥ n k − m</text>
<text top="653" left="253" width="4" height="6" font="font30" id="p26_t119" reading_order_no="118" segment_no="9" tag_type="text">2</text>
<text top="646" left="271" width="93" height="12" font="font3" id="p26_t120" reading_order_no="119" segment_no="9" tag_type="text">and ∇ f ( i ) ( x k ) = E [ g k i j</text>
<text top="646" left="369" width="135" height="11" font="font19" id="p26_t121" reading_order_no="120" segment_no="9" tag_type="text">| x k ] . Finally, let us estimate the</text>
<text top="660" left="108" width="397" height="9" font="font3" id="p26_t122" reading_order_no="121" segment_no="9" tag_type="text">probability of triggering C HECK A VERAGING when all workers follow the protocol. In this case,</text>
<text top="670" left="108" width="261" height="12" font="font29" id="p26_t123" reading_order_no="122" segment_no="9" tag_type="text">b g ( i ) = g k ( i ) . Next, due to As. 3.2 and b ≤ 0 . 15( n − m ) we have</text>
<text top="705" left="148" width="6" height="8" font="font34" id="p26_t124" reading_order_no="123" segment_no="10" tag_type="formula">P</text>
<text top="689" left="156" width="9" height="4" font="font29" id="p26_t125" reading_order_no="124" segment_no="10" tag_type="formula"></text>
<text top="698" left="156" width="9" height="4" font="font29" id="p26_t126" reading_order_no="125" segment_no="10" tag_type="formula"></text>
<text top="716" left="156" width="9" height="4" font="font29" id="p26_t127" reading_order_no="126" segment_no="10" tag_type="formula"></text>
<text top="701" left="164" width="100" height="11" font="font19" id="p26_t128" reading_order_no="127" segment_no="10" tag_type="formula">k g k ( i ) − ∇ f ( i ) ( x k ) k 2 &gt;</text>
<text top="691" left="267" width="10" height="4" font="font29" id="p26_t129" reading_order_no="128" segment_no="10" tag_type="formula">s</text>
<text top="695" left="288" width="10" height="10" font="font17" id="p26_t130" reading_order_no="129" segment_no="10" tag_type="formula">σ 2</text>
<text top="701" left="278" width="51" height="18" font="font17" id="p26_t131" reading_order_no="130" segment_no="10" tag_type="formula">n k − m | x k</text>
<text top="689" left="330" width="9" height="4" font="font29" id="p26_t132" reading_order_no="131" segment_no="10" tag_type="formula"></text>
<text top="698" left="330" width="9" height="4" font="font29" id="p26_t133" reading_order_no="132" segment_no="10" tag_type="formula"></text>
<text top="716" left="330" width="9" height="4" font="font29" id="p26_t134" reading_order_no="133" segment_no="10" tag_type="formula"></text>
<text top="702" left="341" width="8" height="9" font="font19" id="p26_t135" reading_order_no="134" segment_no="10" tag_type="formula">≤</text>
<text top="696" left="371" width="5" height="9" font="font18" id="p26_t136" reading_order_no="135" segment_no="10" tag_type="formula">1</text>
<text top="709" left="353" width="40" height="10" font="font19" id="p26_t137" reading_order_no="136" segment_no="10" tag_type="formula">|G k \ C k | 2</text>
<text top="702" left="397" width="8" height="9" font="font19" id="p26_t138" reading_order_no="137" segment_no="10" tag_type="formula">≤</text>
<text top="696" left="429" width="15" height="9" font="font18" id="p26_t139" reading_order_no="138" segment_no="10" tag_type="formula">100</text>
<text top="709" left="409" width="54" height="10" font="font18" id="p26_t140" reading_order_no="139" segment_no="10" tag_type="formula">49( n k − m ) 2</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p26_t141" reading_order_no="140" segment_no="11" tag_type="text">26</text>
</page>
<page number="27" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="90" height="11" font="font3" id="p27_t1" reading_order_no="0" segment_no="0" tag_type="text">and for all j ∈ G k \ C k</text>
<text top="106" left="199" width="6" height="8" font="font34" id="p27_t2" reading_order_no="1" segment_no="1" tag_type="formula">P</text>
<text top="89" left="207" width="9" height="4" font="font29" id="p27_t3" reading_order_no="2" segment_no="1" tag_type="formula"></text>
<text top="98" left="207" width="9" height="4" font="font29" id="p27_t4" reading_order_no="3" segment_no="1" tag_type="formula"></text>
<text top="116" left="207" width="9" height="4" font="font29" id="p27_t5" reading_order_no="4" segment_no="1" tag_type="formula"></text>
<text top="101" left="216" width="14" height="11" font="font19" id="p27_t6" reading_order_no="5" segment_no="1" tag_type="formula">k g k</text>
<text top="101" left="225" width="90" height="13" font="font18" id="p27_t7" reading_order_no="6" segment_no="1" tag_type="formula">j ( i ) − ∇ f ( i ) ( x k ) k 2 &gt;</text>
<text top="91" left="318" width="10" height="4" font="font29" id="p27_t8" reading_order_no="7" segment_no="1" tag_type="formula">s</text>
<text top="96" left="337" width="15" height="10" font="font18" id="p27_t9" reading_order_no="8" segment_no="1" tag_type="formula">3 σ 2</text>
<text top="101" left="329" width="51" height="19" font="font17" id="p27_t10" reading_order_no="9" segment_no="1" tag_type="formula">n k − m | x k</text>
<text top="89" left="381" width="9" height="4" font="font29" id="p27_t11" reading_order_no="10" segment_no="1" tag_type="formula"></text>
<text top="98" left="381" width="9" height="4" font="font29" id="p27_t12" reading_order_no="11" segment_no="1" tag_type="formula"></text>
<text top="116" left="381" width="9" height="4" font="font29" id="p27_t13" reading_order_no="12" segment_no="1" tag_type="formula"></text>
<text top="97" left="392" width="17" height="15" font="font19" id="p27_t14" reading_order_no="13" segment_no="1" tag_type="formula">≤ 1</text>
<text top="103" left="404" width="9" height="16" font="font18" id="p27_t15" reading_order_no="14" segment_no="1" tag_type="formula">9 .</text>
<text top="131" left="108" width="266" height="10" font="font3" id="p27_t16" reading_order_no="15" segment_no="2" tag_type="text">Consider the independent random variables η j , j ∈ G k \ C k , where</text>
<text top="158" left="207" width="20" height="10" font="font17" id="p27_t17" reading_order_no="16" segment_no="3" tag_type="formula">η j =</text>
<text top="148" left="230" width="16" height="13" font="font29" id="p27_t18" reading_order_no="17" segment_no="3" tag_type="formula">( 1 ,</text>
<text top="150" left="255" width="23" height="11" font="font3" id="p27_t19" reading_order_no="18" segment_no="3" tag_type="formula">if k g k</text>
<text top="147" left="274" width="120" height="16" font="font18" id="p27_t20" reading_order_no="19" segment_no="3" tag_type="formula">j ( i ) − ∇ f ( i ) ( x k ) k 2 ≤ q 3 σ 2</text>
<text top="152" left="377" width="27" height="12" font="font17" id="p27_t21" reading_order_no="20" segment_no="3" tag_type="formula">n k − m ,</text>
<text top="167" left="238" width="8" height="9" font="font18" id="p27_t22" reading_order_no="21" segment_no="3" tag_type="formula">0 ,</text>
<text top="168" left="255" width="41" height="9" font="font3" id="p27_t23" reading_order_no="22" segment_no="3" tag_type="formula">otherwise,</text>
<text top="184" left="108" width="398" height="11" font="font3" id="p27_t24" reading_order_no="23" segment_no="4" tag_type="text">where x k is fixed. Then, η j is a Bernoulli random variable with parameter of “success” q ≥ 8 / 9 .</text>
<text top="196" left="108" width="176" height="9" font="font3" id="p27_t25" reading_order_no="24" segment_no="4" tag_type="text">Applying Hoeffding’s inequality we get that</text>
<text top="226" left="137" width="6" height="8" font="font34" id="p27_t26" reading_order_no="25" segment_no="5" tag_type="formula">P</text>
<text top="210" left="145" width="9" height="4" font="font29" id="p27_t27" reading_order_no="26" segment_no="5" tag_type="formula"></text>
<text top="219" left="145" width="9" height="4" font="font29" id="p27_t28" reading_order_no="27" segment_no="5" tag_type="formula"></text>
<text top="237" left="145" width="9" height="4" font="font29" id="p27_t29" reading_order_no="28" segment_no="5" tag_type="formula"></text>
<text top="221" left="162" width="14" height="4" font="font29" id="p27_t30" reading_order_no="29" segment_no="5" tag_type="formula">X</text>
<text top="238" left="154" width="30" height="7" font="font28" id="p27_t31" reading_order_no="30" segment_no="5" tag_type="formula">j ∈G k \C k</text>
<text top="217" left="186" width="56" height="17" font="font17" id="p27_t32" reading_order_no="31" segment_no="5" tag_type="formula">η j ≤ n k − m</text>
<text top="231" left="223" width="5" height="9" font="font18" id="p27_t33" reading_order_no="32" segment_no="5" tag_type="formula">2</text>
<text top="222" left="246" width="15" height="11" font="font19" id="p27_t34" reading_order_no="33" segment_no="5" tag_type="formula">| x k</text>
<text top="210" left="262" width="9" height="4" font="font29" id="p27_t35" reading_order_no="34" segment_no="5" tag_type="formula"></text>
<text top="219" left="262" width="9" height="4" font="font29" id="p27_t36" reading_order_no="35" segment_no="5" tag_type="formula"></text>
<text top="237" left="262" width="9" height="4" font="font29" id="p27_t37" reading_order_no="36" segment_no="5" tag_type="formula"></text>
<text top="223" left="281" width="8" height="9" font="font19" id="p27_t38" reading_order_no="37" segment_no="5" tag_type="formula">≤</text>
<text top="224" left="298" width="15" height="9" font="font18" id="p27_t39" reading_order_no="38" segment_no="5" tag_type="formula">exp</text>
<text top="223" left="323" width="52" height="11" font="font19" id="p27_t40" reading_order_no="39" segment_no="5" tag_type="formula">− 2( n k − m )</text>
<text top="223" left="384" width="15" height="10" font="font17" id="p27_t41" reading_order_no="40" segment_no="5" tag_type="formula">q −</text>
<text top="217" left="407" width="32" height="10" font="font17" id="p27_t42" reading_order_no="41" segment_no="5" tag_type="formula">n k − m</text>
<text top="230" left="403" width="41" height="10" font="font18" id="p27_t43" reading_order_no="42" segment_no="5" tag_type="formula">2 |G k \ C k |</text>
<text top="213" left="452" width="12" height="7" font="font29" id="p27_t44" reading_order_no="43" segment_no="5" tag_type="formula">2 !</text>
<text top="260" left="281" width="8" height="9" font="font19" id="p27_t45" reading_order_no="44" segment_no="5" tag_type="formula">≤</text>
<text top="261" left="298" width="15" height="9" font="font18" id="p27_t46" reading_order_no="45" segment_no="5" tag_type="formula">exp</text>
<text top="260" left="323" width="52" height="10" font="font19" id="p27_t47" reading_order_no="46" segment_no="5" tag_type="formula">− 2( n k − m )</text>
<text top="254" left="386" width="5" height="9" font="font18" id="p27_t48" reading_order_no="47" segment_no="5" tag_type="formula">8</text>
<text top="268" left="386" width="5" height="9" font="font18" id="p27_t49" reading_order_no="48" segment_no="5" tag_type="formula">9</text>
<text top="260" left="394" width="8" height="9" font="font19" id="p27_t50" reading_order_no="49" segment_no="5" tag_type="formula">−</text>
<text top="254" left="415" width="27" height="9" font="font17" id="p27_t51" reading_order_no="50" segment_no="5" tag_type="formula">n − m</text>
<text top="267" left="405" width="48" height="10" font="font18" id="p27_t52" reading_order_no="51" segment_no="5" tag_type="formula">1 . 4( n − m )</text>
<text top="250" left="461" width="12" height="7" font="font29" id="p27_t53" reading_order_no="52" segment_no="5" tag_type="formula">2 !</text>
<text top="292" left="281" width="8" height="9" font="font18" id="p27_t54" reading_order_no="53" segment_no="5" tag_type="formula">=</text>
<text top="292" left="298" width="15" height="9" font="font18" id="p27_t55" reading_order_no="54" segment_no="5" tag_type="formula">exp</text>
<text top="284" left="323" width="63" height="16" font="font19" id="p27_t56" reading_order_no="55" segment_no="5" tag_type="formula">− 242( n k − m )</text>
<text top="299" left="349" width="20" height="9" font="font18" id="p27_t57" reading_order_no="56" segment_no="5" tag_type="formula">3969</text>
<text top="292" left="396" width="3" height="9" font="font17" id="p27_t58" reading_order_no="57" segment_no="5" tag_type="formula">.</text>
<text top="314" left="108" width="396" height="12" font="font3" id="p27_t59" reading_order_no="58" segment_no="6" tag_type="text">Since for all j ∈ G k \ C k we have k g k ( i ) − g k j ( i ) k 2 ≤ k g k ( i ) − ∇ ( i ) f ( x k ) k 2 + k∇ ( i ) f ( x k ) − g k j ( i ) k 2</text>
<text top="326" left="108" width="396" height="9" font="font3" id="p27_t60" reading_order_no="59" segment_no="6" tag_type="text">the obtained bounds imply that C HECK A VERAGING is triggered for at least one worker at iteration k</text>
<text top="337" left="108" width="129" height="9" font="font3" id="p27_t61" reading_order_no="60" segment_no="6" tag_type="text">with probability not greater than</text>
<text top="352" left="190" width="15" height="9" font="font18" id="p27_t62" reading_order_no="61" segment_no="7" tag_type="formula">100</text>
<text top="359" left="172" width="120" height="16" font="font18" id="p27_t63" reading_order_no="62" segment_no="7" tag_type="formula">49( n k − m ) + ( n k − m ) exp</text>
<text top="352" left="301" width="63" height="16" font="font19" id="p27_t64" reading_order_no="63" segment_no="7" tag_type="formula">− 242( n k − m )</text>
<text top="366" left="327" width="20" height="9" font="font18" id="p27_t65" reading_order_no="64" segment_no="7" tag_type="formula">3969</text>
<text top="359" left="376" width="8" height="9" font="font19" id="p27_t66" reading_order_no="65" segment_no="7" tag_type="formula">≤</text>
<text top="352" left="405" width="15" height="9" font="font18" id="p27_t67" reading_order_no="66" segment_no="7" tag_type="formula">149</text>
<text top="359" left="387" width="54" height="16" font="font18" id="p27_t68" reading_order_no="67" segment_no="7" tag_type="formula">49( n k − m ) ,</text>
<text top="381" left="108" width="121" height="11" font="font3" id="p27_t69" reading_order_no="68" segment_no="8" tag_type="text">where we use that exp − 242 x</text>
<text top="388" left="212" width="16" height="6" font="font30" id="p27_t70" reading_order_no="69" segment_no="8" tag_type="text">3969</text>
<text top="381" left="237" width="18" height="10" font="font19" id="p27_t71" reading_order_no="70" segment_no="8" tag_type="formula">≤ 1</text>
<text top="382" left="249" width="74" height="12" font="font3" id="p27_t72" reading_order_no="71" segment_no="8" tag_type="formula">x 2 for all x ≥ 170 .</text>
<text top="406" left="108" width="398" height="9" font="font3" id="p27_t73" reading_order_no="72" segment_no="9" tag_type="text">We notice that Byzantine peers can trigger C HECK A VERAGING by violating the protocol. However,</text>
<text top="416" left="108" width="397" height="10" font="font3" id="p27_t74" reading_order_no="73" segment_no="9" tag_type="text">each byzantine is checked at iteration k with probability p ∼ m / n (see Thm. F.1 ). Therefore,</text>
<text top="427" left="108" width="396" height="9" font="font3" id="p27_t75" reading_order_no="74" segment_no="9" tag_type="text">Byzantine workers can trigger only O ( bn / m ) extra rounds of communications and computations on</text>
<text top="438" left="108" width="396" height="9" font="font3" id="p27_t76" reading_order_no="75" segment_no="9" tag_type="text">average via triggering C HECK A VERAGING . In contrast, when there are no Byzantine workers or all</text>
<text top="449" left="108" width="396" height="9" font="font3" id="p27_t77" reading_order_no="76" segment_no="9" tag_type="text">workers follow the protocol C HECK A VERAGING is triggered only once per O ( n − m ) iterations that</text>
<text top="460" left="108" width="289" height="9" font="font3" id="p27_t78" reading_order_no="77" segment_no="9" tag_type="text">is a negligible communication an computation overhead when n is large.</text>
<text top="477" left="108" width="244" height="9" font="font3" id="p27_t79" reading_order_no="78" segment_no="10" tag_type="text">Combining two previous lemmas we get the following result.</text>
<text top="492" left="108" width="396" height="10" font="font1" id="p27_t80" reading_order_no="79" segment_no="11" tag_type="text">Lemma F.3. Let ( Option I ) from As. 3.1 hold and b ≤ 0 . 15( n − m ) . Assume that b b k is known for each</text>
<text top="498" left="108" width="168" height="20" font="font13" id="p27_t81" reading_order_no="80" segment_no="11" tag_type="text">worker at iteration k , ∆ k max = (1+ √ 3) √ 2 σ</text>
<text top="508" left="240" width="30" height="12" font="font4" id="p27_t82" reading_order_no="81" segment_no="11" tag_type="text">√ n k − m</text>
<text top="507" left="280" width="224" height="10" font="font13" id="p27_t83" reading_order_no="82" segment_no="11" tag_type="text">and δ = b δ k is used to compute clipping parameter τ l for</text>
<text top="523" left="108" width="347" height="11" font="font36" id="p27_t84" reading_order_no="83" segment_no="11" tag_type="text">CenteredClip . If the total number of iterations T of CenteredClip satisfies T ≥ log 0 . 94</text>
<text top="520" left="472" width="16" height="8" font="font30" id="p27_t85" reading_order_no="84" segment_no="11" tag_type="formula">2 δσ 2</text>
<text top="529" left="459" width="44" height="8" font="font35" id="p27_t86" reading_order_no="85" segment_no="11" tag_type="formula">E [ k v 0 − g k k 2 ]</text>
<text top="537" left="108" width="246" height="9" font="font13" id="p27_t87" reading_order_no="86" segment_no="11" tag_type="text">and C HECK A VERAGING is not triggered for any worker, then</text>
<text top="552" left="243" width="77" height="13" font="font34" id="p27_t88" reading_order_no="87" segment_no="12" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="552" left="328" width="41" height="12" font="font19" id="p27_t89" reading_order_no="88" segment_no="12" tag_type="formula">≤ C b δ k σ 2 ,</text>
<text top="554" left="487" width="17" height="9" font="font3" id="p27_t90" reading_order_no="89" segment_no="12" tag_type="text">(16)</text>
<text top="583" left="188" width="55" height="13" font="font34" id="p27_t91" reading_order_no="90" segment_no="13" tag_type="formula">E k b g k k 2 | x k</text>
<text top="583" left="251" width="117" height="12" font="font19" id="p27_t92" reading_order_no="91" segment_no="13" tag_type="formula">≤ 2 C b δ k σ 2 + 2 k∇ f ( x k ) k 2 +</text>
<text top="577" left="388" width="15" height="11" font="font18" id="p27_t93" reading_order_no="92" segment_no="13" tag_type="formula">2 σ 2</text>
<text top="585" left="372" width="52" height="16" font="font17" id="p27_t94" reading_order_no="93" segment_no="13" tag_type="formula">n − 2 b − m ,</text>
<text top="586" left="487" width="17" height="9" font="font3" id="p27_t95" reading_order_no="94" segment_no="13" tag_type="text">(17)</text>
<text top="604" left="108" width="47" height="11" font="font13" id="p27_t96" reading_order_no="95" segment_no="14" tag_type="formula">where g k =</text>
<text top="604" left="170" width="4" height="6" font="font30" id="p27_t97" reading_order_no="96" segment_no="14" tag_type="formula">1</text>
<text top="611" left="159" width="26" height="7" font="font4" id="p27_t98" reading_order_no="97" segment_no="14" tag_type="formula">|G k \C k |</text>
<text top="605" left="199" width="11" height="4" font="font29" id="p27_t99" reading_order_no="98" segment_no="14" tag_type="formula">P</text>
<text top="617" left="188" width="31" height="7" font="font28" id="p27_t100" reading_order_no="99" segment_no="14" tag_type="formula">j ∈G k \C k</text>
<text top="604" left="221" width="109" height="12" font="font17" id="p27_t101" reading_order_no="100" segment_no="14" tag_type="formula">g k j and C = 192 + 4 (1 +</text>
<text top="597" left="332" width="8" height="9" font="font19" id="p27_t102" reading_order_no="101" segment_no="14" tag_type="formula">√</text>
<text top="604" left="340" width="37" height="11" font="font18" id="p27_t103" reading_order_no="102" segment_no="14" tag_type="formula">3) 2 + 4 .</text>
<text top="638" left="108" width="64" height="9" font="font13" id="p27_t104" reading_order_no="103" segment_no="15" tag_type="text">Proof. We have</text>
<text top="653" left="108" width="77" height="13" font="font34" id="p27_t105" reading_order_no="104" segment_no="16" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="655" left="209" width="8" height="9" font="font18" id="p27_t106" reading_order_no="105" segment_no="16" tag_type="formula">=</text>
<text top="652" left="244" width="14" height="4" font="font29" id="p27_t107" reading_order_no="106" segment_no="16" tag_type="formula">X</text>
<text top="669" left="236" width="29" height="7" font="font28" id="p27_t108" reading_order_no="107" segment_no="16" tag_type="formula">i ∈G k \C k</text>
<text top="653" left="267" width="100" height="13" font="font34" id="p27_t109" reading_order_no="108" segment_no="16" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="655" left="374" width="8" height="9" font="font18" id="p27_t110" reading_order_no="109" segment_no="16" tag_type="formula">+</text>
<text top="652" left="392" width="14" height="4" font="font29" id="p27_t111" reading_order_no="110" segment_no="16" tag_type="formula">X</text>
<text top="669" left="384" width="30" height="7" font="font28" id="p27_t112" reading_order_no="111" segment_no="16" tag_type="formula">i ∈B k \C k</text>
<text top="653" left="416" width="100" height="13" font="font34" id="p27_t113" reading_order_no="112" segment_no="16" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="684" left="200" width="25" height="15" font="font19" id="p27_t114" reading_order_no="113" segment_no="16" tag_type="formula">( 13 ) , ( 14 ) ≤</text>
<text top="690" left="236" width="104" height="11" font="font18" id="p27_t115" reading_order_no="114" segment_no="16" tag_type="formula">(1 − b δ k )( n k − m ) · 192 b δ k</text>
<text top="683" left="353" width="10" height="10" font="font17" id="p27_t116" reading_order_no="115" segment_no="16" tag_type="formula">σ 2</text>
<text top="684" left="342" width="133" height="23" font="font17" id="p27_t117" reading_order_no="116" segment_no="16" tag_type="formula">n k − m + b δ k ( n k − m ) · 4 (1 +</text>
<text top="675" left="477" width="8" height="9" font="font19" id="p27_t118" reading_order_no="117" segment_no="16" tag_type="formula">√</text>
<text top="682" left="485" width="47" height="11" font="font18" id="p27_t119" reading_order_no="118" segment_no="16" tag_type="formula">3) 2 + 4 σ 2</text>
<text top="697" left="473" width="32" height="10" font="font17" id="p27_t120" reading_order_no="119" segment_no="16" tag_type="formula">n k − m</text>
<text top="713" left="209" width="8" height="9" font="font18" id="p27_t121" reading_order_no="120" segment_no="16" tag_type="formula">=</text>
<text top="711" left="236" width="30" height="12" font="font17" id="p27_t122" reading_order_no="121" segment_no="16" tag_type="formula">C b δ k σ 2 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p27_t123" reading_order_no="122" segment_no="17" tag_type="text">27</text>
</page>
<page number="28" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font56" size="7" family="Times" color="#000000"/>
<text top="74" left="108" width="299" height="12" font="font3" id="p28_t1" reading_order_no="0" segment_no="0" tag_type="text">Next, using the independence of g k j for j ∈ G k \ C k and fixed x k we derive</text>
<text top="91" left="150" width="55" height="12" font="font34" id="p28_t2" reading_order_no="1" segment_no="1" tag_type="formula">E k b g k k 2 | x k</text>
<text top="92" left="222" width="8" height="9" font="font19" id="p28_t3" reading_order_no="2" segment_no="1" tag_type="formula">≤</text>
<text top="91" left="242" width="82" height="12" font="font18" id="p28_t4" reading_order_no="3" segment_no="1" tag_type="formula">2 E k b g k − g k k 2 | x k</text>
<text top="91" left="331" width="70" height="12" font="font18" id="p28_t5" reading_order_no="4" segment_no="1" tag_type="formula">+ 2 E k g k k 2 | x k</text>
<text top="108" left="220" width="11" height="15" font="font19" id="p28_t6" reading_order_no="5" segment_no="1" tag_type="formula">( 16 ) ≤</text>
<text top="112" left="242" width="213" height="13" font="font18" id="p28_t7" reading_order_no="6" segment_no="1" tag_type="formula">2 C b δ k σ 2 + 2 k∇ f ( x k ) k 2 + 2 E k g k − ∇ f ( x k ) k 2 | x k</text>
<text top="136" left="222" width="8" height="9" font="font19" id="p28_t8" reading_order_no="7" segment_no="1" tag_type="formula">≤</text>
<text top="135" left="242" width="107" height="11" font="font18" id="p28_t9" reading_order_no="8" segment_no="1" tag_type="formula">2 C b δ k σ 2 + 2 k∇ f ( x k ) k 2 +</text>
<text top="129" left="362" width="15" height="10" font="font18" id="p28_t10" reading_order_no="9" segment_no="1" tag_type="formula">2 σ 2</text>
<text top="143" left="352" width="36" height="10" font="font19" id="p28_t11" reading_order_no="10" segment_no="1" tag_type="formula">|G k \ C k |</text>
<text top="164" left="222" width="8" height="9" font="font19" id="p28_t12" reading_order_no="11" segment_no="1" tag_type="formula">≤</text>
<text top="163" left="242" width="107" height="12" font="font18" id="p28_t13" reading_order_no="12" segment_no="1" tag_type="formula">2 C b δ k σ 2 + 2 k∇ f ( x k ) k 2 +</text>
<text top="157" left="368" width="15" height="10" font="font18" id="p28_t14" reading_order_no="13" segment_no="1" tag_type="formula">2 σ 2</text>
<text top="165" left="352" width="52" height="16" font="font17" id="p28_t15" reading_order_no="14" segment_no="1" tag_type="formula">n − 2 b − m .</text>
<text top="207" left="108" width="396" height="9" font="font3" id="p28_t16" reading_order_no="15" segment_no="2" tag_type="text">In view of the definition of ( δ, c ) -robust aggregator from [ 58 ], the result of BTARD at iteration k is</text>
<text top="220" left="107" width="397" height="10" font="font18" id="p28_t17" reading_order_no="16" segment_no="2" tag_type="text">( b δ k , C ) -robust. However, we derive this property under assumption that b b k is known to all workers at</text>
<text top="231" left="108" width="150" height="9" font="font3" id="p28_t18" reading_order_no="17" segment_no="2" tag_type="text">each iteration k , which is impractical.</text>
<text top="250" left="108" width="396" height="9" font="font3" id="p28_t19" reading_order_no="18" segment_no="3" tag_type="text">When b b k is unknown the situation changes dramatically: in general, good peers can only know some</text>
<text top="261" left="108" width="396" height="9" font="font3" id="p28_t20" reading_order_no="19" segment_no="3" tag_type="text">upper bound for the fraction of Byzantine peers at iteration k . Unfortunately, if used without bans</text>
<text top="272" left="108" width="396" height="9" font="font3" id="p28_t21" reading_order_no="20" segment_no="3" tag_type="text">this is not enough to converge to any accuracy of the solution since BTARD-SGD is permutation</text>
<text top="282" left="108" width="396" height="10" font="font3" id="p28_t22" reading_order_no="21" segment_no="3" tag_type="text">invariant algorithm (see [ 58 ]). Therefore, in this case, we always use C ENTERED C LIP with τ l = ∞</text>
<text top="293" left="108" width="396" height="10" font="font3" id="p28_t23" reading_order_no="22" segment_no="3" tag_type="text">for all l ≥ 0 , i.e., good peers compute an exact average. In this settings, even 1 byzantine worker can</text>
<text top="304" left="108" width="396" height="9" font="font3" id="p28_t24" reading_order_no="23" segment_no="3" tag_type="text">significantly shift the average in all parts of the vector. The next lemma quantifies the negative effect</text>
<text top="315" left="108" width="135" height="9" font="font3" id="p28_t25" reading_order_no="24" segment_no="3" tag_type="text">of Byzantine workers in this case.</text>
<text top="328" left="108" width="396" height="10" font="font1" id="p28_t26" reading_order_no="25" segment_no="4" tag_type="text">Lemma F.4. Let As. 3.2 , ( Option II ) from As. 3.1 hold and b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 . Assume</text>
<text top="335" left="108" width="99" height="19" font="font13" id="p28_t27" reading_order_no="26" segment_no="4" tag_type="text">that ∆ k max = (1+ √ 3) √ 2 σ</text>
<text top="344" left="171" width="29" height="12" font="font4" id="p28_t28" reading_order_no="27" segment_no="4" tag_type="text">√ n k − m</text>
<text top="344" left="211" width="293" height="9" font="font13" id="p28_t29" reading_order_no="28" segment_no="4" tag_type="text">and δ = 0 is used to compute clipping parameter τ l for CenteredClip . If</text>
<text top="357" left="108" width="229" height="9" font="font3" id="p28_t30" reading_order_no="29" segment_no="4" tag_type="text">C HECK A VERAGING is not triggered for any worker, then</text>
<text top="370" left="239" width="77" height="13" font="font34" id="p28_t31" reading_order_no="30" segment_no="5" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="370" left="324" width="49" height="12" font="font19" id="p28_t32" reading_order_no="31" segment_no="5" tag_type="formula">≤ Cσ 2 1 k,v ,</text>
<text top="373" left="487" width="17" height="9" font="font3" id="p28_t33" reading_order_no="32" segment_no="5" tag_type="text">(18)</text>
<text top="401" left="184" width="55" height="12" font="font34" id="p28_t34" reading_order_no="33" segment_no="6" tag_type="formula">E k b g k k 2 | x k</text>
<text top="401" left="247" width="126" height="11" font="font19" id="p28_t35" reading_order_no="34" segment_no="6" tag_type="formula">≤ 2 Cσ 2 1 k,v + 2 k∇ f ( x k ) k 2 +</text>
<text top="394" left="392" width="15" height="11" font="font18" id="p28_t36" reading_order_no="35" segment_no="6" tag_type="formula">2 σ 2</text>
<text top="403" left="376" width="52" height="16" font="font17" id="p28_t37" reading_order_no="36" segment_no="6" tag_type="formula">n − 2 b − m ,</text>
<text top="403" left="487" width="17" height="9" font="font3" id="p28_t38" reading_order_no="37" segment_no="6" tag_type="text">(19)</text>
<text top="421" left="108" width="49" height="11" font="font13" id="p28_t39" reading_order_no="38" segment_no="7" tag_type="text">where g k =</text>
<text top="421" left="173" width="4" height="6" font="font30" id="p28_t40" reading_order_no="39" segment_no="7" tag_type="formula">1</text>
<text top="428" left="161" width="27" height="7" font="font4" id="p28_t41" reading_order_no="40" segment_no="7" tag_type="formula">|G k \C k |</text>
<text top="421" left="201" width="11" height="4" font="font29" id="p28_t42" reading_order_no="41" segment_no="7" tag_type="formula">P</text>
<text top="434" left="191" width="31" height="7" font="font28" id="p28_t43" reading_order_no="42" segment_no="7" tag_type="formula">j ∈G k \C k</text>
<text top="421" left="224" width="68" height="12" font="font17" id="p28_t44" reading_order_no="43" segment_no="7" tag_type="formula">g k j , C = 4 (1 +</text>
<text top="414" left="294" width="8" height="9" font="font19" id="p28_t45" reading_order_no="44" segment_no="7" tag_type="formula">√</text>
<text top="421" left="302" width="202" height="11" font="font18" id="p28_t46" reading_order_no="45" segment_no="7" tag_type="text">3) 2 + 4 , and 1 k,v is an indicator function of the</text>
<text top="445" left="108" width="396" height="10" font="font13" id="p28_t47" reading_order_no="46" segment_no="7" tag_type="text">event that at least 1 Byzantine peer violates the protocol at iteration k . Moreover, if b b k = 0 and</text>
<text top="455" left="108" width="158" height="12" font="font17" id="p28_t48" reading_order_no="47" segment_no="7" tag_type="text">n k − m ≥ 170 , then b g k ( i ) = g k ( i ) and</text>
<text top="479" left="160" width="6" height="8" font="font34" id="p28_t49" reading_order_no="48" segment_no="8" tag_type="formula">P</text>
<text top="475" left="174" width="203" height="11" font="font3" id="p28_t50" reading_order_no="49" segment_no="8" tag_type="formula">C HECK A VERAGING is triggered for ≥ 1 peer | x k<a href="deeplearning_paper1.html#27">(</a></text>
<text top="476" left="387" width="8" height="9" font="font19" id="p28_t51" reading_order_no="50" segment_no="8" tag_type="formula">≤<a href="deeplearning_paper1.html#27">16</a></text>
<text top="470" left="416" width="15" height="9" font="font18" id="p28_t52" reading_order_no="51" segment_no="8" tag_type="formula">149<a href="deeplearning_paper1.html#27">)</a></text>
<text top="477" left="398" width="54" height="16" font="font18" id="p28_t53" reading_order_no="52" segment_no="8" tag_type="formula">49( n k − m ) .</text>
<text top="477" left="487" width="17" height="9" font="font3" id="p28_t54" reading_order_no="53" segment_no="8" tag_type="text">(20)</text>
<text top="506" left="108" width="395" height="12" font="font13" id="p28_t55" reading_order_no="54" segment_no="9" tag_type="text">Proof. If C HECK A VERAGING is not triggered for any worker, then k b g k ( i ) − g k ( i ) k 2 ≤ (∆ k max ) 2 1 k,v</text>
<text top="518" left="108" width="140" height="10" font="font3" id="p28_t56" reading_order_no="55" segment_no="9" tag_type="text">for all i ∈ ( G k ∪ C k ) \ C k implying</text>
<text top="534" left="148" width="77" height="13" font="font34" id="p28_t57" reading_order_no="56" segment_no="10" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="536" left="240" width="8" height="9" font="font18" id="p28_t58" reading_order_no="57" segment_no="10" tag_type="formula">=</text>
<text top="533" left="276" width="14" height="4" font="font29" id="p28_t59" reading_order_no="58" segment_no="10" tag_type="formula">X</text>
<text top="550" left="258" width="50" height="7" font="font28" id="p28_t60" reading_order_no="59" segment_no="10" tag_type="formula">i ∈ ( G k ∪C k ) \C k</text>
<text top="534" left="310" width="99" height="13" font="font34" id="p28_t61" reading_order_no="60" segment_no="10" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="571" left="240" width="8" height="9" font="font19" id="p28_t62" reading_order_no="61" segment_no="10" tag_type="formula">≤</text>
<text top="564" left="258" width="78" height="17" font="font18" id="p28_t63" reading_order_no="62" segment_no="10" tag_type="formula">( n k − m ) · 2 (1 +</text>
<text top="556" left="338" width="8" height="9" font="font19" id="p28_t64" reading_order_no="63" segment_no="10" tag_type="formula">√</text>
<text top="563" left="346" width="47" height="10" font="font18" id="p28_t65" reading_order_no="64" segment_no="10" tag_type="formula">3) 2 + 8 σ 2</text>
<text top="578" left="334" width="32" height="10" font="font17" id="p28_t66" reading_order_no="65" segment_no="10" tag_type="formula">n k − m</text>
<text top="570" left="395" width="69" height="11" font="font19" id="p28_t67" reading_order_no="66" segment_no="10" tag_type="formula">1 k,v ≤ Cσ 2 1 k,v .</text>
<text top="592" left="108" width="299" height="12" font="font3" id="p28_t68" reading_order_no="67" segment_no="11" tag_type="text">Next, using the independence of g k j for j ∈ G k \ C k and fixed x k we derive</text>
<text top="609" left="146" width="55" height="12" font="font34" id="p28_t69" reading_order_no="68" segment_no="12" tag_type="formula">E k b g k k 2 | x k</text>
<text top="610" left="218" width="8" height="9" font="font19" id="p28_t70" reading_order_no="69" segment_no="12" tag_type="formula">≤</text>
<text top="609" left="237" width="83" height="12" font="font18" id="p28_t71" reading_order_no="70" segment_no="12" tag_type="formula">2 E k b g k − g k k 2 | x k</text>
<text top="609" left="327" width="70" height="12" font="font18" id="p28_t72" reading_order_no="71" segment_no="12" tag_type="formula">+ 2 E k g k k 2 | x k</text>
<text top="626" left="216" width="11" height="15" font="font19" id="p28_t73" reading_order_no="72" segment_no="12" tag_type="formula">( 18 ) ≤</text>
<text top="631" left="237" width="222" height="12" font="font18" id="p28_t74" reading_order_no="73" segment_no="12" tag_type="formula">2 Cσ 2 1 k,v + 2 k∇ f ( x k ) k 2 + 2 E k g k − ∇ f ( x k ) k 2 | x k</text>
<text top="654" left="218" width="8" height="9" font="font19" id="p28_t75" reading_order_no="74" segment_no="12" tag_type="formula">≤</text>
<text top="653" left="237" width="116" height="12" font="font18" id="p28_t76" reading_order_no="75" segment_no="12" tag_type="formula">2 Cσ 2 1 k,v + 2 k∇ f ( x k ) k 2 +</text>
<text top="647" left="366" width="15" height="10" font="font18" id="p28_t77" reading_order_no="76" segment_no="12" tag_type="formula">2 σ 2</text>
<text top="661" left="356" width="36" height="10" font="font19" id="p28_t78" reading_order_no="77" segment_no="12" tag_type="formula">|G k \ C k |</text>
<text top="683" left="218" width="8" height="9" font="font19" id="p28_t79" reading_order_no="78" segment_no="12" tag_type="formula">≤</text>
<text top="681" left="237" width="116" height="12" font="font18" id="p28_t80" reading_order_no="79" segment_no="12" tag_type="formula">2 Cσ 2 1 k,v + 2 k∇ f ( x k ) k 2 +</text>
<text top="675" left="372" width="15" height="10" font="font18" id="p28_t81" reading_order_no="80" segment_no="12" tag_type="formula">2 σ 2</text>
<text top="683" left="356" width="52" height="16" font="font17" id="p28_t82" reading_order_no="81" segment_no="12" tag_type="formula">n − 2 b − m .</text>
<text top="702" left="108" width="397" height="9" font="font3" id="p28_t83" reading_order_no="82" segment_no="13" tag_type="text">The proof of the final part of the lemma is identical to the proof of the same result from Lemma F.2 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p28_t84" reading_order_no="83" segment_no="14" tag_type="text">28</text>
</page>
<page number="29" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="20" height="9" font="font1" id="p29_t1" reading_order_no="0" segment_no="0" tag_type="title">F.2.3</text>
<text top="75" left="138" width="70" height="9" font="font1" id="p29_t2" reading_order_no="1" segment_no="0" tag_type="title">Non-convex case</text>
<text top="94" left="108" width="396" height="9" font="font3" id="p29_t3" reading_order_no="2" segment_no="1" tag_type="text">In this section, we provide the complete statements and the full proofs of the convergence results for</text>
<text top="105" left="108" width="396" height="9" font="font3" id="p29_t4" reading_order_no="3" segment_no="1" tag_type="text">BTARD-SGD when the objective function f is smooth, but can be non-convex. We start with the</text>
<text top="116" left="108" width="323" height="9" font="font3" id="p29_t5" reading_order_no="4" segment_no="1" tag_type="text">case when the number of attacking Byzantine workers is known at each iteration.</text>
<text top="128" left="108" width="396" height="12" font="font1" id="p29_t6" reading_order_no="5" segment_no="2" tag_type="text">Theorem F.1. Let As. 3.2 , ( Option I ) from As. 3.1 hold, Q = R d , and f be L -smooth (see Def. F.1 )</text>
<text top="140" left="108" width="396" height="11" font="font13" id="p29_t7" reading_order_no="6" segment_no="2" tag_type="text">and uniformly lower bounded by f ∗ . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and the</text>
<text top="152" left="108" width="396" height="9" font="font13" id="p29_t8" reading_order_no="7" segment_no="2" tag_type="text">exact number of attacking byzantine peers is known to all good peers at each iteration. Next, assume</text>
<text top="163" left="108" width="16" height="9" font="font13" id="p29_t9" reading_order_no="8" segment_no="2" tag_type="text">that</text>
<text top="181" left="193" width="35" height="9" font="font17" id="p29_t10" reading_order_no="9" segment_no="3" tag_type="formula">γ = min<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="171" left="230" width="18" height="12" font="font29" id="p29_t11" reading_order_no="10" segment_no="3" tag_type="formula">( 1<a href="deeplearning_paper1.html#6">,</a></text>
<text top="181" left="239" width="16" height="16" font="font18" id="p29_t12" reading_order_no="11" segment_no="3" tag_type="formula">4 L ,<a href="deeplearning_paper1.html#6">(</a></text>
<text top="172" left="257" width="34" height="12" font="font29" id="p29_t13" reading_order_no="12" segment_no="3" tag_type="formula">r ∆ 0 n<a href="deeplearning_paper1.html#6">Option I</a></text>
<text top="187" left="268" width="25" height="10" font="font17" id="p29_t14" reading_order_no="13" segment_no="3" tag_type="formula">Lσ 2 K<a href="deeplearning_paper1.html#6">)</a></text>
<text top="171" left="296" width="8" height="4" font="font29" id="p29_t15" reading_order_no="14" segment_no="3" tag_type="formula">)</text>
<text top="181" left="305" width="3" height="9" font="font17" id="p29_t16" reading_order_no="15" segment_no="3" tag_type="formula">,<a href="deeplearning_paper1.html#6">3.1</a></text>
<text top="179" left="320" width="12" height="11" font="font18" id="p29_t17" reading_order_no="16" segment_no="3" tag_type="formula">∆ k</text>
<text top="174" left="328" width="49" height="18" font="font18" id="p29_t18" reading_order_no="17" segment_no="3" tag_type="formula">max = (1 +</text>
<text top="166" left="379" width="8" height="9" font="font19" id="p29_t19" reading_order_no="18" segment_no="3" tag_type="formula">√</text>
<text top="174" left="387" width="9" height="9" font="font18" id="p29_t20" reading_order_no="19" segment_no="3" tag_type="formula">3)</text>
<text top="166" left="396" width="8" height="9" font="font19" id="p29_t21" reading_order_no="20" segment_no="3" tag_type="formula">√</text>
<text top="174" left="404" width="11" height="9" font="font18" id="p29_t22" reading_order_no="21" segment_no="3" tag_type="formula">2 σ</text>
<text top="180" left="366" width="8" height="9" font="font19" id="p29_t23" reading_order_no="22" segment_no="3" tag_type="formula">√</text>
<text top="188" left="375" width="32" height="10" font="font17" id="p29_t24" reading_order_no="23" segment_no="3" tag_type="formula">n k − m</text>
<text top="181" left="416" width="3" height="9" font="font17" id="p29_t25" reading_order_no="24" segment_no="3" tag_type="formula">,</text>
<text top="181" left="487" width="17" height="9" font="font3" id="p29_t26" reading_order_no="25" segment_no="3" tag_type="text">(21)</text>
<text top="205" left="108" width="397" height="12" font="font13" id="p29_t27" reading_order_no="26" segment_no="4" tag_type="text">where ∆ 0 = f ( x 0 ) − f ∗ and ∆ k max is the parameter for verification 3 at iteration k of BTARD-SGD .<a href="deeplearning_paper1.html#25">F.1</a></text>
<text top="217" left="107" width="316" height="12" font="font13" id="p29_t28" reading_order_no="27" segment_no="4" tag_type="text">Then, we have E [ k∇ f ( x K ) k 2 ] ≤ ε after K iterations of BTARD-SGD , where<a href="deeplearning_paper1.html#25">)</a></text>
<text top="242" left="231" width="31" height="9" font="font17" id="p29_t29" reading_order_no="28" segment_no="5" tag_type="formula">K = O</text>
<text top="236" left="272" width="19" height="9" font="font17" id="p29_t30" reading_order_no="29" segment_no="5" tag_type="formula">L ∆ 0</text>
<text top="249" left="277" width="9" height="9" font="font17" id="p29_t31" reading_order_no="30" segment_no="5" tag_type="formula">ε 2</text>
<text top="234" left="295" width="41" height="17" font="font18" id="p29_t32" reading_order_no="31" segment_no="5" tag_type="formula">+ L ∆ 0 σ 2</text>
<text top="249" left="314" width="14" height="9" font="font17" id="p29_t33" reading_order_no="32" segment_no="5" tag_type="formula">nε 4</text>
<text top="234" left="340" width="32" height="17" font="font18" id="p29_t34" reading_order_no="33" segment_no="5" tag_type="formula">+ nδσ 2</text>
<text top="249" left="353" width="17" height="9" font="font17" id="p29_t35" reading_order_no="34" segment_no="5" tag_type="formula">mε 2</text>
<text top="243" left="487" width="17" height="9" font="font3" id="p29_t36" reading_order_no="35" segment_no="5" tag_type="text">(22)</text>
<text top="265" left="108" width="259" height="12" font="font13" id="p29_t37" reading_order_no="36" segment_no="6" tag_type="text">and x K is picked uniformly at random from { x 0 , x 1 , . . . , x K − 1 } .</text>
<text top="291" left="108" width="165" height="9" font="font13" id="p29_t38" reading_order_no="37" segment_no="7" tag_type="text">Proof. From L -smoothness of f we have</text>
<text top="312" left="171" width="35" height="11" font="font17" id="p29_t39" reading_order_no="38" segment_no="8" tag_type="formula">f ( x k +1 )</text>
<text top="307" left="215" width="12" height="15" font="font19" id="p29_t40" reading_order_no="39" segment_no="8" tag_type="formula">( 10 ) ≤</text>
<text top="307" left="237" width="145" height="16" font="font17" id="p29_t41" reading_order_no="40" segment_no="8" tag_type="formula">f ( x k ) + h∇ f ( x k ) , x k +1 − x k i + L</text>
<text top="321" left="376" width="5" height="9" font="font18" id="p29_t42" reading_order_no="41" segment_no="8" tag_type="formula">2</text>
<text top="312" left="383" width="57" height="11" font="font19" id="p29_t43" reading_order_no="42" segment_no="8" tag_type="formula">k x k +1 − x k k 2</text>
<text top="339" left="217" width="8" height="9" font="font18" id="p29_t44" reading_order_no="43" segment_no="8" tag_type="formula">=</text>
<text top="331" left="237" width="127" height="19" font="font17" id="p29_t45" reading_order_no="44" segment_no="8" tag_type="formula">f ( x k ) − γ h∇ f ( x k ) , b g k i + Lγ 2</text>
<text top="337" left="353" width="40" height="18" font="font18" id="p29_t46" reading_order_no="45" segment_no="8" tag_type="formula">2 k b g k k 2 .</text>
<text top="360" left="108" width="396" height="12" font="font3" id="p29_t47" reading_order_no="46" segment_no="9" tag_type="text">Taking the conditional expectation E [ · | x k ] from the both sides of the previous inequality we obtain</text>
<text top="378" left="135" width="64" height="12" font="font34" id="p29_t48" reading_order_no="47" segment_no="10" tag_type="formula">E f ( x k +1 ) | x k</text>
<text top="379" left="216" width="8" height="9" font="font19" id="p29_t49" reading_order_no="48" segment_no="10" tag_type="formula">≤</text>
<text top="378" left="236" width="213" height="12" font="font17" id="p29_t50" reading_order_no="49" segment_no="10" tag_type="formula">f ( x k ) − γ k∇ f ( x k ) k 2 − γ ∇ f ( x k ) , E b g k − g k | x k</text>
<text top="394" left="246" width="25" height="17" font="font18" id="p29_t51" reading_order_no="50" segment_no="10" tag_type="formula">+ Lγ 2</text>
<text top="400" left="261" width="67" height="18" font="font18" id="p29_t52" reading_order_no="51" segment_no="10" tag_type="formula">2 E k b g k k 2 | x k</text>
<text top="421" left="214" width="12" height="15" font="font19" id="p29_t53" reading_order_no="52" segment_no="10" tag_type="formula">( 17 ) ≤</text>
<text top="420" left="236" width="43" height="16" font="font17" id="p29_t54" reading_order_no="53" segment_no="10" tag_type="formula">f ( x k ) − γ</text>
<text top="420" left="274" width="72" height="23" font="font18" id="p29_t55" reading_order_no="54" segment_no="10" tag_type="formula">2 k∇ f ( x k ) k 2 + γ</text>
<text top="434" left="341" width="5" height="9" font="font18" id="p29_t56" reading_order_no="55" segment_no="10" tag_type="formula">2</text>
<text top="425" left="355" width="63" height="13" font="font34" id="p29_t57" reading_order_no="56" segment_no="10" tag_type="formula">E b g k − g k | x k</text>
<text top="423" left="428" width="4" height="6" font="font30" id="p29_t58" reading_order_no="57" segment_no="10" tag_type="formula">2</text>
<text top="451" left="236" width="134" height="11" font="font18" id="p29_t59" reading_order_no="58" segment_no="10" tag_type="formula">+ CLγ 2 b δ k σ 2 + Lγ 2 k∇ f ( x k ) k +</text>
<text top="445" left="384" width="27" height="10" font="font17" id="p29_t60" reading_order_no="59" segment_no="10" tag_type="formula">Lγ 2 σ 2</text>
<text top="459" left="373" width="49" height="10" font="font17" id="p29_t61" reading_order_no="60" segment_no="10" tag_type="formula">n − 2 b − m</text>
<text top="475" left="216" width="8" height="9" font="font19" id="p29_t62" reading_order_no="61" segment_no="10" tag_type="formula">≤</text>
<text top="469" left="236" width="43" height="16" font="font17" id="p29_t63" reading_order_no="62" segment_no="10" tag_type="formula">f ( x k ) − γ</text>
<text top="469" left="274" width="118" height="22" font="font18" id="p29_t64" reading_order_no="63" segment_no="10" tag_type="formula">2 (1 − 2 Lγ ) k∇ f ( x k ) k 2 + γ</text>
<text top="473" left="387" width="84" height="18" font="font18" id="p29_t65" reading_order_no="64" segment_no="10" tag_type="formula">2 E k b g k − g k k 2 | x k</text>
<text top="499" left="236" width="63" height="12" font="font18" id="p29_t66" reading_order_no="65" segment_no="10" tag_type="formula">+ CLγ 2 b δ k σ 2 +</text>
<text top="493" left="312" width="27" height="10" font="font17" id="p29_t67" reading_order_no="66" segment_no="10" tag_type="formula">Lγ 2 σ 2</text>
<text top="501" left="302" width="52" height="16" font="font17" id="p29_t68" reading_order_no="67" segment_no="10" tag_type="formula">n − 2 b − m .</text>
<text top="523" left="108" width="41" height="10" font="font3" id="p29_t69" reading_order_no="68" segment_no="11" tag_type="text">Since γ ≤</text>
<text top="522" left="156" width="4" height="6" font="font30" id="p29_t70" reading_order_no="69" segment_no="11" tag_type="text">1</text>
<text top="524" left="153" width="134" height="12" font="font3" id="p29_t71" reading_order_no="70" segment_no="11" tag_type="text">4 L we continue our derivations as</text>
<text top="547" left="138" width="65" height="12" font="font34" id="p29_t72" reading_order_no="71" segment_no="12" tag_type="formula">E f ( x k +1 ) | x k</text>
<text top="548" left="218" width="8" height="9" font="font19" id="p29_t73" reading_order_no="72" segment_no="12" tag_type="formula">≤</text>
<text top="542" left="236" width="43" height="16" font="font17" id="p29_t74" reading_order_no="73" segment_no="12" tag_type="formula">f ( x k ) − γ</text>
<text top="556" left="274" width="5" height="9" font="font18" id="p29_t75" reading_order_no="74" segment_no="12" tag_type="formula">4</text>
<text top="547" left="281" width="140" height="12" font="font19" id="p29_t76" reading_order_no="75" segment_no="12" tag_type="formula">k∇ f ( x k ) k 2 + γCσ 2 (1 + Lγ ) b δ k +</text>
<text top="541" left="434" width="27" height="10" font="font17" id="p29_t77" reading_order_no="76" segment_no="12" tag_type="formula">Lγ 2 σ 2</text>
<text top="555" left="424" width="49" height="10" font="font17" id="p29_t78" reading_order_no="77" segment_no="12" tag_type="formula">n − 2 b − m</text>
<text top="575" left="218" width="8" height="9" font="font19" id="p29_t79" reading_order_no="78" segment_no="12" tag_type="formula">≤</text>
<text top="569" left="236" width="43" height="16" font="font17" id="p29_t80" reading_order_no="79" segment_no="12" tag_type="formula">f ( x k ) − γ</text>
<text top="574" left="274" width="114" height="17" font="font18" id="p29_t81" reading_order_no="80" segment_no="12" tag_type="formula">4 k∇ f ( x k ) k 2 + 2 γCσ 2 b δ k +</text>
<text top="567" left="402" width="27" height="11" font="font17" id="p29_t82" reading_order_no="81" segment_no="12" tag_type="formula">Lγ 2 σ 2</text>
<text top="576" left="392" width="52" height="15" font="font17" id="p29_t83" reading_order_no="82" segment_no="12" tag_type="formula">n − 2 b − m .</text>
<text top="597" left="108" width="396" height="9" font="font3" id="p29_t84" reading_order_no="83" segment_no="13" tag_type="text">Taking the full expectation from the both sides of the obtained inequality and summing up the results</text>
<text top="607" left="108" width="124" height="10" font="font3" id="p29_t85" reading_order_no="84" segment_no="13" tag_type="text">for k = 0 , 1 , . . . , K − 1 we get</text>
<text top="628" left="111" width="5" height="9" font="font18" id="p29_t86" reading_order_no="85" segment_no="14" tag_type="formula">1</text>
<text top="642" left="109" width="8" height="9" font="font17" id="p29_t87" reading_order_no="86" segment_no="14" tag_type="formula">K</text>
<text top="624" left="121" width="18" height="7" font="font28" id="p29_t88" reading_order_no="87" segment_no="14" tag_type="formula">K − 1</text>
<text top="632" left="123" width="14" height="4" font="font29" id="p29_t89" reading_order_no="88" segment_no="14" tag_type="formula">X</text>
<text top="649" left="123" width="14" height="6" font="font28" id="p29_t90" reading_order_no="89" segment_no="14" tag_type="formula">k =0</text>
<text top="633" left="140" width="59" height="12" font="font34" id="p29_t91" reading_order_no="90" segment_no="14" tag_type="formula">E k∇ f ( x k ) k 2</text>
<text top="634" left="214" width="8" height="9" font="font19" id="p29_t92" reading_order_no="91" segment_no="14" tag_type="formula">≤</text>
<text top="628" left="238" width="5" height="9" font="font18" id="p29_t93" reading_order_no="92" segment_no="14" tag_type="formula">4</text>
<text top="642" left="233" width="14" height="9" font="font17" id="p29_t94" reading_order_no="93" segment_no="14" tag_type="formula">γK</text>
<text top="624" left="251" width="17" height="7" font="font28" id="p29_t95" reading_order_no="94" segment_no="14" tag_type="formula">K − 1</text>
<text top="632" left="252" width="14" height="4" font="font29" id="p29_t96" reading_order_no="95" segment_no="14" tag_type="formula">X</text>
<text top="649" left="252" width="14" height="6" font="font28" id="p29_t97" reading_order_no="96" segment_no="14" tag_type="formula">k =0</text>
<text top="626" left="270" width="123" height="19" font="font34" id="p29_t98" reading_order_no="97" segment_no="14" tag_type="formula">E f ( x k ) − f ( x k +1 ) + 8 Cσ 2</text>
<text top="642" left="377" width="8" height="9" font="font17" id="p29_t99" reading_order_no="98" segment_no="14" tag_type="formula">K</text>
<text top="637" left="395" width="7" height="8" font="font34" id="p29_t100" reading_order_no="99" segment_no="14" tag_type="formula">E</text>
<text top="624" left="403" width="23" height="7" font="font29" id="p29_t101" reading_order_no="100" segment_no="14" tag_type="formula">" K − 1</text>
<text top="632" left="411" width="14" height="4" font="font29" id="p29_t102" reading_order_no="101" segment_no="14" tag_type="formula">X</text>
<text top="649" left="410" width="15" height="6" font="font28" id="p29_t103" reading_order_no="102" segment_no="14" tag_type="formula">k =0</text>
<text top="635" left="428" width="8" height="9" font="font29" id="p29_t104" reading_order_no="103" segment_no="14" tag_type="formula">b δ k</text>
<text top="624" left="437" width="6" height="4" font="font29" id="p29_t105" reading_order_no="104" segment_no="14" tag_type="formula">#</text>
<text top="635" left="445" width="8" height="9" font="font18" id="p29_t106" reading_order_no="105" segment_no="14" tag_type="formula">+</text>
<text top="626" left="467" width="27" height="11" font="font18" id="p29_t107" reading_order_no="106" segment_no="14" tag_type="formula">4 Lγσ 2</text>
<text top="641" left="457" width="48" height="10" font="font17" id="p29_t108" reading_order_no="107" segment_no="14" tag_type="formula">n − 2 b − m</text>
<text top="670" left="214" width="8" height="9" font="font18" id="p29_t109" reading_order_no="108" segment_no="14" tag_type="formula">=</text>
<text top="661" left="233" width="87" height="12" font="font18" id="p29_t110" reading_order_no="109" segment_no="14" tag_type="formula">4 f ( x 0 ) − E [ f ( x K )]</text>
<text top="677" left="271" width="14" height="9" font="font17" id="p29_t111" reading_order_no="110" segment_no="14" tag_type="formula">γK</text>
<text top="662" left="327" width="34" height="17" font="font18" id="p29_t112" reading_order_no="111" segment_no="14" tag_type="formula">+ 8 Cσ 2</text>
<text top="677" left="345" width="8" height="9" font="font17" id="p29_t113" reading_order_no="112" segment_no="14" tag_type="formula">K</text>
<text top="672" left="363" width="7" height="8" font="font34" id="p29_t114" reading_order_no="113" segment_no="14" tag_type="formula">E</text>
<text top="659" left="371" width="23" height="7" font="font29" id="p29_t115" reading_order_no="114" segment_no="14" tag_type="formula">" K − 1</text>
<text top="667" left="379" width="14" height="4" font="font29" id="p29_t116" reading_order_no="115" segment_no="14" tag_type="formula">X</text>
<text top="684" left="378" width="15" height="6" font="font28" id="p29_t117" reading_order_no="116" segment_no="14" tag_type="formula">k =0</text>
<text top="663" left="408" width="9" height="10" font="font29" id="p29_t118" reading_order_no="117" segment_no="14" tag_type="formula">b b k</text>
<text top="676" left="397" width="32" height="10" font="font17" id="p29_t119" reading_order_no="118" segment_no="14" tag_type="formula">n k − m</text>
<text top="659" left="430" width="6" height="4" font="font29" id="p29_t120" reading_order_no="119" segment_no="14" tag_type="formula">#</text>
<text top="670" left="438" width="8" height="9" font="font18" id="p29_t121" reading_order_no="120" segment_no="14" tag_type="formula">+</text>
<text top="662" left="460" width="27" height="10" font="font18" id="p29_t122" reading_order_no="121" segment_no="14" tag_type="formula">4 Lγσ 2</text>
<text top="676" left="449" width="49" height="10" font="font17" id="p29_t123" reading_order_no="122" segment_no="14" tag_type="formula">n − 2 b − m</text>
<text top="705" left="214" width="8" height="9" font="font19" id="p29_t124" reading_order_no="123" segment_no="14" tag_type="formula">≤</text>
<text top="697" left="233" width="58" height="12" font="font18" id="p29_t125" reading_order_no="124" segment_no="14" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="712" left="254" width="14" height="9" font="font17" id="p29_t126" reading_order_no="125" segment_no="14" tag_type="formula">γK</text>
<text top="705" left="294" width="8" height="9" font="font18" id="p29_t127" reading_order_no="126" segment_no="14" tag_type="formula">+</text>
<text top="697" left="327" width="22" height="10" font="font18" id="p29_t128" reading_order_no="127" segment_no="14" tag_type="formula">8 Cσ 2</text>
<text top="707" left="306" width="73" height="14" font="font17" id="p29_t129" reading_order_no="128" segment_no="14" tag_type="formula">K ( n − 2 b − m ) E</text>
<text top="694" left="380" width="24" height="7" font="font29" id="p29_t130" reading_order_no="129" segment_no="14" tag_type="formula">" K − 1</text>
<text top="702" left="388" width="14" height="4" font="font29" id="p29_t131" reading_order_no="130" segment_no="14" tag_type="formula">X</text>
<text top="719" left="388" width="14" height="6" font="font28" id="p29_t132" reading_order_no="131" segment_no="14" tag_type="formula">k =0</text>
<text top="705" left="405" width="8" height="10" font="font29" id="p29_t133" reading_order_no="132" segment_no="14" tag_type="formula">b b k</text>
<text top="695" left="414" width="6" height="4" font="font29" id="p29_t134" reading_order_no="133" segment_no="14" tag_type="formula">#</text>
<text top="705" left="422" width="8" height="9" font="font18" id="p29_t135" reading_order_no="134" segment_no="14" tag_type="formula">+</text>
<text top="697" left="444" width="27" height="10" font="font18" id="p29_t136" reading_order_no="135" segment_no="14" tag_type="formula">4 Lγσ 2</text>
<text top="705" left="434" width="52" height="16" font="font17" id="p29_t137" reading_order_no="136" segment_no="14" tag_type="formula">n − 2 b − m .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p29_t138" reading_order_no="137" segment_no="15" tag_type="text">29</text>
</page>
<page number="30" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="396" height="9" font="font3" id="p30_t1" reading_order_no="0" segment_no="0" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="86" left="108" width="273" height="10" font="font17" id="p30_t2" reading_order_no="1" segment_no="0" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="103" left="224" width="57" height="17" font="font17" id="p30_t3" reading_order_no="2" segment_no="1" tag_type="formula">p k ≥ m · |G k |</text>
<text top="117" left="267" width="10" height="10" font="font17" id="p30_t4" reading_order_no="3" segment_no="1" tag_type="formula">n k</text>
<text top="104" left="284" width="14" height="15" font="font19" id="p30_t5" reading_order_no="4" segment_no="1" tag_type="formula">· 1</text>
<text top="117" left="290" width="10" height="10" font="font17" id="p30_t6" reading_order_no="5" segment_no="1" tag_type="formula">n k</text>
<text top="103" left="305" width="55" height="16" font="font18" id="p30_t7" reading_order_no="6" segment_no="1" tag_type="formula">= m (1 − δ k )</text>
<text top="117" left="333" width="10" height="10" font="font17" id="p30_t8" reading_order_no="7" segment_no="1" tag_type="formula">n k</text>
<text top="104" left="364" width="20" height="15" font="font19" id="p30_t9" reading_order_no="8" segment_no="1" tag_type="formula">≥ m</text>
<text top="110" left="377" width="11" height="16" font="font17" id="p30_t10" reading_order_no="9" segment_no="1" tag_type="formula">n .</text>
<text top="134" left="108" width="396" height="9" font="font3" id="p30_t11" reading_order_no="10" segment_no="2" tag_type="text">Therefore, each individual Byzantine worker can violate the protocol no more than 1 / p times on</text>
<text top="145" left="108" width="87" height="9" font="font3" id="p30_t12" reading_order_no="11" segment_no="2" tag_type="text">average implying that</text>
<text top="167" left="141" width="5" height="9" font="font18" id="p30_t13" reading_order_no="12" segment_no="3" tag_type="formula">1</text>
<text top="180" left="139" width="8" height="9" font="font17" id="p30_t14" reading_order_no="13" segment_no="3" tag_type="formula">K</text>
<text top="163" left="151" width="18" height="7" font="font28" id="p30_t15" reading_order_no="14" segment_no="3" tag_type="formula">K − 1</text>
<text top="171" left="153" width="14" height="4" font="font29" id="p30_t16" reading_order_no="15" segment_no="3" tag_type="formula">X</text>
<text top="188" left="153" width="14" height="6" font="font28" id="p30_t17" reading_order_no="16" segment_no="3" tag_type="formula">k =0</text>
<text top="171" left="170" width="59" height="13" font="font34" id="p30_t18" reading_order_no="17" segment_no="3" tag_type="formula">E k∇ f ( x k ) k 2</text>
<text top="173" left="244" width="8" height="9" font="font19" id="p30_t19" reading_order_no="18" segment_no="3" tag_type="formula">≤</text>
<text top="165" left="263" width="58" height="12" font="font18" id="p30_t20" reading_order_no="19" segment_no="3" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="180" left="285" width="14" height="9" font="font17" id="p30_t21" reading_order_no="20" segment_no="3" tag_type="formula">γK</text>
<text top="174" left="325" width="8" height="9" font="font18" id="p30_t22" reading_order_no="21" segment_no="3" tag_type="formula">+</text>
<text top="165" left="356" width="33" height="11" font="font18" id="p30_t23" reading_order_no="22" segment_no="3" tag_type="formula">8 Cnbσ 2</text>
<text top="174" left="336" width="85" height="15" font="font17" id="p30_t24" reading_order_no="23" segment_no="3" tag_type="formula">Km ( n − 2 b − m ) +</text>
<text top="165" left="434" width="28" height="11" font="font18" id="p30_t25" reading_order_no="24" segment_no="3" tag_type="formula">4 Lγσ 2</text>
<text top="180" left="424" width="49" height="9" font="font17" id="p30_t26" reading_order_no="25" segment_no="3" tag_type="formula">n − 2 b − m</text>
<text top="205" left="244" width="8" height="9" font="font19" id="p30_t27" reading_order_no="26" segment_no="3" tag_type="formula">≤</text>
<text top="197" left="263" width="58" height="12" font="font18" id="p30_t28" reading_order_no="27" segment_no="3" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="212" left="285" width="14" height="9" font="font17" id="p30_t29" reading_order_no="28" segment_no="3" tag_type="formula">γK</text>
<text top="205" left="325" width="8" height="9" font="font18" id="p30_t30" reading_order_no="29" segment_no="3" tag_type="formula">+</text>
<text top="197" left="343" width="38" height="11" font="font18" id="p30_t31" reading_order_no="30" segment_no="3" tag_type="formula">16 Cnbσ 2</text>
<text top="197" left="336" width="95" height="24" font="font17" id="p30_t32" reading_order_no="31" segment_no="3" tag_type="formula">Km ( n − 2 b ) + 8 Lγσ 2</text>
<text top="212" left="404" width="27" height="9" font="font17" id="p30_t33" reading_order_no="32" segment_no="3" tag_type="formula">n − 2 b</text>
<text top="233" left="244" width="8" height="9" font="font19" id="p30_t34" reading_order_no="33" segment_no="3" tag_type="formula">≤</text>
<text top="225" left="263" width="58" height="12" font="font18" id="p30_t35" reading_order_no="34" segment_no="3" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="240" left="285" width="14" height="9" font="font17" id="p30_t36" reading_order_no="35" segment_no="3" tag_type="formula">γK</text>
<text top="225" left="325" width="54" height="18" font="font18" id="p30_t37" reading_order_no="36" segment_no="3" tag_type="formula">+ 160 Cnδσ 2</text>
<text top="240" left="346" width="23" height="9" font="font18" id="p30_t38" reading_order_no="37" segment_no="3" tag_type="formula">7 Km</text>
<text top="225" left="383" width="44" height="18" font="font18" id="p30_t39" reading_order_no="38" segment_no="3" tag_type="formula">+ 80 Lγσ 2</text>
<text top="240" left="405" width="11" height="9" font="font18" id="p30_t40" reading_order_no="39" segment_no="3" tag_type="formula">7 n</text>
<text top="234" left="429" width="3" height="9" font="font17" id="p30_t41" reading_order_no="40" segment_no="3" tag_type="formula">.</text>
<text top="257" left="108" width="301" height="11" font="font3" id="p30_t42" reading_order_no="41" segment_no="4" tag_type="text">Since x K is picked uniformly at random from { x 0 , x 1 , . . . , x K − 1 } we have</text>
<text top="282" left="181" width="62" height="13" font="font34" id="p30_t43" reading_order_no="42" segment_no="5" tag_type="formula">E k∇ f ( x K ) k 2</text>
<text top="276" left="251" width="70" height="17" font="font19" id="p30_t44" reading_order_no="43" segment_no="5" tag_type="formula">≤ 4( f ( x 0 ) − f ∗ )</text>
<text top="291" left="284" width="14" height="9" font="font17" id="p30_t45" reading_order_no="44" segment_no="5" tag_type="formula">γK</text>
<text top="276" left="324" width="55" height="17" font="font18" id="p30_t46" reading_order_no="45" segment_no="5" tag_type="formula">+ 160 Cnδσ 2</text>
<text top="291" left="346" width="23" height="9" font="font18" id="p30_t47" reading_order_no="46" segment_no="5" tag_type="formula">7 Km</text>
<text top="276" left="383" width="43" height="17" font="font18" id="p30_t48" reading_order_no="47" segment_no="5" tag_type="formula">+ 80 Lγσ 2</text>
<text top="291" left="405" width="11" height="9" font="font18" id="p30_t49" reading_order_no="48" segment_no="5" tag_type="formula">7 n</text>
<text top="284" left="428" width="3" height="9" font="font17" id="p30_t50" reading_order_no="49" segment_no="5" tag_type="formula">.</text>
<text top="308" left="108" width="90" height="9" font="font3" id="p30_t51" reading_order_no="50" segment_no="6" tag_type="text">Using the stepsize rule</text>
<text top="329" left="251" width="35" height="9" font="font17" id="p30_t52" reading_order_no="51" segment_no="7" tag_type="formula">γ = min</text>
<text top="318" left="288" width="18" height="13" font="font29" id="p30_t53" reading_order_no="52" segment_no="7" tag_type="formula">( 1</text>
<text top="329" left="297" width="16" height="15" font="font18" id="p30_t54" reading_order_no="53" segment_no="7" tag_type="formula">4 L ,</text>
<text top="319" left="315" width="33" height="12" font="font29" id="p30_t55" reading_order_no="54" segment_no="7" tag_type="formula">r ∆ 0 n</text>
<text top="335" left="326" width="25" height="9" font="font17" id="p30_t56" reading_order_no="55" segment_no="7" tag_type="formula">Lσ 2 K</text>
<text top="318" left="353" width="8" height="4" font="font29" id="p30_t57" reading_order_no="56" segment_no="7" tag_type="formula">)</text>
<text top="353" left="108" width="39" height="9" font="font3" id="p30_t58" reading_order_no="57" segment_no="8" tag_type="text">we derive</text>
<text top="367" left="201" width="62" height="13" font="font34" id="p30_t59" reading_order_no="58" segment_no="9" tag_type="formula">E k∇ f ( x K ) k 2</text>
<text top="369" left="270" width="18" height="9" font="font18" id="p30_t60" reading_order_no="59" segment_no="9" tag_type="formula">= O</text>
<text top="363" left="299" width="19" height="9" font="font17" id="p30_t61" reading_order_no="60" segment_no="9" tag_type="formula">L ∆ 0</text>
<text top="376" left="304" width="8" height="9" font="font17" id="p30_t62" reading_order_no="61" segment_no="9" tag_type="formula">K</text>
<text top="369" left="322" width="8" height="9" font="font18" id="p30_t63" reading_order_no="62" segment_no="9" tag_type="formula">+</text>
<text top="354" left="333" width="8" height="9" font="font19" id="p30_t64" reading_order_no="63" segment_no="9" tag_type="formula">√</text>
<text top="363" left="341" width="26" height="9" font="font17" id="p30_t65" reading_order_no="64" segment_no="9" tag_type="formula">L ∆ 0 σ</text>
<text top="368" left="338" width="8" height="9" font="font19" id="p30_t66" reading_order_no="65" segment_no="9" tag_type="formula">√</text>
<text top="377" left="346" width="14" height="9" font="font17" id="p30_t67" reading_order_no="66" segment_no="9" tag_type="formula">nK</text>
<text top="361" left="370" width="32" height="17" font="font18" id="p30_t68" reading_order_no="67" segment_no="9" tag_type="formula">+ nδσ 2</text>
<text top="376" left="383" width="17" height="9" font="font17" id="p30_t69" reading_order_no="68" segment_no="9" tag_type="formula">mK</text>
<text top="391" left="108" width="72" height="9" font="font3" id="p30_t70" reading_order_no="69" segment_no="10" tag_type="text">meaning that after</text>
<text top="408" left="231" width="31" height="10" font="font17" id="p30_t71" reading_order_no="70" segment_no="11" tag_type="formula">K = O</text>
<text top="402" left="272" width="19" height="10" font="font17" id="p30_t72" reading_order_no="71" segment_no="11" tag_type="formula">L ∆ 0</text>
<text top="415" left="277" width="9" height="10" font="font17" id="p30_t73" reading_order_no="72" segment_no="11" tag_type="formula">ε 2</text>
<text top="400" left="295" width="41" height="18" font="font18" id="p30_t74" reading_order_no="73" segment_no="11" tag_type="formula">+ L ∆ 0 σ 2</text>
<text top="415" left="314" width="14" height="10" font="font17" id="p30_t75" reading_order_no="74" segment_no="11" tag_type="formula">nε 4</text>
<text top="400" left="340" width="32" height="18" font="font18" id="p30_t76" reading_order_no="75" segment_no="11" tag_type="formula">+ nδσ 2</text>
<text top="415" left="353" width="17" height="10" font="font17" id="p30_t77" reading_order_no="76" segment_no="11" tag_type="formula">mε 2</text>
<text top="430" left="108" width="210" height="12" font="font3" id="p30_t78" reading_order_no="77" segment_no="12" tag_type="text">iterations BTARD-SGD guarantees E k∇ f ( x K ) k 2</text>
<text top="430" left="325" width="22" height="11" font="font19" id="p30_t79" reading_order_no="78" segment_no="12" tag_type="text">≤ ε 2 .</text>
<text top="456" left="108" width="396" height="9" font="font3" id="p30_t80" reading_order_no="79" segment_no="13" tag_type="text">In the main part of the paper, we notice that the rate of BTARD-SGD in the presence of bad workers</text>
<text top="465" left="108" width="396" height="11" font="font3" id="p30_t81" reading_order_no="80" segment_no="13" tag_type="text">is asymptotically the same as for SGD without Byzantine peers when ε is sufficiently small 8 . This</text>
<text top="477" left="108" width="396" height="9" font="font3" id="p30_t82" reading_order_no="81" segment_no="13" tag_type="text">phenomenon has a clear intuition. When the target accuracy ε is small, the stepsize γ is also needed</text>
<text top="488" left="108" width="396" height="9" font="font3" id="p30_t83" reading_order_no="82" segment_no="13" tag_type="text">to be small enough. However, as we show in Lemmas F.3 and F.4 , Byzantine workers can produce</text>
<text top="499" left="108" width="396" height="9" font="font3" id="p30_t84" reading_order_no="83" segment_no="13" tag_type="text">only a bounded shift independent of the stepsize. Moreover, they can violate the protocol at only</text>
<text top="509" left="108" width="396" height="10" font="font19" id="p30_t85" reading_order_no="84" segment_no="13" tag_type="text">∼ n / m iterations on average. Therefore, the overall impact of Byzantine workers on the convergence</text>
<text top="521" left="108" width="236" height="9" font="font3" id="p30_t86" reading_order_no="85" segment_no="13" tag_type="text">of BTARD-SGD decreases when the stepsize γ decreases.</text>
<text top="538" left="108" width="358" height="11" font="font3" id="p30_t87" reading_order_no="86" segment_no="14" tag_type="text">Next, we derive the result without assuming that b b k is known to all peers at each iteration.</text>
<text top="553" left="108" width="396" height="12" font="font1" id="p30_t88" reading_order_no="87" segment_no="15" tag_type="text">Theorem F.2. Let As. 3.2 , ( Option II ) from As. 3.1 hold, Q = R d , and f be L -smooth (see Def. F.1 )</text>
<text top="565" left="108" width="396" height="10" font="font13" id="p30_t89" reading_order_no="88" segment_no="15" tag_type="text">and uniformly lower bounded by f ∗ . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and</text>
<text top="576" left="108" width="334" height="10" font="font17" id="p30_t90" reading_order_no="89" segment_no="15" tag_type="text">δ = 0 is used to compute clipping parameter τ l for CenteredClip . Next, assume that</text>
<text top="604" left="193" width="35" height="9" font="font17" id="p30_t91" reading_order_no="90" segment_no="16" tag_type="formula">γ = min</text>
<text top="593" left="230" width="18" height="13" font="font29" id="p30_t92" reading_order_no="91" segment_no="16" tag_type="formula">( 1</text>
<text top="604" left="239" width="16" height="15" font="font18" id="p30_t93" reading_order_no="92" segment_no="16" tag_type="formula">4 L ,</text>
<text top="594" left="257" width="34" height="12" font="font29" id="p30_t94" reading_order_no="93" segment_no="16" tag_type="formula">r ∆ 0 n</text>
<text top="610" left="268" width="25" height="9" font="font17" id="p30_t95" reading_order_no="94" segment_no="16" tag_type="formula">Lσ 2 K</text>
<text top="593" left="296" width="8" height="4" font="font29" id="p30_t96" reading_order_no="95" segment_no="16" tag_type="formula">)</text>
<text top="604" left="305" width="3" height="9" font="font17" id="p30_t97" reading_order_no="96" segment_no="16" tag_type="formula">,</text>
<text top="597" left="320" width="57" height="17" font="font18" id="p30_t98" reading_order_no="97" segment_no="16" tag_type="formula">∆ k max = (1 +</text>
<text top="588" left="379" width="8" height="9" font="font19" id="p30_t99" reading_order_no="98" segment_no="16" tag_type="formula">√</text>
<text top="597" left="387" width="9" height="9" font="font18" id="p30_t100" reading_order_no="99" segment_no="16" tag_type="formula">3)</text>
<text top="588" left="396" width="8" height="9" font="font19" id="p30_t101" reading_order_no="100" segment_no="16" tag_type="formula">√</text>
<text top="597" left="404" width="11" height="9" font="font18" id="p30_t102" reading_order_no="101" segment_no="16" tag_type="formula">2 σ</text>
<text top="603" left="366" width="8" height="9" font="font19" id="p30_t103" reading_order_no="102" segment_no="16" tag_type="formula">√</text>
<text top="610" left="375" width="32" height="10" font="font17" id="p30_t104" reading_order_no="103" segment_no="16" tag_type="formula">n k − m</text>
<text top="604" left="416" width="3" height="9" font="font17" id="p30_t105" reading_order_no="104" segment_no="16" tag_type="formula">,</text>
<text top="604" left="487" width="17" height="9" font="font3" id="p30_t106" reading_order_no="105" segment_no="16" tag_type="text">(23)</text>
<text top="631" left="108" width="397" height="12" font="font13" id="p30_t107" reading_order_no="106" segment_no="17" tag_type="text">where ∆ 0 = f ( x 0 ) − f ∗ and ∆ k max is the parameter for verification 3 at iteration k of BTARD-SGD .</text>
<text top="643" left="107" width="316" height="12" font="font13" id="p30_t108" reading_order_no="107" segment_no="17" tag_type="text">Then, we have E [ k∇ f ( x K ) k 2 ] ≤ ε after K iterations of BTARD-SGD , where</text>
<text top="669" left="232" width="30" height="10" font="font17" id="p30_t109" reading_order_no="108" segment_no="18" tag_type="formula">K = O</text>
<text top="663" left="272" width="19" height="10" font="font17" id="p30_t110" reading_order_no="109" segment_no="18" tag_type="formula">L ∆ 0</text>
<text top="676" left="278" width="8" height="10" font="font17" id="p30_t111" reading_order_no="110" segment_no="18" tag_type="formula">ε 2</text>
<text top="662" left="295" width="41" height="17" font="font18" id="p30_t112" reading_order_no="111" segment_no="18" tag_type="formula">+ L ∆ 0 σ 2</text>
<text top="676" left="314" width="15" height="10" font="font17" id="p30_t113" reading_order_no="112" segment_no="18" tag_type="formula">nε 4</text>
<text top="662" left="340" width="31" height="17" font="font18" id="p30_t114" reading_order_no="113" segment_no="18" tag_type="formula">+ nbσ 2</text>
<text top="676" left="353" width="17" height="10" font="font17" id="p30_t115" reading_order_no="114" segment_no="18" tag_type="formula">mε 2</text>
<text top="670" left="487" width="17" height="9" font="font3" id="p30_t116" reading_order_no="115" segment_no="18" tag_type="text">(24)</text>
<text top="694" left="108" width="259" height="11" font="font13" id="p30_t117" reading_order_no="116" segment_no="19" tag_type="text">and x K is picked uniformly at random from { x 0 , x 1 , . . . , x K − 1 } .</text>
<text top="712" left="121" width="209" height="10" font="font9" id="p30_t118" reading_order_no="117" segment_no="20" tag_type="footnote">8 This is true for convex and strongly convex cases as well.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p30_t119" reading_order_no="118" segment_no="21" tag_type="text">30</text>
</page>
<page number="31" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="396" height="9" font="font13" id="p31_t1" reading_order_no="0" segment_no="0" tag_type="text">Proof. The proof is almost identical to the proof of Theorem F.1 . Following the same steps and using</text>
<text top="86" left="108" width="396" height="9" font="font3" id="p31_t2" reading_order_no="1" segment_no="0" tag_type="text">( 18 ) and ( 19 ) instead of ( 16 ) and ( 17 ) respectively we obtain the same sequence of inequalities up to</text>
<text top="99" left="108" width="301" height="10" font="font3" id="p31_t3" reading_order_no="2" segment_no="0" tag_type="text">the following change: instead of b δ k we should use 1 k,v . Therefore, we have<a href="deeplearning_paper1.html#29">F.1</a></text>
<text top="121" left="137" width="5" height="9" font="font18" id="p31_t4" reading_order_no="3" segment_no="1" tag_type="formula">1<a href="deeplearning_paper1.html#29">. </a>Following the same steps and using</text>
<text top="135" left="135" width="8" height="9" font="font17" id="p31_t5" reading_order_no="4" segment_no="1" tag_type="formula">K<a href="deeplearning_paper1.html#28">(</a></text>
<text top="117" left="147" width="18" height="7" font="font28" id="p31_t6" reading_order_no="5" segment_no="1" tag_type="formula">K − 1<a href="deeplearning_paper1.html#28">18</a></text>
<text top="125" left="149" width="14" height="4" font="font29" id="p31_t7" reading_order_no="6" segment_no="1" tag_type="formula">X<a href="deeplearning_paper1.html#28">) </a>and <a href="deeplearning_paper1.html#28">(</a></text>
<text top="142" left="149" width="14" height="6" font="font28" id="p31_t8" reading_order_no="7" segment_no="1" tag_type="formula">k =0<a href="deeplearning_paper1.html#28">19</a></text>
<text top="126" left="166" width="59" height="12" font="font34" id="p31_t9" reading_order_no="8" segment_no="1" tag_type="formula">E k∇ f ( x k ) k 2<a href="deeplearning_paper1.html#28">) </a>instead of <a href="deeplearning_paper1.html#27">(</a></text>
<text top="128" left="240" width="8" height="9" font="font19" id="p31_t10" reading_order_no="9" segment_no="1" tag_type="formula">≤<a href="deeplearning_paper1.html#27">16</a></text>
<text top="120" left="259" width="58" height="12" font="font18" id="p31_t11" reading_order_no="10" segment_no="1" tag_type="formula">4( f ( x 0 ) − f ∗ )<a href="deeplearning_paper1.html#27">) </a>and <a href="deeplearning_paper1.html#27">(</a></text>
<text top="135" left="280" width="14" height="9" font="font17" id="p31_t12" reading_order_no="11" segment_no="1" tag_type="formula">γK<a href="deeplearning_paper1.html#27">17</a></text>
<text top="120" left="320" width="34" height="17" font="font18" id="p31_t13" reading_order_no="12" segment_no="1" tag_type="formula">+ 8 Cσ 2<a href="deeplearning_paper1.html#27">) </a>respectively we obtain the same sequence of inequalities up to</text>
<text top="135" left="339" width="8" height="9" font="font17" id="p31_t14" reading_order_no="13" segment_no="1" tag_type="formula">K</text>
<text top="130" left="356" width="7" height="8" font="font34" id="p31_t15" reading_order_no="14" segment_no="1" tag_type="formula">E</text>
<text top="117" left="364" width="23" height="7" font="font29" id="p31_t16" reading_order_no="15" segment_no="1" tag_type="formula">" K − 1</text>
<text top="125" left="372" width="14" height="4" font="font29" id="p31_t17" reading_order_no="16" segment_no="1" tag_type="formula">X</text>
<text top="142" left="372" width="14" height="6" font="font28" id="p31_t18" reading_order_no="17" segment_no="1" tag_type="formula">k =0</text>
<text top="129" left="389" width="17" height="9" font="font56" id="p31_t19" reading_order_no="18" segment_no="1" tag_type="formula">1 k,v</text>
<text top="118" left="407" width="6" height="4" font="font29" id="p31_t20" reading_order_no="19" segment_no="1" tag_type="formula">#</text>
<text top="128" left="415" width="8" height="9" font="font18" id="p31_t21" reading_order_no="20" segment_no="1" tag_type="formula">+</text>
<text top="120" left="436" width="28" height="10" font="font18" id="p31_t22" reading_order_no="21" segment_no="1" tag_type="formula">4 Lγσ 2</text>
<text top="128" left="426" width="52" height="16" font="font17" id="p31_t23" reading_order_no="22" segment_no="1" tag_type="formula">n − 2 b − m .</text>
<text top="156" left="108" width="396" height="9" font="font3" id="p31_t24" reading_order_no="23" segment_no="2" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="167" left="108" width="273" height="10" font="font17" id="p31_t25" reading_order_no="24" segment_no="2" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="184" left="224" width="57" height="17" font="font17" id="p31_t26" reading_order_no="25" segment_no="3" tag_type="formula">p k ≥ m · |G k |</text>
<text top="198" left="267" width="10" height="10" font="font17" id="p31_t27" reading_order_no="26" segment_no="3" tag_type="formula">n k</text>
<text top="185" left="284" width="14" height="15" font="font19" id="p31_t28" reading_order_no="27" segment_no="3" tag_type="formula">· 1</text>
<text top="198" left="290" width="10" height="10" font="font17" id="p31_t29" reading_order_no="28" segment_no="3" tag_type="formula">n k</text>
<text top="184" left="305" width="55" height="17" font="font18" id="p31_t30" reading_order_no="29" segment_no="3" tag_type="formula">= m (1 − δ k )</text>
<text top="198" left="333" width="10" height="10" font="font17" id="p31_t31" reading_order_no="30" segment_no="3" tag_type="formula">n k</text>
<text top="185" left="364" width="20" height="15" font="font19" id="p31_t32" reading_order_no="31" segment_no="3" tag_type="formula">≥ m</text>
<text top="192" left="377" width="11" height="15" font="font17" id="p31_t33" reading_order_no="32" segment_no="3" tag_type="formula">n .</text>
<text top="215" left="108" width="398" height="10" font="font3" id="p31_t34" reading_order_no="33" segment_no="4" tag_type="text">That is, each individual Byzantine worker can violate the protocol no more than 1 / p times on average.</text>
<text top="226" left="108" width="396" height="12" font="font3" id="p31_t35" reading_order_no="34" segment_no="4" tag_type="text">However, even one Byzantine peer can create a shift of the order ∆ k max at each part of the resulting</text>
<text top="238" left="108" width="396" height="9" font="font3" id="p31_t36" reading_order_no="35" segment_no="4" tag_type="text">vector. Therefore, all Byzantine peers can violate the protocol no more than b / p times on average</text>
<text top="249" left="108" width="53" height="9" font="font3" id="p31_t37" reading_order_no="36" segment_no="4" tag_type="text">implying that</text>
<text top="271" left="162" width="5" height="9" font="font18" id="p31_t38" reading_order_no="37" segment_no="5" tag_type="formula">1</text>
<text top="285" left="160" width="8" height="9" font="font17" id="p31_t39" reading_order_no="38" segment_no="5" tag_type="formula">K</text>
<text top="267" left="172" width="17" height="7" font="font28" id="p31_t40" reading_order_no="39" segment_no="5" tag_type="formula">K − 1</text>
<text top="275" left="173" width="14" height="4" font="font29" id="p31_t41" reading_order_no="40" segment_no="5" tag_type="formula">X</text>
<text top="292" left="173" width="14" height="6" font="font28" id="p31_t42" reading_order_no="41" segment_no="5" tag_type="formula">k =0</text>
<text top="276" left="191" width="59" height="12" font="font34" id="p31_t43" reading_order_no="42" segment_no="5" tag_type="formula">E k∇ f ( x k ) k 2</text>
<text top="277" left="264" width="8" height="9" font="font19" id="p31_t44" reading_order_no="43" segment_no="5" tag_type="formula">≤</text>
<text top="269" left="283" width="58" height="12" font="font18" id="p31_t45" reading_order_no="44" segment_no="5" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="285" left="305" width="14" height="9" font="font17" id="p31_t46" reading_order_no="45" segment_no="5" tag_type="formula">γK</text>
<text top="269" left="345" width="44" height="18" font="font18" id="p31_t47" reading_order_no="46" segment_no="5" tag_type="formula">+ 8 Cnbσ 2</text>
<text top="285" left="364" width="18" height="9" font="font17" id="p31_t48" reading_order_no="47" segment_no="5" tag_type="formula">Km</text>
<text top="278" left="393" width="8" height="9" font="font18" id="p31_t49" reading_order_no="48" segment_no="5" tag_type="formula">+</text>
<text top="269" left="414" width="28" height="11" font="font18" id="p31_t50" reading_order_no="49" segment_no="5" tag_type="formula">4 Lγσ 2</text>
<text top="284" left="404" width="49" height="10" font="font17" id="p31_t51" reading_order_no="50" segment_no="5" tag_type="formula">n − 2 b − m</text>
<text top="309" left="264" width="8" height="9" font="font19" id="p31_t52" reading_order_no="51" segment_no="5" tag_type="formula">≤</text>
<text top="301" left="283" width="58" height="12" font="font18" id="p31_t53" reading_order_no="52" segment_no="5" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="316" left="305" width="14" height="9" font="font17" id="p31_t54" reading_order_no="53" segment_no="5" tag_type="formula">γK</text>
<text top="301" left="345" width="44" height="18" font="font18" id="p31_t55" reading_order_no="54" segment_no="5" tag_type="formula">+ 8 Cnbσ 2</text>
<text top="316" left="364" width="18" height="9" font="font17" id="p31_t56" reading_order_no="55" segment_no="5" tag_type="formula">Km</text>
<text top="301" left="393" width="39" height="18" font="font18" id="p31_t57" reading_order_no="56" segment_no="5" tag_type="formula">+ 8 Lγσ 2</text>
<text top="316" left="404" width="28" height="9" font="font17" id="p31_t58" reading_order_no="57" segment_no="5" tag_type="formula">n − 2 b</text>
<text top="337" left="264" width="8" height="9" font="font19" id="p31_t59" reading_order_no="58" segment_no="5" tag_type="formula">≤</text>
<text top="329" left="283" width="58" height="12" font="font18" id="p31_t60" reading_order_no="59" segment_no="5" tag_type="formula">4( f ( x 0 ) − f ∗ )</text>
<text top="344" left="305" width="14" height="9" font="font17" id="p31_t61" reading_order_no="60" segment_no="5" tag_type="formula">γK</text>
<text top="329" left="345" width="44" height="17" font="font18" id="p31_t62" reading_order_no="61" segment_no="5" tag_type="formula">+ 8 Cnbσ 2</text>
<text top="344" left="364" width="18" height="9" font="font17" id="p31_t63" reading_order_no="62" segment_no="5" tag_type="formula">Km</text>
<text top="329" left="393" width="44" height="17" font="font18" id="p31_t64" reading_order_no="63" segment_no="5" tag_type="formula">+ 80 Lγσ 2</text>
<text top="344" left="415" width="11" height="9" font="font18" id="p31_t65" reading_order_no="64" segment_no="5" tag_type="formula">7 n</text>
<text top="337" left="438" width="3" height="9" font="font17" id="p31_t66" reading_order_no="65" segment_no="5" tag_type="formula">.</text>
<text top="361" left="108" width="301" height="11" font="font3" id="p31_t67" reading_order_no="66" segment_no="6" tag_type="text">Since x K is picked uniformly at random from { x 0 , x 1 , . . . , x K − 1 } we have</text>
<text top="386" left="187" width="61" height="12" font="font34" id="p31_t68" reading_order_no="67" segment_no="7" tag_type="formula">E k∇ f ( x K ) k 2</text>
<text top="380" left="256" width="70" height="17" font="font19" id="p31_t69" reading_order_no="68" segment_no="7" tag_type="formula">≤ 4( f ( x 0 ) − f ∗ )</text>
<text top="395" left="289" width="14" height="9" font="font17" id="p31_t70" reading_order_no="69" segment_no="7" tag_type="formula">γK</text>
<text top="380" left="329" width="44" height="17" font="font18" id="p31_t71" reading_order_no="70" segment_no="7" tag_type="formula">+ 8 Cnbσ 2</text>
<text top="395" left="348" width="18" height="9" font="font17" id="p31_t72" reading_order_no="71" segment_no="7" tag_type="formula">Km</text>
<text top="380" left="377" width="44" height="17" font="font18" id="p31_t73" reading_order_no="72" segment_no="7" tag_type="formula">+ 80 Lγσ 2</text>
<text top="395" left="399" width="11" height="9" font="font18" id="p31_t74" reading_order_no="73" segment_no="7" tag_type="formula">7 n</text>
<text top="388" left="423" width="3" height="9" font="font17" id="p31_t75" reading_order_no="74" segment_no="7" tag_type="formula">.</text>
<text top="412" left="108" width="90" height="9" font="font3" id="p31_t76" reading_order_no="75" segment_no="8" tag_type="text">Using the stepsize rule</text>
<text top="433" left="251" width="35" height="9" font="font17" id="p31_t77" reading_order_no="76" segment_no="9" tag_type="formula">γ = min</text>
<text top="422" left="288" width="18" height="13" font="font29" id="p31_t78" reading_order_no="77" segment_no="9" tag_type="formula">( 1</text>
<text top="433" left="297" width="16" height="15" font="font18" id="p31_t79" reading_order_no="78" segment_no="9" tag_type="formula">4 L ,</text>
<text top="423" left="315" width="33" height="12" font="font29" id="p31_t80" reading_order_no="79" segment_no="9" tag_type="formula">r ∆ 0 n</text>
<text top="439" left="326" width="25" height="9" font="font17" id="p31_t81" reading_order_no="80" segment_no="9" tag_type="formula">Lσ 2 K</text>
<text top="422" left="353" width="8" height="4" font="font29" id="p31_t82" reading_order_no="81" segment_no="9" tag_type="formula">)</text>
<text top="457" left="108" width="39" height="9" font="font3" id="p31_t83" reading_order_no="82" segment_no="10" tag_type="text">we derive</text>
<text top="472" left="201" width="62" height="12" font="font34" id="p31_t84" reading_order_no="83" segment_no="11" tag_type="formula">E k∇ f ( x K ) k 2</text>
<text top="473" left="270" width="19" height="10" font="font18" id="p31_t85" reading_order_no="84" segment_no="11" tag_type="formula">= O</text>
<text top="467" left="299" width="19" height="9" font="font17" id="p31_t86" reading_order_no="85" segment_no="11" tag_type="formula">L ∆ 0</text>
<text top="480" left="304" width="8" height="9" font="font17" id="p31_t87" reading_order_no="86" segment_no="11" tag_type="formula">K</text>
<text top="474" left="322" width="8" height="9" font="font18" id="p31_t88" reading_order_no="87" segment_no="11" tag_type="formula">+</text>
<text top="459" left="333" width="8" height="9" font="font19" id="p31_t89" reading_order_no="88" segment_no="11" tag_type="formula">√</text>
<text top="467" left="342" width="25" height="9" font="font17" id="p31_t90" reading_order_no="89" segment_no="11" tag_type="formula">L ∆ 0 σ</text>
<text top="473" left="338" width="8" height="9" font="font19" id="p31_t91" reading_order_no="90" segment_no="11" tag_type="formula">√</text>
<text top="482" left="347" width="14" height="9" font="font17" id="p31_t92" reading_order_no="91" segment_no="11" tag_type="formula">nK</text>
<text top="465" left="371" width="31" height="18" font="font18" id="p31_t93" reading_order_no="92" segment_no="11" tag_type="formula">+ nbσ 2</text>
<text top="480" left="383" width="17" height="9" font="font17" id="p31_t94" reading_order_no="93" segment_no="11" tag_type="formula">mK</text>
<text top="495" left="108" width="72" height="9" font="font3" id="p31_t95" reading_order_no="94" segment_no="12" tag_type="text">meaning that after</text>
<text top="513" left="232" width="30" height="9" font="font17" id="p31_t96" reading_order_no="95" segment_no="13" tag_type="formula">K = O</text>
<text top="507" left="272" width="19" height="9" font="font17" id="p31_t97" reading_order_no="96" segment_no="13" tag_type="formula">L ∆ 0</text>
<text top="519" left="278" width="8" height="10" font="font17" id="p31_t98" reading_order_no="97" segment_no="13" tag_type="formula">ε 2</text>
<text top="505" left="295" width="41" height="17" font="font18" id="p31_t99" reading_order_no="98" segment_no="13" tag_type="formula">+ L ∆ 0 σ 2</text>
<text top="519" left="314" width="15" height="10" font="font17" id="p31_t100" reading_order_no="99" segment_no="13" tag_type="formula">nε 4</text>
<text top="505" left="340" width="31" height="17" font="font18" id="p31_t101" reading_order_no="100" segment_no="13" tag_type="formula">+ nbσ 2</text>
<text top="519" left="353" width="17" height="10" font="font17" id="p31_t102" reading_order_no="101" segment_no="13" tag_type="formula">mε 2</text>
<text top="535" left="108" width="210" height="12" font="font3" id="p31_t103" reading_order_no="102" segment_no="14" tag_type="text">iterations BTARD-SGD guarantees E k∇ f ( x K ) k 2</text>
<text top="535" left="325" width="22" height="11" font="font19" id="p31_t104" reading_order_no="103" segment_no="14" tag_type="text">≤ ε 2 .</text>
<text top="561" left="108" width="396" height="9" font="font3" id="p31_t105" reading_order_no="104" segment_no="15" tag_type="text">As we notice in the main part of the paper, the third term of the obtained complexity result is</text>
<text top="571" left="108" width="396" height="9" font="font3" id="p31_t106" reading_order_no="105" segment_no="15" tag_type="text">significantly worse than in ( 22 ): it is proportional to b instead of δ = b / n . However, ( 24 ) is derived</text>
<text top="582" left="108" width="396" height="9" font="font3" id="p31_t107" reading_order_no="106" segment_no="15" tag_type="text">using ( Option II ) that is less restrictive than ( Option I ), and to derive is derived using ( Option II ) we</text>
<text top="595" left="108" width="396" height="10" font="font3" id="p31_t108" reading_order_no="107" segment_no="15" tag_type="text">do not need to assume that b b k is known for all workers at each iteration. Moreover, as in ( 22 ), the</text>
<text top="606" left="108" width="396" height="9" font="font3" id="p31_t109" reading_order_no="108" segment_no="15" tag_type="text">third term in ( 24 ) has better dependence on ε than the second term implying that for small enough ε</text>
<text top="619" left="108" width="396" height="10" font="font3" id="p31_t110" reading_order_no="109" segment_no="15" tag_type="text">the rate of BTARD-SGD in the presence of bad workers without assuming that b b k is known at each</text>
<text top="629" left="108" width="295" height="10" font="font3" id="p31_t111" reading_order_no="110" segment_no="15" tag_type="text">iteration is asymptotically the same as for SGD without Byzantine peers 9 .</text>
<text top="653" left="108" width="20" height="9" font="font1" id="p31_t112" reading_order_no="111" segment_no="16" tag_type="title">F.2.4</text>
<text top="653" left="138" width="52" height="9" font="font1" id="p31_t113" reading_order_no="112" segment_no="16" tag_type="title">Convex case</text>
<text top="672" left="108" width="396" height="9" font="font3" id="p31_t114" reading_order_no="113" segment_no="17" tag_type="text">In this section, we provide the complete statements and the full proofs of the convergence results for</text>
<text top="683" left="108" width="396" height="9" font="font3" id="p31_t115" reading_order_no="114" segment_no="17" tag_type="text">BTARD-SGD when the objective function f is smooth and convex. We start with the case when the</text>
<text top="694" left="108" width="265" height="9" font="font3" id="p31_t116" reading_order_no="115" segment_no="17" tag_type="text">number of attacking Byzantine workers is known at each iteration.</text>
<text top="712" left="121" width="209" height="10" font="font9" id="p31_t117" reading_order_no="116" segment_no="18" tag_type="footnote">9 This is true for convex and strongly convex cases as well.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p31_t118" reading_order_no="117" segment_no="19" tag_type="text">31</text>
</page>
<page number="32" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="398" height="11" font="font1" id="p32_t1" reading_order_no="0" segment_no="0" tag_type="text">Theorem F.3. Let As. 3.2 , ( Option I ) from As. 3.1 hold, Q = R d , f be L -smooth (see Def. F.1 ),</text>
<text top="84" left="108" width="396" height="11" font="font13" id="p32_t2" reading_order_no="1" segment_no="0" tag_type="text">convex, and x ∗ be some optimum of f . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and</text>
<text top="97" left="108" width="398" height="9" font="font13" id="p32_t3" reading_order_no="2" segment_no="0" tag_type="text">the exact number of attacking Byzantine peers is known to all good peers at each iteration. Next,<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="108" left="108" width="47" height="9" font="font13" id="p32_t4" reading_order_no="3" segment_no="0" tag_type="text">assume that<a href="deeplearning_paper1.html#6">,</a></text>
<text top="129" left="154" width="35" height="9" font="font17" id="p32_t5" reading_order_no="4" segment_no="1" tag_type="formula">γ = min<a href="deeplearning_paper1.html#6">(</a></text>
<text top="119" left="191" width="18" height="12" font="font29" id="p32_t6" reading_order_no="5" segment_no="1" tag_type="formula">( 1<a href="deeplearning_paper1.html#6">Option I</a></text>
<text top="129" left="200" width="16" height="16" font="font18" id="p32_t7" reading_order_no="6" segment_no="1" tag_type="formula">4 L ,<a href="deeplearning_paper1.html#6">)</a></text>
<text top="119" left="218" width="39" height="14" font="font29" id="p32_t8" reading_order_no="7" segment_no="1" tag_type="formula">r 7 nR 2 0</text>
<text top="129" left="229" width="38" height="16" font="font18" id="p32_t9" reading_order_no="8" segment_no="1" tag_type="formula">120 σ 2 K ,<a href="deeplearning_paper1.html#6">3.1</a></text>
<text top="119" left="269" width="10" height="4" font="font29" id="p32_t10" reading_order_no="9" segment_no="1" tag_type="formula">r</text>
<text top="121" left="294" width="25" height="12" font="font17" id="p32_t11" reading_order_no="10" segment_no="1" tag_type="formula">m 2 R 2 0</text>
<text top="135" left="280" width="53" height="10" font="font18" id="p32_t12" reading_order_no="11" segment_no="1" tag_type="formula">1440 Cσ 2 n 2 δ</text>
<text top="119" left="335" width="8" height="4" font="font29" id="p32_t13" reading_order_no="12" segment_no="1" tag_type="formula">)</text>
<text top="129" left="344" width="3" height="9" font="font17" id="p32_t14" reading_order_no="13" segment_no="1" tag_type="formula">,</text>
<text top="127" left="359" width="12" height="11" font="font18" id="p32_t15" reading_order_no="14" segment_no="1" tag_type="formula">∆ k</text>
<text top="122" left="367" width="49" height="18" font="font18" id="p32_t16" reading_order_no="15" segment_no="1" tag_type="formula">max = (1 +</text>
<text top="114" left="418" width="8" height="9" font="font19" id="p32_t17" reading_order_no="16" segment_no="1" tag_type="formula">√</text>
<text top="122" left="426" width="9" height="9" font="font18" id="p32_t18" reading_order_no="17" segment_no="1" tag_type="formula">3)</text>
<text top="114" left="435" width="8" height="9" font="font19" id="p32_t19" reading_order_no="18" segment_no="1" tag_type="formula">√</text>
<text top="122" left="443" width="11" height="9" font="font18" id="p32_t20" reading_order_no="19" segment_no="1" tag_type="formula">2 σ<a href="deeplearning_paper1.html#25">F.1</a></text>
<text top="128" left="406" width="8" height="9" font="font19" id="p32_t21" reading_order_no="20" segment_no="1" tag_type="formula">√<a href="deeplearning_paper1.html#25">),</a></text>
<text top="136" left="414" width="32" height="10" font="font17" id="p32_t22" reading_order_no="21" segment_no="1" tag_type="formula">n k − m</text>
<text top="129" left="456" width="3" height="9" font="font17" id="p32_t23" reading_order_no="22" segment_no="1" tag_type="formula">,</text>
<text top="129" left="487" width="17" height="9" font="font3" id="p32_t24" reading_order_no="23" segment_no="1" tag_type="text">(25)</text>
<text top="152" left="108" width="397" height="12" font="font13" id="p32_t25" reading_order_no="24" segment_no="2" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k max is the parameter for verification 3 at iteration k of BTARD-SGD .</text>
<text top="164" left="107" width="329" height="12" font="font13" id="p32_t26" reading_order_no="25" segment_no="2" tag_type="text">Then, we have E [ f ( x K ) − f ( x ∗ )] ≤ ε after K iterations of BTARD-SGD , where</text>
<text top="189" left="227" width="30" height="10" font="font17" id="p32_t27" reading_order_no="26" segment_no="3" tag_type="formula">K = O</text>
<text top="182" left="268" width="19" height="12" font="font17" id="p32_t28" reading_order_no="27" segment_no="3" tag_type="formula">LR 2 0</text>
<text top="197" left="275" width="5" height="9" font="font17" id="p32_t29" reading_order_no="28" segment_no="3" tag_type="formula">ε</text>
<text top="182" left="291" width="33" height="17" font="font18" id="p32_t30" reading_order_no="29" segment_no="3" tag_type="formula">+ σ 2 R 2 0</text>
<text top="196" left="305" width="15" height="10" font="font17" id="p32_t31" reading_order_no="30" segment_no="3" tag_type="formula">nε 2</text>
<text top="183" left="328" width="17" height="16" font="font18" id="p32_t32" reading_order_no="31" segment_no="3" tag_type="formula">+ n</text>
<text top="174" left="345" width="8" height="9" font="font19" id="p32_t33" reading_order_no="32" segment_no="3" tag_type="formula">√</text>
<text top="183" left="353" width="23" height="10" font="font17" id="p32_t34" reading_order_no="33" segment_no="3" tag_type="formula">δσR 0</text>
<text top="197" left="351" width="13" height="9" font="font17" id="p32_t35" reading_order_no="34" segment_no="3" tag_type="formula">mε</text>
<text top="179" left="377" width="8" height="4" font="font29" id="p32_t36" reading_order_no="35" segment_no="3" tag_type="formula">!</text>
<text top="190" left="487" width="17" height="9" font="font3" id="p32_t37" reading_order_no="36" segment_no="3" tag_type="text">(26)</text>
<text top="214" left="108" width="51" height="11" font="font13" id="p32_t38" reading_order_no="37" segment_no="4" tag_type="formula">and x K = 1</text>
<text top="213" left="153" width="38" height="14" font="font29" id="p32_t39" reading_order_no="38" segment_no="4" tag_type="formula">K P K − 1</text>
<text top="216" left="174" width="20" height="11" font="font13" id="p32_t40" reading_order_no="39" segment_no="4" tag_type="formula">k =0 .</text>
<text top="239" left="108" width="106" height="9" font="font13" id="p32_t41" reading_order_no="40" segment_no="5" tag_type="text">Proof. Lemma F.3 implies</text>
<text top="251" left="113" width="88" height="13" font="font34" id="p32_t42" reading_order_no="41" segment_no="6" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="254" left="218" width="8" height="9" font="font18" id="p32_t43" reading_order_no="42" segment_no="6" tag_type="formula">=</text>
<text top="251" left="237" width="106" height="13" font="font34" id="p32_t44" reading_order_no="43" segment_no="6" tag_type="formula">E k x k − x ∗ − γ b g k k 2 | x k</text>
<text top="270" left="218" width="8" height="9" font="font18" id="p32_t45" reading_order_no="44" segment_no="6" tag_type="formula">=</text>
<text top="268" left="237" width="156" height="13" font="font19" id="p32_t46" reading_order_no="45" segment_no="6" tag_type="formula">k x k − x ∗ k 2 − 2 γ E h x k − x ∗ , b g k i | x k</text>
<text top="268" left="401" width="75" height="13" font="font18" id="p32_t47" reading_order_no="46" segment_no="6" tag_type="formula">+ γ 2 E k b g k k 2 | x k</text>
<text top="286" left="216" width="11" height="15" font="font19" id="p32_t48" reading_order_no="47" segment_no="6" tag_type="formula">( 17 ) ≤</text>
<text top="290" left="237" width="222" height="11" font="font19" id="p32_t49" reading_order_no="48" segment_no="6" tag_type="formula">k x k − x ∗ k 2 − 2 γ h x k − x ∗ , ∇ f ( x k ) i + 2 γ 2 k∇ f ( x k ) k 2</text>
<text top="311" left="247" width="127" height="13" font="font19" id="p32_t50" reading_order_no="49" segment_no="6" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − g k i | x k</text>
<text top="311" left="381" width="63" height="12" font="font18" id="p32_t51" reading_order_no="50" segment_no="6" tag_type="formula">+ 2 γ 2 C b δ k σ 2 +</text>
<text top="305" left="458" width="26" height="11" font="font18" id="p32_t52" reading_order_no="51" segment_no="6" tag_type="formula">2 γ 2 σ 2</text>
<text top="313" left="447" width="53" height="16" font="font17" id="p32_t53" reading_order_no="52" segment_no="6" tag_type="formula">n − 2 b − m .</text>
<text top="332" left="108" width="279" height="9" font="font3" id="p32_t54" reading_order_no="53" segment_no="7" tag_type="text">Next, we use convexity (see ( 12 ) with µ = 0 ) and L -smoothness of f :</text>
<text top="350" left="108" width="88" height="13" font="font34" id="p32_t55" reading_order_no="54" segment_no="8" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="346" left="211" width="25" height="15" font="font19" id="p32_t56" reading_order_no="55" segment_no="8" tag_type="formula">( 11 ) , ( 12 ) ≤</text>
<text top="350" left="247" width="181" height="11" font="font19" id="p32_t57" reading_order_no="56" segment_no="8" tag_type="formula">k x k − x ∗ k 2 − 2 γ (1 − 2 Lγ ) f ( x k ) − f ( x ∗ )</text>
<text top="374" left="257" width="126" height="13" font="font19" id="p32_t58" reading_order_no="57" segment_no="8" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − g k i | x k</text>
<text top="374" left="390" width="43" height="11" font="font18" id="p32_t59" reading_order_no="58" segment_no="8" tag_type="formula">+ 2 γ 2 Cσ 2</text>
<text top="370" left="445" width="9" height="9" font="font29" id="p32_t60" reading_order_no="59" segment_no="8" tag_type="formula">b b k</text>
<text top="376" left="435" width="43" height="17" font="font17" id="p32_t61" reading_order_no="60" segment_no="8" tag_type="formula">n k − m +</text>
<text top="368" left="493" width="25" height="11" font="font18" id="p32_t62" reading_order_no="61" segment_no="8" tag_type="formula">2 γ 2 σ 2</text>
<text top="376" left="481" width="53" height="16" font="font17" id="p32_t63" reading_order_no="62" segment_no="8" tag_type="formula">n − 2 b − m .</text>
<text top="396" left="108" width="358" height="9" font="font3" id="p32_t64" reading_order_no="63" segment_no="9" tag_type="text">To estimate the inner product in the right-hand side we apply Cauchy-Schwarz inequality:</text>
<text top="408" left="118" width="126" height="13" font="font19" id="p32_t65" reading_order_no="64" segment_no="10" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − g k i | x k</text>
<text top="410" left="261" width="8" height="9" font="font19" id="p32_t66" reading_order_no="65" segment_no="10" tag_type="formula">≤</text>
<text top="408" left="281" width="126" height="13" font="font18" id="p32_t67" reading_order_no="66" segment_no="10" tag_type="formula">2 γ k x k − x ∗ k E k b g k − g k k | x k</text>
<text top="430" left="261" width="8" height="9" font="font19" id="p32_t68" reading_order_no="67" segment_no="10" tag_type="formula">≤</text>
<text top="425" left="281" width="64" height="15" font="font18" id="p32_t69" reading_order_no="68" segment_no="10" tag_type="formula">2 γ k x k − x ∗ k q</text>
<text top="429" left="345" width="77" height="12" font="font34" id="p32_t70" reading_order_no="69" segment_no="10" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="450" left="259" width="12" height="15" font="font19" id="p32_t71" reading_order_no="70" segment_no="10" tag_type="formula">( 16 ) ≤</text>
<text top="456" left="281" width="10" height="9" font="font18" id="p32_t72" reading_order_no="71" segment_no="10" tag_type="formula">2 γ</text>
<text top="447" left="292" width="8" height="9" font="font19" id="p32_t73" reading_order_no="72" segment_no="10" tag_type="formula">√</text>
<text top="454" left="300" width="57" height="11" font="font17" id="p32_t74" reading_order_no="73" segment_no="10" tag_type="formula">Cσ k x k − x ∗ k</text>
<text top="449" left="357" width="10" height="4" font="font29" id="p32_t75" reading_order_no="74" segment_no="10" tag_type="formula">q</text>
<text top="449" left="367" width="37" height="17" font="font29" id="p32_t76" reading_order_no="75" segment_no="10" tag_type="formula">b δ k ≤ 2 γ</text>
<text top="440" left="405" width="8" height="9" font="font19" id="p32_t77" reading_order_no="76" segment_no="10" tag_type="formula">√</text>
<text top="449" left="413" width="14" height="9" font="font17" id="p32_t78" reading_order_no="77" segment_no="10" tag_type="formula">Cσ</text>
<text top="455" left="391" width="8" height="9" font="font19" id="p32_t79" reading_order_no="78" segment_no="10" tag_type="formula">√</text>
<text top="454" left="399" width="76" height="19" font="font17" id="p32_t80" reading_order_no="79" segment_no="10" tag_type="formula">n k − m k x k − x ∗ k</text>
<text top="449" left="475" width="10" height="4" font="font29" id="p32_t81" reading_order_no="80" segment_no="10" tag_type="formula">q</text>
<text top="456" left="484" width="9" height="10" font="font29" id="p32_t82" reading_order_no="81" segment_no="10" tag_type="formula">b b k</text>
<text top="485" left="261" width="8" height="9" font="font19" id="p32_t83" reading_order_no="82" segment_no="10" tag_type="formula">≤</text>
<text top="479" left="294" width="10" height="9" font="font18" id="p32_t84" reading_order_no="83" segment_no="10" tag_type="formula">2 γ</text>
<text top="470" left="305" width="8" height="9" font="font19" id="p32_t85" reading_order_no="84" segment_no="10" tag_type="formula">√</text>
<text top="479" left="313" width="14" height="9" font="font17" id="p32_t86" reading_order_no="85" segment_no="10" tag_type="formula">Cσ</text>
<text top="484" left="282" width="8" height="9" font="font19" id="p32_t87" reading_order_no="86" segment_no="10" tag_type="formula">√</text>
<text top="493" left="290" width="49" height="9" font="font17" id="p32_t88" reading_order_no="87" segment_no="10" tag_type="formula">n − 2 b − m</text>
<text top="483" left="340" width="43" height="11" font="font19" id="p32_t89" reading_order_no="88" segment_no="10" tag_type="formula">k x k − x ∗ k</text>
<text top="478" left="383" width="10" height="4" font="font29" id="p32_t90" reading_order_no="89" segment_no="10" tag_type="formula">q</text>
<text top="485" left="392" width="13" height="10" font="font29" id="p32_t91" reading_order_no="90" segment_no="10" tag_type="formula">b b k .</text>
<text top="505" left="108" width="398" height="10" font="font3" id="p32_t92" reading_order_no="91" segment_no="11" tag_type="text">Putting all together and using b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , γ ≤ 1 / 4 L , n k − m ≥ n − 2 b − m ,</text>
<text top="517" left="108" width="39" height="9" font="font3" id="p32_t93" reading_order_no="92" segment_no="11" tag_type="text">we obtain</text>
<text top="528" left="130" width="88" height="13" font="font34" id="p32_t94" reading_order_no="93" segment_no="12" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="530" left="233" width="8" height="9" font="font19" id="p32_t95" reading_order_no="94" segment_no="12" tag_type="formula">≤</text>
<text top="528" left="251" width="132" height="12" font="font19" id="p32_t96" reading_order_no="95" segment_no="12" tag_type="formula">k x k − x ∗ k 2 − γ f ( x k ) − f ( x ∗ )</text>
<text top="547" left="261" width="19" height="16" font="font18" id="p32_t97" reading_order_no="96" segment_no="12" tag_type="formula">+ 4 γ</text>
<text top="538" left="281" width="8" height="9" font="font19" id="p32_t98" reading_order_no="97" segment_no="12" tag_type="formula">√</text>
<text top="547" left="282" width="26" height="15" font="font18" id="p32_t99" reading_order_no="98" segment_no="12" tag_type="formula">5 Cσ √</text>
<text top="561" left="290" width="6" height="9" font="font17" id="p32_t100" reading_order_no="99" segment_no="12" tag_type="formula">n</text>
<text top="552" left="309" width="43" height="11" font="font19" id="p32_t101" reading_order_no="100" segment_no="12" tag_type="formula">k x k − x ∗ k</text>
<text top="547" left="352" width="10" height="4" font="font29" id="p32_t102" reading_order_no="101" segment_no="12" tag_type="formula">q</text>
<text top="546" left="362" width="61" height="18" font="font29" id="p32_t103" reading_order_no="102" segment_no="12" tag_type="formula">b b k + 40 γ 2 Cσ 2</text>
<text top="561" left="398" width="11" height="9" font="font18" id="p32_t104" reading_order_no="103" segment_no="12" tag_type="formula">7 n</text>
<text top="546" left="424" width="53" height="18" font="font29" id="p32_t105" reading_order_no="104" segment_no="12" tag_type="formula">b b k + 40 γ 2 σ 2</text>
<text top="561" left="457" width="11" height="9" font="font18" id="p32_t106" reading_order_no="105" segment_no="12" tag_type="formula">7 n</text>
<text top="554" left="479" width="3" height="9" font="font17" id="p32_t107" reading_order_no="106" segment_no="12" tag_type="formula">.</text>
<text top="574" left="108" width="396" height="9" font="font3" id="p32_t108" reading_order_no="107" segment_no="13" tag_type="text">Taking the full expectation from the both sides of the above inequality and summing up the results</text>
<text top="584" left="108" width="137" height="10" font="font3" id="p32_t109" reading_order_no="108" segment_no="13" tag_type="text">for k = 0 , 1 , . . . , K − 1 we derive</text>
<text top="602" left="111" width="5" height="9" font="font17" id="p32_t110" reading_order_no="109" segment_no="14" tag_type="formula">γ</text>
<text top="616" left="109" width="8" height="9" font="font17" id="p32_t111" reading_order_no="110" segment_no="14" tag_type="formula">K</text>
<text top="598" left="121" width="18" height="7" font="font28" id="p32_t112" reading_order_no="111" segment_no="14" tag_type="formula">K − 1</text>
<text top="606" left="123" width="14" height="4" font="font29" id="p32_t113" reading_order_no="112" segment_no="14" tag_type="formula">X</text>
<text top="623" left="123" width="14" height="6" font="font28" id="p32_t114" reading_order_no="113" segment_no="14" tag_type="formula">k =0</text>
<text top="606" left="140" width="73" height="13" font="font34" id="p32_t115" reading_order_no="114" segment_no="14" tag_type="formula">E [ f ( x k ) − f ( x ∗ )]</text>
<text top="608" left="223" width="8" height="9" font="font19" id="p32_t116" reading_order_no="115" segment_no="14" tag_type="formula">≤</text>
<text top="602" left="244" width="5" height="9" font="font18" id="p32_t117" reading_order_no="116" segment_no="14" tag_type="formula">1</text>
<text top="616" left="242" width="8" height="9" font="font17" id="p32_t118" reading_order_no="117" segment_no="14" tag_type="formula">K</text>
<text top="598" left="254" width="17" height="7" font="font28" id="p32_t119" reading_order_no="118" segment_no="14" tag_type="formula">K − 1</text>
<text top="606" left="255" width="14" height="4" font="font29" id="p32_t120" reading_order_no="119" segment_no="14" tag_type="formula">X</text>
<text top="623" left="255" width="15" height="6" font="font28" id="p32_t121" reading_order_no="120" segment_no="14" tag_type="formula">k =0</text>
<text top="606" left="277" width="60" height="13" font="font34" id="p32_t122" reading_order_no="121" segment_no="14" tag_type="formula">E k x k − x ∗ k 2</text>
<text top="606" left="344" width="79" height="13" font="font19" id="p32_t123" reading_order_no="122" segment_no="14" tag_type="formula">− E k x k +1 − x ∗ k 2</text>
<text top="601" left="435" width="41" height="17" font="font18" id="p32_t124" reading_order_no="123" segment_no="14" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="616" left="456" width="11" height="9" font="font18" id="p32_t125" reading_order_no="124" segment_no="14" tag_type="formula">7 n</text>
<text top="637" left="251" width="18" height="16" font="font18" id="p32_t126" reading_order_no="125" segment_no="14" tag_type="formula">+ 4 γ</text>
<text top="628" left="270" width="8" height="9" font="font19" id="p32_t127" reading_order_no="126" segment_no="14" tag_type="formula">√</text>
<text top="637" left="278" width="19" height="9" font="font18" id="p32_t128" reading_order_no="127" segment_no="14" tag_type="formula">5 Cσ</text>
<text top="643" left="267" width="8" height="9" font="font19" id="p32_t129" reading_order_no="128" segment_no="14" tag_type="formula">√</text>
<text top="651" left="275" width="14" height="9" font="font17" id="p32_t130" reading_order_no="129" segment_no="14" tag_type="formula">nK</text>
<text top="633" left="300" width="18" height="7" font="font28" id="p32_t131" reading_order_no="130" segment_no="14" tag_type="formula">K − 1</text>
<text top="641" left="302" width="14" height="4" font="font29" id="p32_t132" reading_order_no="131" segment_no="14" tag_type="formula">X</text>
<text top="658" left="302" width="14" height="6" font="font28" id="p32_t133" reading_order_no="132" segment_no="14" tag_type="formula">k =0</text>
<text top="642" left="319" width="57" height="12" font="font34" id="p32_t134" reading_order_no="133" segment_no="14" tag_type="formula">E k x k − x ∗ k</text>
<text top="637" left="376" width="10" height="4" font="font29" id="p32_t135" reading_order_no="134" segment_no="14" tag_type="formula">q</text>
<text top="644" left="385" width="9" height="10" font="font29" id="p32_t136" reading_order_no="135" segment_no="14" tag_type="formula">b b k</text>
<text top="636" left="402" width="50" height="17" font="font18" id="p32_t137" reading_order_no="136" segment_no="14" tag_type="formula">+ 40 γ 2 Cσ 2</text>
<text top="651" left="423" width="19" height="9" font="font18" id="p32_t138" reading_order_no="137" segment_no="14" tag_type="formula">7 nK</text>
<text top="633" left="455" width="17" height="7" font="font28" id="p32_t139" reading_order_no="138" segment_no="14" tag_type="formula">K − 1</text>
<text top="641" left="456" width="14" height="4" font="font29" id="p32_t140" reading_order_no="139" segment_no="14" tag_type="formula">X</text>
<text top="658" left="456" width="15" height="6" font="font28" id="p32_t141" reading_order_no="140" segment_no="14" tag_type="formula">k =0</text>
<text top="644" left="474" width="22" height="10" font="font34" id="p32_t142" reading_order_no="141" segment_no="14" tag_type="formula">E [ b b k ]</text>
<text top="675" left="223" width="8" height="9" font="font19" id="p32_t143" reading_order_no="142" segment_no="14" tag_type="formula">≤</text>
<text top="667" left="242" width="122" height="13" font="font19" id="p32_t144" reading_order_no="143" segment_no="14" tag_type="formula">k x 0 − x ∗ k 2 − E [ k x K − x ∗ k 2 ]</text>
<text top="683" left="298" width="8" height="9" font="font17" id="p32_t145" reading_order_no="144" segment_no="14" tag_type="formula">K</text>
<text top="668" left="367" width="41" height="17" font="font18" id="p32_t146" reading_order_no="145" segment_no="14" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="683" left="388" width="11" height="9" font="font18" id="p32_t147" reading_order_no="146" segment_no="14" tag_type="formula">7 n</text>
<text top="698" left="251" width="18" height="16" font="font18" id="p32_t148" reading_order_no="147" segment_no="14" tag_type="formula">+ 4 γ</text>
<text top="689" left="270" width="8" height="9" font="font19" id="p32_t149" reading_order_no="148" segment_no="14" tag_type="formula">√</text>
<text top="698" left="278" width="19" height="9" font="font18" id="p32_t150" reading_order_no="149" segment_no="14" tag_type="formula">5 Cσ</text>
<text top="704" left="267" width="8" height="9" font="font19" id="p32_t151" reading_order_no="150" segment_no="14" tag_type="formula">√</text>
<text top="712" left="275" width="14" height="9" font="font17" id="p32_t152" reading_order_no="151" segment_no="14" tag_type="formula">nK</text>
<text top="694" left="300" width="18" height="7" font="font28" id="p32_t153" reading_order_no="152" segment_no="14" tag_type="formula">K − 1</text>
<text top="702" left="302" width="14" height="4" font="font29" id="p32_t154" reading_order_no="153" segment_no="14" tag_type="formula">X</text>
<text top="719" left="302" width="14" height="6" font="font28" id="p32_t155" reading_order_no="154" segment_no="14" tag_type="formula">k =0</text>
<text top="698" left="319" width="10" height="4" font="font29" id="p32_t156" reading_order_no="155" segment_no="14" tag_type="formula">q</text>
<text top="697" left="329" width="136" height="18" font="font34" id="p32_t157" reading_order_no="156" segment_no="14" tag_type="formula">E [ k x k − x ∗ k 2 ] E [ b b k ] + 40 γ 2 Cσ 2</text>
<text top="712" left="436" width="19" height="9" font="font18" id="p32_t158" reading_order_no="157" segment_no="14" tag_type="formula">7 nK</text>
<text top="694" left="468" width="18" height="7" font="font28" id="p32_t159" reading_order_no="158" segment_no="14" tag_type="formula">K − 1</text>
<text top="702" left="470" width="14" height="4" font="font29" id="p32_t160" reading_order_no="159" segment_no="14" tag_type="formula">X</text>
<text top="719" left="470" width="14" height="6" font="font28" id="p32_t161" reading_order_no="160" segment_no="14" tag_type="formula">k =0</text>
<text top="705" left="487" width="25" height="10" font="font34" id="p32_t162" reading_order_no="161" segment_no="14" tag_type="formula">E [ b b k ] .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p32_t163" reading_order_no="162" segment_no="15" tag_type="text">32</text>
</page>
<page number="33" position="absolute" top="0" left="0" height="792" width="612">
<text top="73" left="108" width="182" height="11" font="font3" id="p33_t1" reading_order_no="0" segment_no="0" tag_type="text">From Jensen’s inequality we have f ( x K ) ≤ 1</text>
<text top="81" left="284" width="7" height="6" font="font28" id="p33_t2" reading_order_no="1" segment_no="0" tag_type="text">K</text>
<text top="72" left="294" width="28" height="7" font="font29" id="p33_t3" reading_order_no="2" segment_no="0" tag_type="text">P K − 1</text>
<text top="73" left="305" width="108" height="13" font="font17" id="p33_t4" reading_order_no="3" segment_no="0" tag_type="text">k =0 f ( x k ) , where x K = 1</text>
<text top="81" left="408" width="7" height="6" font="font28" id="p33_t5" reading_order_no="4" segment_no="0" tag_type="text">K</text>
<text top="72" left="418" width="28" height="7" font="font29" id="p33_t6" reading_order_no="5" segment_no="0" tag_type="text">P K − 1</text>
<text top="74" left="428" width="76" height="12" font="font17" id="p33_t7" reading_order_no="6" segment_no="0" tag_type="text">k =0 x k . Using this</text>
<text top="86" left="108" width="270" height="12" font="font3" id="p33_t8" reading_order_no="7" segment_no="0" tag_type="text">and new notation R k = k x k − x ∗ k , k &gt; 0 , R 0 ≥ k x 0 − x ∗ k we get</text>
<text top="110" left="124" width="100" height="13" font="font18" id="p33_t9" reading_order_no="8" segment_no="1" tag_type="formula">0 ≤ γ E f ( x K ) − f ( x ∗ )</text>
<text top="112" left="237" width="8" height="9" font="font19" id="p33_t10" reading_order_no="9" segment_no="1" tag_type="formula">≤</text>
<text top="105" left="256" width="52" height="12" font="font17" id="p33_t11" reading_order_no="10" segment_no="1" tag_type="formula">R 2 0 − E [ R 2 K ]</text>
<text top="120" left="278" width="8" height="9" font="font17" id="p33_t12" reading_order_no="11" segment_no="1" tag_type="formula">K</text>
<text top="105" left="312" width="41" height="17" font="font18" id="p33_t13" reading_order_no="12" segment_no="1" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="120" left="333" width="11" height="9" font="font18" id="p33_t14" reading_order_no="13" segment_no="1" tag_type="formula">7 n</text>
<text top="135" left="265" width="19" height="16" font="font18" id="p33_t15" reading_order_no="14" segment_no="1" tag_type="formula">+ 4 γ</text>
<text top="126" left="285" width="8" height="9" font="font19" id="p33_t16" reading_order_no="15" segment_no="1" tag_type="formula">√</text>
<text top="135" left="293" width="19" height="9" font="font18" id="p33_t17" reading_order_no="16" segment_no="1" tag_type="formula">5 Cσ</text>
<text top="141" left="281" width="8" height="9" font="font19" id="p33_t18" reading_order_no="17" segment_no="1" tag_type="formula">√</text>
<text top="149" left="290" width="14" height="9" font="font17" id="p33_t19" reading_order_no="18" segment_no="1" tag_type="formula">nK</text>
<text top="131" left="315" width="17" height="7" font="font28" id="p33_t20" reading_order_no="19" segment_no="1" tag_type="formula">K − 1</text>
<text top="139" left="316" width="14" height="4" font="font29" id="p33_t21" reading_order_no="20" segment_no="1" tag_type="formula">X</text>
<text top="156" left="316" width="15" height="6" font="font28" id="p33_t22" reading_order_no="21" segment_no="1" tag_type="formula">k =0</text>
<text top="135" left="334" width="10" height="4" font="font29" id="p33_t23" reading_order_no="22" segment_no="1" tag_type="formula">q</text>
<text top="134" left="344" width="101" height="19" font="font34" id="p33_t24" reading_order_no="23" segment_no="1" tag_type="formula">E [ R 2 k ] E [ b b k ] + 40 γ 2 Cσ 2</text>
<text top="149" left="416" width="19" height="9" font="font18" id="p33_t25" reading_order_no="24" segment_no="1" tag_type="formula">7 nK</text>
<text top="131" left="448" width="17" height="7" font="font28" id="p33_t26" reading_order_no="25" segment_no="1" tag_type="formula">K − 1</text>
<text top="139" left="449" width="14" height="4" font="font29" id="p33_t27" reading_order_no="26" segment_no="1" tag_type="formula">X</text>
<text top="156" left="449" width="15" height="6" font="font28" id="p33_t28" reading_order_no="27" segment_no="1" tag_type="formula">k =0</text>
<text top="142" left="467" width="37" height="10" font="font34" id="p33_t29" reading_order_no="28" segment_no="1" tag_type="formula">E [ b b k ] (27)</text>
<text top="169" left="108" width="165" height="9" font="font3" id="p33_t30" reading_order_no="29" segment_no="2" tag_type="text">implying (after changing the indices) that</text>
<text top="195" left="147" width="21" height="12" font="font34" id="p33_t31" reading_order_no="30" segment_no="3" tag_type="formula">E [ R 2</text>
<text top="195" left="164" width="32" height="13" font="font18" id="p33_t32" reading_order_no="31" segment_no="3" tag_type="formula">k ] ≤ R 2</text>
<text top="189" left="192" width="54" height="19" font="font18" id="p33_t33" reading_order_no="32" segment_no="3" tag_type="formula">0 + 40 γ 2 σ 2 k</text>
<text top="204" left="223" width="11" height="9" font="font18" id="p33_t34" reading_order_no="33" segment_no="3" tag_type="formula">7 n</text>
<text top="190" left="250" width="21" height="16" font="font18" id="p33_t35" reading_order_no="34" segment_no="3" tag_type="formula">+ 4 γ</text>
<text top="181" left="271" width="8" height="9" font="font19" id="p33_t36" reading_order_no="35" segment_no="3" tag_type="formula">√</text>
<text top="190" left="273" width="26" height="15" font="font18" id="p33_t37" reading_order_no="36" segment_no="3" tag_type="formula">5 Cσ √</text>
<text top="204" left="281" width="6" height="9" font="font17" id="p33_t38" reading_order_no="37" segment_no="3" tag_type="formula">n</text>
<text top="186" left="302" width="14" height="7" font="font28" id="p33_t39" reading_order_no="38" segment_no="3" tag_type="formula">k − 1</text>
<text top="194" left="302" width="14" height="4" font="font29" id="p33_t40" reading_order_no="39" segment_no="3" tag_type="formula">X</text>
<text top="211" left="302" width="13" height="6" font="font28" id="p33_t41" reading_order_no="40" segment_no="3" tag_type="formula">l =0</text>
<text top="191" left="318" width="10" height="4" font="font29" id="p33_t42" reading_order_no="41" segment_no="3" tag_type="formula">q</text>
<text top="189" left="328" width="98" height="19" font="font34" id="p33_t43" reading_order_no="42" segment_no="3" tag_type="formula">E [ R 2 l ] E [ b b l ] + 40 γ 2 Cσ 2</text>
<text top="204" left="402" width="11" height="9" font="font18" id="p33_t44" reading_order_no="43" segment_no="3" tag_type="formula">7 n</text>
<text top="186" left="430" width="14" height="7" font="font28" id="p33_t45" reading_order_no="44" segment_no="3" tag_type="formula">k − 1</text>
<text top="194" left="430" width="14" height="4" font="font29" id="p33_t46" reading_order_no="45" segment_no="3" tag_type="formula">X</text>
<text top="211" left="431" width="12" height="6" font="font28" id="p33_t47" reading_order_no="46" segment_no="3" tag_type="formula">l =0</text>
<text top="197" left="446" width="20" height="10" font="font34" id="p33_t48" reading_order_no="47" segment_no="3" tag_type="formula">E [ b b l ]</text>
<text top="197" left="487" width="17" height="9" font="font3" id="p33_t49" reading_order_no="48" segment_no="3" tag_type="text">(28)</text>
<text top="224" left="108" width="324" height="10" font="font3" id="p33_t50" reading_order_no="49" segment_no="4" tag_type="text">holds for all k ≥ 0 . In the remaining part of the proof we derive by induction that</text>
<text top="244" left="150" width="62" height="19" font="font17" id="p33_t51" reading_order_no="50" segment_no="5" tag_type="formula">R 2 0 + 40 γ 2 σ 2 k</text>
<text top="260" left="189" width="10" height="9" font="font18" id="p33_t52" reading_order_no="51" segment_no="5" tag_type="formula">7 n</text>
<text top="246" left="215" width="22" height="16" font="font18" id="p33_t53" reading_order_no="52" segment_no="5" tag_type="formula">+ 4 γ</text>
<text top="237" left="237" width="8" height="9" font="font19" id="p33_t54" reading_order_no="53" segment_no="5" tag_type="formula">√</text>
<text top="246" left="238" width="27" height="15" font="font18" id="p33_t55" reading_order_no="54" segment_no="5" tag_type="formula">5 Cσ √</text>
<text top="260" left="247" width="6" height="9" font="font17" id="p33_t56" reading_order_no="55" segment_no="5" tag_type="formula">n</text>
<text top="242" left="267" width="15" height="7" font="font28" id="p33_t57" reading_order_no="56" segment_no="5" tag_type="formula">k − 1</text>
<text top="250" left="267" width="14" height="4" font="font29" id="p33_t58" reading_order_no="57" segment_no="5" tag_type="formula">X</text>
<text top="267" left="268" width="13" height="6" font="font28" id="p33_t59" reading_order_no="58" segment_no="5" tag_type="formula">l =0</text>
<text top="246" left="284" width="10" height="4" font="font29" id="p33_t60" reading_order_no="59" segment_no="5" tag_type="formula">q</text>
<text top="251" left="294" width="22" height="12" font="font34" id="p33_t61" reading_order_no="60" segment_no="5" tag_type="formula">E [ R 2</text>
<text top="244" left="312" width="80" height="20" font="font18" id="p33_t62" reading_order_no="61" segment_no="5" tag_type="formula">l ] E [ b b l ] + 40 γ 2 Cσ 2</text>
<text top="260" left="368" width="11" height="9" font="font18" id="p33_t63" reading_order_no="62" segment_no="5" tag_type="formula">7 n</text>
<text top="242" left="395" width="15" height="7" font="font28" id="p33_t64" reading_order_no="63" segment_no="5" tag_type="formula">k − 1</text>
<text top="250" left="396" width="14" height="4" font="font29" id="p33_t65" reading_order_no="64" segment_no="5" tag_type="formula">X</text>
<text top="267" left="396" width="13" height="6" font="font28" id="p33_t66" reading_order_no="65" segment_no="5" tag_type="formula">l =0</text>
<text top="251" left="412" width="49" height="12" font="font34" id="p33_t67" reading_order_no="66" segment_no="5" tag_type="formula">E [ b b l ] ≤ 2 R 2 0</text>
<text top="253" left="487" width="17" height="9" font="font3" id="p33_t68" reading_order_no="67" segment_no="5" tag_type="text">(29)</text>
<text top="280" left="108" width="396" height="9" font="font3" id="p33_t69" reading_order_no="68" segment_no="6" tag_type="text">for all k = 0 , . . . , K . For k = 0 this inequality trivially holds. Next, assume that it holds for all</text>
<text top="291" left="108" width="396" height="9" font="font17" id="p33_t70" reading_order_no="69" segment_no="6" tag_type="text">k = 0 , 1 , . . . , T − 1 , T ≤ K − 1 . Let us show that it holds for k = T as well. From ( 28 ) and ( 29 )</text>
<text top="300" left="108" width="73" height="12" font="font3" id="p33_t71" reading_order_no="70" segment_no="6" tag_type="text">we have that E [ R 2</text>
<text top="300" left="177" width="38" height="13" font="font18" id="p33_t72" reading_order_no="71" segment_no="6" tag_type="text">k ] ≤ 2 R 2</text>
<text top="301" left="211" width="160" height="12" font="font3" id="p33_t73" reading_order_no="72" segment_no="6" tag_type="text">0 for all k = 0 , 1 , . . . , T − 1 . Therefore,</text>
<text top="329" left="137" width="26" height="12" font="font34" id="p33_t74" reading_order_no="73" segment_no="7" tag_type="formula">E [ R 2 T ]</text>
<text top="330" left="173" width="8" height="9" font="font19" id="p33_t75" reading_order_no="74" segment_no="7" tag_type="formula">≤</text>
<text top="322" left="190" width="62" height="19" font="font17" id="p33_t76" reading_order_no="75" segment_no="7" tag_type="formula">R 2 0 + 40 γ 2 σ 2 T</text>
<text top="337" left="229" width="11" height="9" font="font18" id="p33_t77" reading_order_no="76" segment_no="7" tag_type="formula">7 n</text>
<text top="324" left="257" width="21" height="16" font="font18" id="p33_t78" reading_order_no="77" segment_no="7" tag_type="formula">+ 4 γ</text>
<text top="315" left="279" width="8" height="9" font="font19" id="p33_t79" reading_order_no="78" segment_no="7" tag_type="formula">√</text>
<text top="324" left="280" width="26" height="22" font="font18" id="p33_t80" reading_order_no="79" segment_no="7" tag_type="formula">5 Cσ √ n</text>
<text top="320" left="309" width="16" height="7" font="font28" id="p33_t81" reading_order_no="80" segment_no="7" tag_type="formula">T − 1</text>
<text top="328" left="310" width="14" height="4" font="font29" id="p33_t82" reading_order_no="81" segment_no="7" tag_type="formula">X</text>
<text top="345" left="311" width="12" height="6" font="font28" id="p33_t83" reading_order_no="82" segment_no="7" tag_type="formula">l =0</text>
<text top="324" left="327" width="10" height="4" font="font29" id="p33_t84" reading_order_no="83" segment_no="7" tag_type="formula">q</text>
<text top="329" left="336" width="23" height="12" font="font34" id="p33_t85" reading_order_no="84" segment_no="7" tag_type="formula">E [ R 2</text>
<text top="322" left="355" width="80" height="20" font="font18" id="p33_t86" reading_order_no="85" segment_no="7" tag_type="formula">l ] E [ b b l ] + 40 γ 2 Cσ 2</text>
<text top="337" left="411" width="11" height="9" font="font18" id="p33_t87" reading_order_no="86" segment_no="7" tag_type="formula">7 n</text>
<text top="320" left="438" width="16" height="7" font="font28" id="p33_t88" reading_order_no="87" segment_no="7" tag_type="formula">T − 1</text>
<text top="328" left="439" width="14" height="4" font="font29" id="p33_t89" reading_order_no="88" segment_no="7" tag_type="formula">X</text>
<text top="345" left="440" width="13" height="6" font="font28" id="p33_t90" reading_order_no="89" segment_no="7" tag_type="formula">l =0</text>
<text top="331" left="456" width="20" height="10" font="font34" id="p33_t91" reading_order_no="90" segment_no="7" tag_type="formula">E [ b b l ]</text>
<text top="365" left="173" width="8" height="9" font="font19" id="p33_t92" reading_order_no="91" segment_no="7" tag_type="formula">≤</text>
<text top="357" left="190" width="62" height="19" font="font17" id="p33_t93" reading_order_no="92" segment_no="7" tag_type="formula">R 2 0 + 40 γ 2 σ 2 T</text>
<text top="373" left="229" width="11" height="9" font="font18" id="p33_t94" reading_order_no="93" segment_no="7" tag_type="formula">7 n</text>
<text top="359" left="257" width="21" height="16" font="font18" id="p33_t95" reading_order_no="94" segment_no="7" tag_type="formula">+ 4 γ</text>
<text top="350" left="279" width="8" height="9" font="font19" id="p33_t96" reading_order_no="95" segment_no="7" tag_type="formula">√</text>
<text top="359" left="287" width="36" height="10" font="font18" id="p33_t97" reading_order_no="96" segment_no="7" tag_type="formula">10 CσR 0</text>
<text top="365" left="288" width="8" height="9" font="font19" id="p33_t98" reading_order_no="97" segment_no="7" tag_type="formula">√</text>
<text top="373" left="297" width="6" height="9" font="font17" id="p33_t99" reading_order_no="98" segment_no="7" tag_type="formula">n</text>
<text top="355" left="326" width="16" height="7" font="font28" id="p33_t100" reading_order_no="99" segment_no="7" tag_type="formula">T − 1</text>
<text top="363" left="327" width="14" height="4" font="font29" id="p33_t101" reading_order_no="100" segment_no="7" tag_type="formula">X</text>
<text top="380" left="328" width="12" height="6" font="font28" id="p33_t102" reading_order_no="101" segment_no="7" tag_type="formula">l =0</text>
<text top="359" left="344" width="10" height="4" font="font29" id="p33_t103" reading_order_no="102" segment_no="7" tag_type="formula">q</text>
<text top="357" left="353" width="71" height="19" font="font34" id="p33_t104" reading_order_no="103" segment_no="7" tag_type="formula">E [ b b l ] + 40 γ 2 Cσ 2</text>
<text top="373" left="400" width="11" height="9" font="font18" id="p33_t105" reading_order_no="104" segment_no="7" tag_type="formula">7 n</text>
<text top="355" left="428" width="16" height="7" font="font28" id="p33_t106" reading_order_no="105" segment_no="7" tag_type="formula">T − 1</text>
<text top="363" left="429" width="14" height="4" font="font29" id="p33_t107" reading_order_no="106" segment_no="7" tag_type="formula">X</text>
<text top="380" left="429" width="13" height="6" font="font28" id="p33_t108" reading_order_no="107" segment_no="7" tag_type="formula">l =0</text>
<text top="366" left="445" width="23" height="10" font="font34" id="p33_t109" reading_order_no="108" segment_no="7" tag_type="formula">E [ b b l ] .</text>
<text top="393" left="108" width="396" height="9" font="font3" id="p33_t110" reading_order_no="109" segment_no="8" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="404" left="108" width="273" height="10" font="font17" id="p33_t111" reading_order_no="110" segment_no="8" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="421" left="224" width="57" height="17" font="font17" id="p33_t112" reading_order_no="111" segment_no="9" tag_type="formula">p k ≥ m · |G k |</text>
<text top="435" left="267" width="10" height="9" font="font17" id="p33_t113" reading_order_no="112" segment_no="9" tag_type="formula">n k</text>
<text top="421" left="284" width="14" height="16" font="font19" id="p33_t114" reading_order_no="113" segment_no="9" tag_type="formula">· 1</text>
<text top="435" left="290" width="10" height="9" font="font17" id="p33_t115" reading_order_no="114" segment_no="9" tag_type="formula">n k</text>
<text top="421" left="305" width="55" height="16" font="font18" id="p33_t116" reading_order_no="115" segment_no="9" tag_type="formula">= m (1 − δ k )</text>
<text top="435" left="333" width="10" height="9" font="font17" id="p33_t117" reading_order_no="116" segment_no="9" tag_type="formula">n k</text>
<text top="421" left="364" width="20" height="16" font="font19" id="p33_t118" reading_order_no="117" segment_no="9" tag_type="formula">≥ m</text>
<text top="428" left="377" width="11" height="16" font="font17" id="p33_t119" reading_order_no="118" segment_no="9" tag_type="formula">n .</text>
<text top="451" left="108" width="396" height="10" font="font3" id="p33_t120" reading_order_no="119" segment_no="10" tag_type="text">Therefore, each individual Byzantine worker can violate the protocol no more than 1 / p times on</text>
<text top="463" left="108" width="87" height="9" font="font3" id="p33_t121" reading_order_no="120" segment_no="10" tag_type="text">average implying that</text>
<text top="486" left="173" width="22" height="12" font="font34" id="p33_t122" reading_order_no="121" segment_no="11" tag_type="formula">E [ R 2</text>
<text top="488" left="190" width="10" height="11" font="font18" id="p33_t123" reading_order_no="122" segment_no="11" tag_type="formula">T ]</text>
<text top="488" left="209" width="8" height="9" font="font19" id="p33_t124" reading_order_no="123" segment_no="11" tag_type="formula">≤</text>
<text top="486" left="227" width="12" height="11" font="font17" id="p33_t125" reading_order_no="124" segment_no="11" tag_type="formula">R 2</text>
<text top="480" left="235" width="54" height="19" font="font18" id="p33_t126" reading_order_no="125" segment_no="11" tag_type="formula">0 + 40 γ 2 σ 2 T</text>
<text top="495" left="266" width="11" height="9" font="font18" id="p33_t127" reading_order_no="126" segment_no="11" tag_type="formula">7 n</text>
<text top="481" left="294" width="27" height="16" font="font18" id="p33_t128" reading_order_no="127" segment_no="11" tag_type="formula">+ 4 nγ</text>
<text top="472" left="322" width="8" height="9" font="font19" id="p33_t129" reading_order_no="128" segment_no="11" tag_type="formula">√</text>
<text top="481" left="330" width="40" height="10" font="font18" id="p33_t130" reading_order_no="129" segment_no="11" tag_type="formula">10 CbσR 0</text>
<text top="495" left="326" width="9" height="9" font="font17" id="p33_t131" reading_order_no="130" segment_no="11" tag_type="formula">m</text>
<text top="487" left="335" width="8" height="9" font="font19" id="p33_t132" reading_order_no="131" segment_no="11" tag_type="formula">√</text>
<text top="495" left="343" width="6" height="9" font="font17" id="p33_t133" reading_order_no="132" segment_no="11" tag_type="formula">n</text>
<text top="480" left="374" width="59" height="17" font="font18" id="p33_t134" reading_order_no="133" segment_no="11" tag_type="formula">+ 40 γ 2 Cσ 2 nb</text>
<text top="495" left="399" width="20" height="9" font="font18" id="p33_t135" reading_order_no="134" segment_no="11" tag_type="formula">7 nm</text>
<text top="517" left="209" width="8" height="9" font="font18" id="p33_t136" reading_order_no="135" segment_no="11" tag_type="formula">=</text>
<text top="515" left="227" width="12" height="11" font="font17" id="p33_t137" reading_order_no="136" segment_no="11" tag_type="formula">R 2</text>
<text top="509" left="235" width="54" height="19" font="font18" id="p33_t138" reading_order_no="137" segment_no="11" tag_type="formula">0 + 40 γ 2 σ 2 T</text>
<text top="524" left="266" width="11" height="9" font="font18" id="p33_t139" reading_order_no="138" segment_no="11" tag_type="formula">7 n</text>
<text top="511" left="294" width="27" height="15" font="font18" id="p33_t140" reading_order_no="139" segment_no="11" tag_type="formula">+ 4 nγ</text>
<text top="502" left="322" width="8" height="9" font="font19" id="p33_t141" reading_order_no="140" segment_no="11" tag_type="formula">√</text>
<text top="511" left="330" width="40" height="9" font="font18" id="p33_t142" reading_order_no="141" segment_no="11" tag_type="formula">10 CδσR 0</text>
<text top="524" left="334" width="9" height="9" font="font17" id="p33_t143" reading_order_no="142" segment_no="11" tag_type="formula">m</text>
<text top="509" left="374" width="60" height="17" font="font18" id="p33_t144" reading_order_no="143" segment_no="11" tag_type="formula">+ 40 γ 2 Cσ 2 nδ</text>
<text top="524" left="403" width="14" height="9" font="font18" id="p33_t145" reading_order_no="144" segment_no="11" tag_type="formula">7 m</text>
<text top="517" left="436" width="3" height="9" font="font17" id="p33_t146" reading_order_no="145" segment_no="11" tag_type="formula">.</text>
<text top="539" left="108" width="27" height="9" font="font3" id="p33_t147" reading_order_no="146" segment_no="12" tag_type="text">Taking</text>
<text top="559" left="211" width="36" height="9" font="font17" id="p33_t148" reading_order_no="147" segment_no="13" tag_type="formula">γ = min</text>
<text top="549" left="249" width="17" height="12" font="font29" id="p33_t149" reading_order_no="148" segment_no="13" tag_type="formula">( 1</text>
<text top="559" left="258" width="16" height="16" font="font18" id="p33_t150" reading_order_no="149" segment_no="13" tag_type="formula">4 L ,</text>
<text top="549" left="275" width="40" height="14" font="font29" id="p33_t151" reading_order_no="150" segment_no="13" tag_type="formula">r 7 nR 2 0</text>
<text top="559" left="286" width="39" height="16" font="font18" id="p33_t152" reading_order_no="151" segment_no="13" tag_type="formula">120 σ 2 K ,</text>
<text top="549" left="327" width="10" height="4" font="font29" id="p33_t153" reading_order_no="152" segment_no="13" tag_type="formula">r</text>
<text top="551" left="352" width="25" height="12" font="font17" id="p33_t154" reading_order_no="153" segment_no="13" tag_type="formula">m 2 R 2 0</text>
<text top="565" left="338" width="53" height="10" font="font18" id="p33_t155" reading_order_no="154" segment_no="13" tag_type="formula">1440 Cσ 2 n 2 δ</text>
<text top="549" left="393" width="8" height="4" font="font29" id="p33_t156" reading_order_no="155" segment_no="13" tag_type="formula">)</text>
<text top="583" left="108" width="58" height="9" font="font3" id="p33_t157" reading_order_no="156" segment_no="14" tag_type="text">we ensure that</text>
<text top="598" left="160" width="37" height="11" font="font18" id="p33_t158" reading_order_no="157" segment_no="15" tag_type="formula">40 γ 2 σ 2 T</text>
<text top="614" left="174" width="11" height="9" font="font18" id="p33_t159" reading_order_no="158" segment_no="15" tag_type="formula">7 n</text>
<text top="600" left="202" width="27" height="16" font="font18" id="p33_t160" reading_order_no="159" segment_no="15" tag_type="formula">+ 4 nγ</text>
<text top="591" left="229" width="8" height="9" font="font19" id="p33_t161" reading_order_no="160" segment_no="15" tag_type="formula">√</text>
<text top="600" left="238" width="40" height="10" font="font18" id="p33_t162" reading_order_no="161" segment_no="15" tag_type="formula">10 CδσR 0</text>
<text top="614" left="241" width="9" height="9" font="font17" id="p33_t163" reading_order_no="162" segment_no="15" tag_type="formula">m</text>
<text top="598" left="282" width="60" height="18" font="font18" id="p33_t164" reading_order_no="163" segment_no="15" tag_type="formula">+ 40 γ 2 Cσ 2 nδ</text>
<text top="614" left="311" width="14" height="9" font="font18" id="p33_t165" reading_order_no="164" segment_no="15" tag_type="formula">7 m</text>
<text top="598" left="346" width="24" height="17" font="font19" id="p33_t166" reading_order_no="165" segment_no="15" tag_type="formula">≤ R 2</text>
<text top="605" left="366" width="4" height="6" font="font30" id="p33_t167" reading_order_no="166" segment_no="15" tag_type="formula">0</text>
<text top="598" left="362" width="34" height="25" font="font18" id="p33_t168" reading_order_no="167" segment_no="15" tag_type="formula">3 + R 2</text>
<text top="605" left="392" width="4" height="6" font="font30" id="p33_t169" reading_order_no="168" segment_no="15" tag_type="formula">0</text>
<text top="598" left="388" width="35" height="25" font="font18" id="p33_t170" reading_order_no="169" segment_no="15" tag_type="formula">3 + R 2</text>
<text top="605" left="419" width="4" height="6" font="font30" id="p33_t171" reading_order_no="170" segment_no="15" tag_type="formula">0</text>
<text top="605" left="415" width="38" height="18" font="font18" id="p33_t172" reading_order_no="171" segment_no="15" tag_type="formula">3 = R 2 0 ,</text>
<text top="628" left="108" width="396" height="12" font="font3" id="p33_t173" reading_order_no="172" segment_no="16" tag_type="text">and, as a result, we get E [ R 2 T ] ≤ 2 R 2 0 . Therefore, ( 29 ) holds for all k = 0 , 1 , . . . , K . Together with</text>
<text top="640" left="108" width="56" height="9" font="font3" id="p33_t174" reading_order_no="173" segment_no="16" tag_type="text">( 27 ) it implies</text>
<text top="650" left="248" width="111" height="18" font="font34" id="p33_t175" reading_order_no="174" segment_no="17" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ 2 R 2 0</text>
<text top="658" left="344" width="20" height="16" font="font17" id="p33_t176" reading_order_no="175" segment_no="17" tag_type="formula">γK .</text>
<text top="679" left="108" width="188" height="9" font="font3" id="p33_t177" reading_order_no="176" segment_no="18" tag_type="text">Next, from our stepsize rule ( 25 ) it follows that</text>
<text top="703" left="191" width="101" height="13" font="font34" id="p33_t178" reading_order_no="177" segment_no="19" tag_type="formula">E f ( x K ) − f ( x ∗ ) = O</text>
<text top="697" left="303" width="19" height="12" font="font17" id="p33_t179" reading_order_no="178" segment_no="19" tag_type="formula">LR 2 0</text>
<text top="712" left="308" width="8" height="9" font="font17" id="p33_t180" reading_order_no="179" segment_no="19" tag_type="formula">K</text>
<text top="699" left="325" width="32" height="16" font="font18" id="p33_t181" reading_order_no="180" segment_no="19" tag_type="formula">+ σR 0</text>
<text top="705" left="337" width="8" height="9" font="font19" id="p33_t182" reading_order_no="181" segment_no="19" tag_type="formula">√</text>
<text top="714" left="345" width="14" height="9" font="font17" id="p33_t183" reading_order_no="182" segment_no="19" tag_type="formula">nK</text>
<text top="699" left="363" width="18" height="16" font="font18" id="p33_t184" reading_order_no="183" segment_no="19" tag_type="formula">+ n</text>
<text top="690" left="381" width="8" height="9" font="font19" id="p33_t185" reading_order_no="184" segment_no="19" tag_type="formula">√</text>
<text top="699" left="389" width="22" height="9" font="font17" id="p33_t186" reading_order_no="185" segment_no="19" tag_type="formula">δσR 0</text>
<text top="712" left="384" width="17" height="9" font="font17" id="p33_t187" reading_order_no="186" segment_no="19" tag_type="formula">mK</text>
<text top="695" left="413" width="8" height="4" font="font29" id="p33_t188" reading_order_no="187" segment_no="19" tag_type="formula">!</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p33_t189" reading_order_no="188" segment_no="20" tag_type="text">33</text>
</page>
<page number="34" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="72" height="9" font="font3" id="p34_t1" reading_order_no="0" segment_no="0" tag_type="text">meaning that after</text>
<text top="95" left="227" width="30" height="10" font="font17" id="p34_t2" reading_order_no="1" segment_no="1" tag_type="formula">K = O</text>
<text top="87" left="268" width="19" height="12" font="font17" id="p34_t3" reading_order_no="2" segment_no="1" tag_type="formula">LR 2 0</text>
<text top="102" left="275" width="5" height="9" font="font17" id="p34_t4" reading_order_no="3" segment_no="1" tag_type="formula">ε</text>
<text top="87" left="291" width="33" height="18" font="font18" id="p34_t5" reading_order_no="4" segment_no="1" tag_type="formula">+ σ 2 R 2 0</text>
<text top="102" left="305" width="15" height="9" font="font17" id="p34_t6" reading_order_no="5" segment_no="1" tag_type="formula">nε 2</text>
<text top="89" left="328" width="17" height="16" font="font18" id="p34_t7" reading_order_no="6" segment_no="1" tag_type="formula">+ n</text>
<text top="80" left="345" width="8" height="9" font="font19" id="p34_t8" reading_order_no="7" segment_no="1" tag_type="formula">√</text>
<text top="89" left="353" width="23" height="9" font="font17" id="p34_t9" reading_order_no="8" segment_no="1" tag_type="formula">δσR 0</text>
<text top="102" left="351" width="13" height="9" font="font17" id="p34_t10" reading_order_no="9" segment_no="1" tag_type="formula">mε</text>
<text top="85" left="377" width="8" height="4" font="font29" id="p34_t11" reading_order_no="10" segment_no="1" tag_type="formula">!</text>
<text top="118" left="108" width="243" height="12" font="font3" id="p34_t12" reading_order_no="11" segment_no="2" tag_type="text">iterations BTARD-SGD guarantees E [ f ( x K ) − f ( x ∗ )] ≤ ε .</text>
<text top="143" left="108" width="396" height="9" font="font3" id="p34_t13" reading_order_no="12" segment_no="3" tag_type="text">In the convex case, similar observations hold as in the non-convex case. Next, we derive the result</text>
<text top="154" left="108" width="253" height="10" font="font3" id="p34_t14" reading_order_no="13" segment_no="3" tag_type="text">without assuming that b b k is known to all peers at each iteration.</text>
<text top="167" left="108" width="398" height="12" font="font1" id="p34_t15" reading_order_no="14" segment_no="4" tag_type="text">Theorem F.4. Let As. 3.2 , ( Option II ) from As. 3.1 hold, Q = R d , f be L -smooth (see Def. F.1 ),</text>
<text top="178" left="108" width="396" height="11" font="font13" id="p34_t16" reading_order_no="15" segment_no="4" tag_type="text">convex, and x ∗ be some optimum of f . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and</text>
<text top="191" left="108" width="334" height="9" font="font17" id="p34_t17" reading_order_no="16" segment_no="4" tag_type="text">δ = 0 is used to compute clipping parameter τ l for CenteredClip . Next, assume that</text>
<text top="215" left="157" width="35" height="9" font="font17" id="p34_t18" reading_order_no="17" segment_no="5" tag_type="formula">γ = min</text>
<text top="204" left="194" width="18" height="13" font="font29" id="p34_t19" reading_order_no="18" segment_no="5" tag_type="formula">( 1</text>
<text top="215" left="203" width="16" height="16" font="font18" id="p34_t20" reading_order_no="19" segment_no="5" tag_type="formula">4 L ,</text>
<text top="205" left="221" width="39" height="14" font="font29" id="p34_t21" reading_order_no="20" segment_no="5" tag_type="formula">r 7 nR 2 0</text>
<text top="215" left="232" width="39" height="16" font="font18" id="p34_t22" reading_order_no="21" segment_no="5" tag_type="formula">120 σ 2 K ,</text>
<text top="205" left="272" width="10" height="4" font="font29" id="p34_t23" reading_order_no="22" segment_no="5" tag_type="formula">r</text>
<text top="207" left="294" width="25" height="12" font="font17" id="p34_t24" reading_order_no="23" segment_no="5" tag_type="formula">m 2 R 2 0</text>
<text top="221" left="283" width="47" height="10" font="font18" id="p34_t25" reading_order_no="24" segment_no="5" tag_type="formula">72 Cσ 2 n 2 b 2</text>
<text top="204" left="332" width="8" height="4" font="font29" id="p34_t26" reading_order_no="25" segment_no="5" tag_type="formula">)</text>
<text top="215" left="341" width="3" height="9" font="font17" id="p34_t27" reading_order_no="26" segment_no="5" tag_type="formula">,</text>
<text top="208" left="356" width="57" height="17" font="font18" id="p34_t28" reading_order_no="27" segment_no="5" tag_type="formula">∆ k max = (1 +</text>
<text top="199" left="415" width="8" height="9" font="font19" id="p34_t29" reading_order_no="28" segment_no="5" tag_type="formula">√</text>
<text top="208" left="423" width="9" height="9" font="font18" id="p34_t30" reading_order_no="29" segment_no="5" tag_type="formula">3)</text>
<text top="199" left="432" width="8" height="9" font="font19" id="p34_t31" reading_order_no="30" segment_no="5" tag_type="formula">√</text>
<text top="208" left="440" width="11" height="9" font="font18" id="p34_t32" reading_order_no="31" segment_no="5" tag_type="formula">2 σ</text>
<text top="214" left="403" width="8" height="9" font="font19" id="p34_t33" reading_order_no="32" segment_no="5" tag_type="formula">√</text>
<text top="221" left="411" width="32" height="10" font="font17" id="p34_t34" reading_order_no="33" segment_no="5" tag_type="formula">n k − m</text>
<text top="215" left="453" width="3" height="9" font="font17" id="p34_t35" reading_order_no="34" segment_no="5" tag_type="formula">,</text>
<text top="215" left="487" width="17" height="9" font="font3" id="p34_t36" reading_order_no="35" segment_no="5" tag_type="text">(30)</text>
<text top="239" left="108" width="397" height="12" font="font13" id="p34_t37" reading_order_no="36" segment_no="6" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k max is the parameter for verification 3 at iteration k of BTARD-SGD .</text>
<text top="251" left="107" width="329" height="12" font="font13" id="p34_t38" reading_order_no="37" segment_no="6" tag_type="text">Then, we have E [ f ( x K ) − f ( x ∗ )] ≤ ε after K iterations of BTARD-SGD , where</text>
<text top="274" left="232" width="30" height="10" font="font17" id="p34_t39" reading_order_no="38" segment_no="7" tag_type="formula">K = O</text>
<text top="267" left="273" width="18" height="12" font="font17" id="p34_t40" reading_order_no="39" segment_no="7" tag_type="formula">LR 2 0</text>
<text top="282" left="280" width="5" height="9" font="font17" id="p34_t41" reading_order_no="40" segment_no="7" tag_type="formula">ε</text>
<text top="267" left="295" width="33" height="17" font="font18" id="p34_t42" reading_order_no="41" segment_no="7" tag_type="formula">+ σ 2 R 2 0</text>
<text top="281" left="310" width="15" height="10" font="font17" id="p34_t43" reading_order_no="42" segment_no="7" tag_type="formula">nε 2</text>
<text top="268" left="332" width="39" height="16" font="font18" id="p34_t44" reading_order_no="43" segment_no="7" tag_type="formula">+ nbσR 0</text>
<text top="282" left="351" width="13" height="9" font="font17" id="p34_t45" reading_order_no="44" segment_no="7" tag_type="formula">mε</text>
<text top="275" left="487" width="17" height="9" font="font3" id="p34_t46" reading_order_no="45" segment_no="7" tag_type="text">(31)</text>
<text top="297" left="108" width="51" height="11" font="font13" id="p34_t47" reading_order_no="46" segment_no="8" tag_type="formula">and x K = 1</text>
<text top="296" left="153" width="38" height="14" font="font29" id="p34_t48" reading_order_no="47" segment_no="8" tag_type="formula">K P K − 1</text>
<text top="299" left="174" width="20" height="11" font="font13" id="p34_t49" reading_order_no="48" segment_no="8" tag_type="formula">k =0 .<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="322" left="108" width="396" height="9" font="font13" id="p34_t50" reading_order_no="49" segment_no="9" tag_type="text">Proof. The proof is almost identical to the proof of Theorem F.3 . Following the same steps and using<a href="deeplearning_paper1.html#6">,</a></text>
<text top="333" left="108" width="396" height="9" font="font3" id="p34_t51" reading_order_no="50" segment_no="9" tag_type="text">( 18 ) and ( 19 ) instead of ( 16 ) and ( 17 ) respectively we obtain the same sequence of inequalities up to<a href="deeplearning_paper1.html#6">(</a></text>
<text top="346" left="108" width="301" height="9" font="font3" id="p34_t52" reading_order_no="51" segment_no="9" tag_type="text">the following change: instead of b δ k we should use 1 k,v . Therefore, we have<a href="deeplearning_paper1.html#6">Option II</a></text>
<text top="360" left="111" width="88" height="13" font="font34" id="p34_t53" reading_order_no="52" segment_no="10" tag_type="formula">E k x k +1 − x ∗ k 2 | x k<a href="deeplearning_paper1.html#6">)</a></text>
<text top="362" left="214" width="8" height="9" font="font19" id="p34_t54" reading_order_no="53" segment_no="10" tag_type="formula">≤</text>
<text top="360" left="231" width="181" height="12" font="font19" id="p34_t55" reading_order_no="54" segment_no="10" tag_type="formula">k x k − x ∗ k 2 − 2 γ (1 − 2 Lγ ) f ( x k ) − f ( x ∗ )<a href="deeplearning_paper1.html#6">3.1</a></text>
<text top="382" left="241" width="127" height="13" font="font19" id="p34_t56" reading_order_no="55" segment_no="10" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − g k i | x k</text>
<text top="383" left="375" width="71" height="11" font="font18" id="p34_t57" reading_order_no="56" segment_no="10" tag_type="formula">+ 2 γ 2 Cσ 2 1 k,v +</text>
<text top="377" left="460" width="26" height="10" font="font18" id="p34_t58" reading_order_no="57" segment_no="10" tag_type="formula">2 γ 2 σ 2</text>
<text top="385" left="449" width="53" height="16" font="font17" id="p34_t59" reading_order_no="58" segment_no="10" tag_type="formula">n − 2 b − m ,</text>
<text top="408" left="178" width="127" height="13" font="font19" id="p34_t60" reading_order_no="59" segment_no="10" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − g k i | x k</text>
<text top="410" left="320" width="8" height="9" font="font19" id="p34_t61" reading_order_no="60" segment_no="10" tag_type="formula">≤</text>
<text top="411" left="337" width="10" height="9" font="font18" id="p34_t62" reading_order_no="61" segment_no="10" tag_type="formula">2 γ</text>
<text top="401" left="348" width="8" height="9" font="font19" id="p34_t63" reading_order_no="62" segment_no="10" tag_type="formula">√</text>
<text top="408" left="356" width="78" height="12" font="font17" id="p34_t64" reading_order_no="63" segment_no="10" tag_type="formula">Cσ k x k − x ∗ k 1 k,v ,</text>
<text top="426" left="108" width="50" height="9" font="font3" id="p34_t65" reading_order_no="64" segment_no="11" tag_type="text">that result in</text>
<text top="438" left="134" width="88" height="13" font="font34" id="p34_t66" reading_order_no="65" segment_no="12" tag_type="formula">E k x k +1 − x ∗ k 2 | x k<a href="deeplearning_paper1.html#25">F.1</a></text>
<text top="440" left="238" width="8" height="9" font="font19" id="p34_t67" reading_order_no="66" segment_no="12" tag_type="formula">≤<a href="deeplearning_paper1.html#25">),</a></text>
<text top="438" left="255" width="132" height="11" font="font19" id="p34_t68" reading_order_no="67" segment_no="12" tag_type="formula">k x k − x ∗ k 2 − γ f ( x k ) − f ( x ∗ )</text>
<text top="463" left="265" width="18" height="9" font="font18" id="p34_t69" reading_order_no="68" segment_no="12" tag_type="formula">+2 γ</text>
<text top="453" left="284" width="8" height="9" font="font19" id="p34_t70" reading_order_no="69" segment_no="12" tag_type="formula">√</text>
<text top="454" left="292" width="181" height="18" font="font17" id="p34_t71" reading_order_no="70" segment_no="12" tag_type="formula">Cσ k x k − x ∗ k 1 k,v + 2 γ 2 Cσ 2 1 k,v + 40 γ 2 σ 2</text>
<text top="470" left="453" width="11" height="9" font="font18" id="p34_t72" reading_order_no="71" segment_no="12" tag_type="formula">7 n</text>
<text top="463" left="475" width="3" height="9" font="font17" id="p34_t73" reading_order_no="72" segment_no="12" tag_type="formula">.</text>
<text top="481" left="108" width="396" height="9" font="font3" id="p34_t74" reading_order_no="73" segment_no="13" tag_type="text">Taking the full expectation from the both sides of the above inequality and summing up the results</text>
<text top="492" left="108" width="137" height="9" font="font3" id="p34_t75" reading_order_no="74" segment_no="13" tag_type="text">for k = 0 , 1 , . . . , K − 1 we derive</text>
<text top="510" left="111" width="5" height="9" font="font17" id="p34_t76" reading_order_no="75" segment_no="14" tag_type="formula">γ</text>
<text top="524" left="109" width="8" height="9" font="font17" id="p34_t77" reading_order_no="76" segment_no="14" tag_type="formula">K</text>
<text top="506" left="121" width="18" height="7" font="font28" id="p34_t78" reading_order_no="77" segment_no="14" tag_type="formula">K − 1</text>
<text top="514" left="123" width="14" height="4" font="font29" id="p34_t79" reading_order_no="78" segment_no="14" tag_type="formula">X</text>
<text top="531" left="123" width="14" height="6" font="font28" id="p34_t80" reading_order_no="79" segment_no="14" tag_type="formula">k =0</text>
<text top="515" left="140" width="73" height="12" font="font34" id="p34_t81" reading_order_no="80" segment_no="14" tag_type="formula">E [ f ( x k ) − f ( x ∗ )]</text>
<text top="517" left="223" width="8" height="9" font="font19" id="p34_t82" reading_order_no="81" segment_no="14" tag_type="formula">≤</text>
<text top="510" left="244" width="5" height="9" font="font18" id="p34_t83" reading_order_no="82" segment_no="14" tag_type="formula">1</text>
<text top="524" left="242" width="8" height="9" font="font17" id="p34_t84" reading_order_no="83" segment_no="14" tag_type="formula">K</text>
<text top="506" left="254" width="17" height="7" font="font28" id="p34_t85" reading_order_no="84" segment_no="14" tag_type="formula">K − 1</text>
<text top="514" left="255" width="14" height="4" font="font29" id="p34_t86" reading_order_no="85" segment_no="14" tag_type="formula">X</text>
<text top="531" left="255" width="15" height="6" font="font28" id="p34_t87" reading_order_no="86" segment_no="14" tag_type="formula">k =0</text>
<text top="515" left="277" width="60" height="12" font="font34" id="p34_t88" reading_order_no="87" segment_no="14" tag_type="formula">E k x k − x ∗ k 2</text>
<text top="515" left="344" width="79" height="12" font="font19" id="p34_t89" reading_order_no="88" segment_no="14" tag_type="formula">− E k x k +1 − x ∗ k 2</text>
<text top="509" left="435" width="41" height="17" font="font18" id="p34_t90" reading_order_no="89" segment_no="14" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="524" left="456" width="11" height="9" font="font18" id="p34_t91" reading_order_no="90" segment_no="14" tag_type="formula">7 n</text>
<text top="546" left="251" width="18" height="15" font="font18" id="p34_t92" reading_order_no="91" segment_no="14" tag_type="formula">+ 2 γ</text>
<text top="537" left="270" width="8" height="9" font="font19" id="p34_t93" reading_order_no="92" segment_no="14" tag_type="formula">√</text>
<text top="546" left="278" width="14" height="9" font="font17" id="p34_t94" reading_order_no="93" segment_no="14" tag_type="formula">Cσ</text>
<text top="559" left="271" width="8" height="9" font="font17" id="p34_t95" reading_order_no="94" segment_no="14" tag_type="formula">K</text>
<text top="541" left="295" width="18" height="7" font="font28" id="p34_t96" reading_order_no="95" segment_no="14" tag_type="formula">K − 1</text>
<text top="549" left="297" width="14" height="4" font="font29" id="p34_t97" reading_order_no="96" segment_no="14" tag_type="formula">X</text>
<text top="566" left="297" width="14" height="6" font="font28" id="p34_t98" reading_order_no="97" segment_no="14" tag_type="formula">k =0</text>
<text top="550" left="314" width="73" height="13" font="font34" id="p34_t99" reading_order_no="98" segment_no="14" tag_type="formula">E k x k − x ∗ k 1 k,v</text>
<text top="544" left="394" width="44" height="17" font="font18" id="p34_t100" reading_order_no="99" segment_no="14" tag_type="formula">+ 2 γ 2 Cσ 2</text>
<text top="559" left="417" width="8" height="9" font="font17" id="p34_t101" reading_order_no="100" segment_no="14" tag_type="formula">K<a href="deeplearning_paper1.html#20">CenteredClip</a></text>
<text top="541" left="441" width="18" height="7" font="font28" id="p34_t102" reading_order_no="101" segment_no="14" tag_type="formula">K − 1<a href="deeplearning_paper1.html#20">. </a>Next, assume that</text>
<text top="549" left="443" width="14" height="4" font="font29" id="p34_t103" reading_order_no="102" segment_no="14" tag_type="formula">X</text>
<text top="566" left="443" width="14" height="6" font="font28" id="p34_t104" reading_order_no="103" segment_no="14" tag_type="formula">k =0</text>
<text top="552" left="460" width="30" height="11" font="font34" id="p34_t105" reading_order_no="104" segment_no="14" tag_type="formula">E [ 1 k,v ]</text>
<text top="584" left="223" width="8" height="9" font="font19" id="p34_t106" reading_order_no="105" segment_no="14" tag_type="formula">≤</text>
<text top="576" left="242" width="122" height="12" font="font19" id="p34_t107" reading_order_no="106" segment_no="14" tag_type="formula">k x 0 − x ∗ k 2 − E [ k x K − x ∗ k 2 ]</text>
<text top="591" left="298" width="8" height="9" font="font17" id="p34_t108" reading_order_no="107" segment_no="14" tag_type="formula">K</text>
<text top="576" left="367" width="41" height="17" font="font18" id="p34_t109" reading_order_no="108" segment_no="14" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="591" left="388" width="11" height="9" font="font18" id="p34_t110" reading_order_no="109" segment_no="14" tag_type="formula">7 n</text>
<text top="607" left="251" width="18" height="15" font="font18" id="p34_t111" reading_order_no="110" segment_no="14" tag_type="formula">+ 2 γ</text>
<text top="598" left="270" width="8" height="9" font="font19" id="p34_t112" reading_order_no="111" segment_no="14" tag_type="formula">√</text>
<text top="607" left="278" width="14" height="9" font="font17" id="p34_t113" reading_order_no="112" segment_no="14" tag_type="formula">Cσ</text>
<text top="620" left="271" width="8" height="9" font="font17" id="p34_t114" reading_order_no="113" segment_no="14" tag_type="formula">K</text>
<text top="603" left="295" width="18" height="7" font="font28" id="p34_t115" reading_order_no="114" segment_no="14" tag_type="formula">K − 1</text>
<text top="610" left="297" width="14" height="4" font="font29" id="p34_t116" reading_order_no="115" segment_no="14" tag_type="formula">X</text>
<text top="627" left="297" width="14" height="6" font="font28" id="p34_t117" reading_order_no="116" segment_no="14" tag_type="formula">k =0</text>
<text top="608" left="314" width="10" height="4" font="font29" id="p34_t118" reading_order_no="117" segment_no="14" tag_type="formula">q</text>
<text top="605" left="324" width="139" height="19" font="font34" id="p34_t119" reading_order_no="118" segment_no="14" tag_type="formula">E [ k x k − x ∗ k 2 ] E [ 1 k,v ] + 2 γ 2 Cσ 2</text>
<text top="620" left="442" width="8" height="9" font="font17" id="p34_t120" reading_order_no="119" segment_no="14" tag_type="formula">K</text>
<text top="603" left="467" width="17" height="7" font="font28" id="p34_t121" reading_order_no="120" segment_no="14" tag_type="formula">K − 1</text>
<text top="610" left="468" width="14" height="4" font="font29" id="p34_t122" reading_order_no="121" segment_no="14" tag_type="formula">X</text>
<text top="627" left="468" width="14" height="6" font="font28" id="p34_t123" reading_order_no="122" segment_no="14" tag_type="formula">k =0</text>
<text top="613" left="486" width="32" height="11" font="font34" id="p34_t124" reading_order_no="123" segment_no="14" tag_type="formula">E [ 1 k,v ] .</text>
<text top="639" left="108" width="182" height="11" font="font3" id="p34_t125" reading_order_no="124" segment_no="15" tag_type="text">From Jensen’s inequality we have f ( x K ) ≤ 1</text>
<text top="638" left="284" width="38" height="14" font="font29" id="p34_t126" reading_order_no="125" segment_no="15" tag_type="text">K P K − 1</text>
<text top="639" left="305" width="108" height="13" font="font17" id="p34_t127" reading_order_no="126" segment_no="15" tag_type="text">k =0 f ( x k ) , where x K = 1</text>
<text top="638" left="408" width="38" height="14" font="font29" id="p34_t128" reading_order_no="127" segment_no="15" tag_type="text">K P K − 1</text>
<text top="639" left="428" width="76" height="13" font="font17" id="p34_t129" reading_order_no="128" segment_no="15" tag_type="text">k =0 x k . Using this</text>
<text top="652" left="108" width="197" height="11" font="font3" id="p34_t130" reading_order_no="129" segment_no="15" tag_type="text">and new notation R k = k x k − x ∗ k , k ≥ 0 we get</text>
<text top="674" left="120" width="100" height="12" font="font18" id="p34_t131" reading_order_no="130" segment_no="16" tag_type="formula">0 ≤ γ E f ( x K ) − f ( x ∗ )</text>
<text top="675" left="234" width="8" height="9" font="font19" id="p34_t132" reading_order_no="131" segment_no="16" tag_type="formula">≤</text>
<text top="668" left="253" width="52" height="12" font="font17" id="p34_t133" reading_order_no="132" segment_no="16" tag_type="formula">R 2 0 − E [ R 2 K ]</text>
<text top="683" left="274" width="8" height="9" font="font17" id="p34_t134" reading_order_no="133" segment_no="16" tag_type="formula">K</text>
<text top="668" left="308" width="42" height="17" font="font18" id="p34_t135" reading_order_no="134" segment_no="16" tag_type="formula">+ 40 γ 2 σ 2</text>
<text top="683" left="329" width="11" height="9" font="font18" id="p34_t136" reading_order_no="135" segment_no="16" tag_type="formula">7 n</text>
<text top="698" left="262" width="19" height="16" font="font18" id="p34_t137" reading_order_no="136" segment_no="16" tag_type="formula">+ 2 γ</text>
<text top="689" left="281" width="8" height="9" font="font19" id="p34_t138" reading_order_no="137" segment_no="16" tag_type="formula">√</text>
<text top="698" left="290" width="14" height="9" font="font17" id="p34_t139" reading_order_no="138" segment_no="16" tag_type="formula">Cσ</text>
<text top="712" left="283" width="8" height="9" font="font17" id="p34_t140" reading_order_no="139" segment_no="16" tag_type="formula">K</text>
<text top="694" left="306" width="18" height="7" font="font28" id="p34_t141" reading_order_no="140" segment_no="16" tag_type="formula">K − 1</text>
<text top="702" left="308" width="14" height="4" font="font29" id="p34_t142" reading_order_no="141" segment_no="16" tag_type="formula">X</text>
<text top="719" left="308" width="14" height="6" font="font28" id="p34_t143" reading_order_no="142" segment_no="16" tag_type="formula">k =0</text>
<text top="700" left="326" width="10" height="4" font="font29" id="p34_t144" reading_order_no="143" segment_no="16" tag_type="formula">q</text>
<text top="697" left="336" width="104" height="19" font="font34" id="p34_t145" reading_order_no="144" segment_no="16" tag_type="formula">E [ R 2 k ] E [ 1 k,v ] + 2 γ 2 Cσ 2</text>
<text top="712" left="419" width="8" height="9" font="font17" id="p34_t146" reading_order_no="145" segment_no="16" tag_type="formula">K</text>
<text top="694" left="443" width="17" height="7" font="font28" id="p34_t147" reading_order_no="146" segment_no="16" tag_type="formula">K − 1</text>
<text top="702" left="444" width="14" height="4" font="font29" id="p34_t148" reading_order_no="147" segment_no="16" tag_type="formula">X</text>
<text top="719" left="444" width="15" height="6" font="font28" id="p34_t149" reading_order_no="148" segment_no="16" tag_type="formula">k =0</text>
<text top="705" left="462" width="42" height="10" font="font34" id="p34_t150" reading_order_no="149" segment_no="16" tag_type="formula">E [ 1 k,v ] (32)</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p34_t151" reading_order_no="150" segment_no="17" tag_type="text">34</text>
</page>
<page number="35" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="165" height="9" font="font3" id="p35_t1" reading_order_no="0" segment_no="0" tag_type="text">implying (after changing the indices) that</text>
<text top="103" left="146" width="21" height="12" font="font34" id="p35_t2" reading_order_no="1" segment_no="1" tag_type="formula">E [ R 2</text>
<text top="103" left="163" width="32" height="13" font="font18" id="p35_t3" reading_order_no="2" segment_no="1" tag_type="formula">k ] ≤ R 2</text>
<text top="97" left="191" width="54" height="19" font="font18" id="p35_t4" reading_order_no="3" segment_no="1" tag_type="formula">0 + 40 γ 2 σ 2 k</text>
<text top="112" left="222" width="11" height="9" font="font18" id="p35_t5" reading_order_no="4" segment_no="1" tag_type="formula">7 n</text>
<text top="105" left="249" width="20" height="9" font="font18" id="p35_t6" reading_order_no="5" segment_no="1" tag_type="formula">+ 2 γ</text>
<text top="96" left="269" width="8" height="9" font="font19" id="p35_t7" reading_order_no="6" segment_no="1" tag_type="formula">√</text>
<text top="105" left="278" width="14" height="9" font="font17" id="p35_t8" reading_order_no="7" segment_no="1" tag_type="formula">Cσ</text>
<text top="94" left="293" width="15" height="7" font="font28" id="p35_t9" reading_order_no="8" segment_no="1" tag_type="formula">k − 1</text>
<text top="102" left="293" width="14" height="4" font="font29" id="p35_t10" reading_order_no="9" segment_no="1" tag_type="formula">X</text>
<text top="119" left="294" width="13" height="6" font="font28" id="p35_t11" reading_order_no="10" segment_no="1" tag_type="formula">l =0</text>
<text top="100" left="309" width="10" height="4" font="font29" id="p35_t12" reading_order_no="11" segment_no="1" tag_type="formula">q</text>
<text top="103" left="319" width="101" height="13" font="font34" id="p35_t13" reading_order_no="12" segment_no="1" tag_type="formula">E [ R 2 l ] E [ 1 l,v ] + 2 γ 2 Cσ 2</text>
<text top="94" left="422" width="15" height="7" font="font28" id="p35_t14" reading_order_no="13" segment_no="1" tag_type="formula">k − 1</text>
<text top="102" left="422" width="14" height="4" font="font29" id="p35_t15" reading_order_no="14" segment_no="1" tag_type="formula">X</text>
<text top="119" left="423" width="13" height="6" font="font28" id="p35_t16" reading_order_no="15" segment_no="1" tag_type="formula">l =0</text>
<text top="105" left="438" width="29" height="10" font="font34" id="p35_t17" reading_order_no="16" segment_no="1" tag_type="formula">E [ 1 l,v ]</text>
<text top="105" left="487" width="17" height="9" font="font3" id="p35_t18" reading_order_no="17" segment_no="1" tag_type="text">(33)</text>
<text top="134" left="108" width="324" height="10" font="font3" id="p35_t19" reading_order_no="18" segment_no="2" tag_type="text">holds for all k ≥ 0 . In the remaining part of the proof we derive by induction that</text>
<text top="157" left="149" width="62" height="18" font="font17" id="p35_t20" reading_order_no="19" segment_no="3" tag_type="formula">R 2 0 + 40 γ 2 σ 2 k</text>
<text top="172" left="188" width="11" height="9" font="font18" id="p35_t21" reading_order_no="20" segment_no="3" tag_type="formula">7 n</text>
<text top="165" left="215" width="19" height="9" font="font18" id="p35_t22" reading_order_no="21" segment_no="3" tag_type="formula">+ 2 γ</text>
<text top="155" left="235" width="8" height="9" font="font19" id="p35_t23" reading_order_no="22" segment_no="3" tag_type="formula">√</text>
<text top="165" left="243" width="14" height="9" font="font17" id="p35_t24" reading_order_no="23" segment_no="3" tag_type="formula">Cσ</text>
<text top="154" left="259" width="15" height="7" font="font28" id="p35_t25" reading_order_no="24" segment_no="3" tag_type="formula">k − 1</text>
<text top="162" left="259" width="14" height="4" font="font29" id="p35_t26" reading_order_no="25" segment_no="3" tag_type="formula">X</text>
<text top="179" left="260" width="13" height="6" font="font28" id="p35_t27" reading_order_no="26" segment_no="3" tag_type="formula">l =0</text>
<text top="159" left="275" width="10" height="4" font="font29" id="p35_t28" reading_order_no="27" segment_no="3" tag_type="formula">q</text>
<text top="163" left="285" width="101" height="13" font="font34" id="p35_t29" reading_order_no="28" segment_no="3" tag_type="formula">E [ R 2 l ] E [ 1 l,v ] + 2 γ 2 Cσ 2</text>
<text top="154" left="388" width="15" height="7" font="font28" id="p35_t30" reading_order_no="29" segment_no="3" tag_type="formula">k − 1</text>
<text top="162" left="388" width="14" height="4" font="font29" id="p35_t31" reading_order_no="30" segment_no="3" tag_type="formula">X</text>
<text top="179" left="389" width="13" height="6" font="font28" id="p35_t32" reading_order_no="31" segment_no="3" tag_type="formula">l =0</text>
<text top="163" left="404" width="58" height="12" font="font34" id="p35_t33" reading_order_no="32" segment_no="3" tag_type="formula">E [ 1 l,v ] ≤ 2 R 2 0</text>
<text top="165" left="487" width="17" height="9" font="font3" id="p35_t34" reading_order_no="33" segment_no="3" tag_type="text">(34)</text>
<text top="195" left="108" width="396" height="9" font="font3" id="p35_t35" reading_order_no="34" segment_no="4" tag_type="text">for all k = 0 , . . . , K . For k = 0 this inequality trivially holds. Next, assume that it holds for all</text>
<text top="205" left="108" width="396" height="10" font="font17" id="p35_t36" reading_order_no="35" segment_no="4" tag_type="text">k = 0 , 1 , . . . , T − 1 , T ≤ K − 1 . Let us show that it holds for k = T as well. From ( 33 ) and ( 34 )</text>
<text top="215" left="108" width="263" height="12" font="font3" id="p35_t37" reading_order_no="36" segment_no="4" tag_type="text">we have that E [ R 2 k ] ≤ 2 R 2 0 for all k = 0 , 1 , . . . , T − 1 . Therefore,</text>
<text top="245" left="136" width="21" height="12" font="font34" id="p35_t38" reading_order_no="37" segment_no="5" tag_type="formula">E [ R 2</text>
<text top="247" left="153" width="10" height="11" font="font18" id="p35_t39" reading_order_no="38" segment_no="5" tag_type="formula">T ]</text>
<text top="247" left="172" width="8" height="9" font="font19" id="p35_t40" reading_order_no="39" segment_no="5" tag_type="formula">≤</text>
<text top="245" left="190" width="12" height="11" font="font17" id="p35_t41" reading_order_no="40" segment_no="5" tag_type="formula">R 2</text>
<text top="239" left="198" width="53" height="19" font="font18" id="p35_t42" reading_order_no="41" segment_no="5" tag_type="formula">0 + 40 γ 2 σ 2 k</text>
<text top="254" left="228" width="11" height="9" font="font18" id="p35_t43" reading_order_no="42" segment_no="5" tag_type="formula">7 n</text>
<text top="247" left="255" width="20" height="9" font="font18" id="p35_t44" reading_order_no="43" segment_no="5" tag_type="formula">+ 2 γ</text>
<text top="238" left="276" width="8" height="9" font="font19" id="p35_t45" reading_order_no="44" segment_no="5" tag_type="formula">√</text>
<text top="247" left="284" width="14" height="9" font="font17" id="p35_t46" reading_order_no="45" segment_no="5" tag_type="formula">Cσ</text>
<text top="236" left="300" width="16" height="7" font="font28" id="p35_t47" reading_order_no="46" segment_no="5" tag_type="formula">T − 1</text>
<text top="244" left="300" width="14" height="4" font="font29" id="p35_t48" reading_order_no="47" segment_no="5" tag_type="formula">X</text>
<text top="261" left="301" width="13" height="6" font="font28" id="p35_t49" reading_order_no="48" segment_no="5" tag_type="formula">l =0</text>
<text top="242" left="317" width="10" height="4" font="font29" id="p35_t50" reading_order_no="49" segment_no="5" tag_type="formula">q</text>
<text top="245" left="327" width="101" height="13" font="font34" id="p35_t51" reading_order_no="50" segment_no="5" tag_type="formula">E [ R 2 l ] E [ 1 l,v ] + 2 γ 2 Cσ 2</text>
<text top="236" left="430" width="16" height="7" font="font28" id="p35_t52" reading_order_no="51" segment_no="5" tag_type="formula">T − 1</text>
<text top="244" left="431" width="14" height="4" font="font29" id="p35_t53" reading_order_no="52" segment_no="5" tag_type="formula">X</text>
<text top="261" left="432" width="12" height="6" font="font28" id="p35_t54" reading_order_no="53" segment_no="5" tag_type="formula">l =0</text>
<text top="247" left="448" width="28" height="10" font="font34" id="p35_t55" reading_order_no="54" segment_no="5" tag_type="formula">E [ 1 l,v ]</text>
<text top="282" left="172" width="8" height="9" font="font19" id="p35_t56" reading_order_no="55" segment_no="5" tag_type="formula">≤</text>
<text top="280" left="190" width="12" height="11" font="font17" id="p35_t57" reading_order_no="56" segment_no="5" tag_type="formula">R 2</text>
<text top="274" left="198" width="53" height="19" font="font18" id="p35_t58" reading_order_no="57" segment_no="5" tag_type="formula">0 + 40 γ 2 σ 2 k</text>
<text top="289" left="228" width="11" height="9" font="font18" id="p35_t59" reading_order_no="58" segment_no="5" tag_type="formula">7 n</text>
<text top="282" left="255" width="20" height="9" font="font18" id="p35_t60" reading_order_no="59" segment_no="5" tag_type="formula">+ 2 γ</text>
<text top="273" left="276" width="8" height="9" font="font19" id="p35_t61" reading_order_no="60" segment_no="5" tag_type="formula">√</text>
<text top="282" left="284" width="31" height="10" font="font18" id="p35_t62" reading_order_no="61" segment_no="5" tag_type="formula">2 CσR 0</text>
<text top="272" left="317" width="16" height="7" font="font28" id="p35_t63" reading_order_no="62" segment_no="5" tag_type="formula">T − 1</text>
<text top="279" left="317" width="14" height="4" font="font29" id="p35_t64" reading_order_no="63" segment_no="5" tag_type="formula">X</text>
<text top="296" left="318" width="13" height="6" font="font28" id="p35_t65" reading_order_no="64" segment_no="5" tag_type="formula">l =0</text>
<text top="277" left="334" width="10" height="4" font="font29" id="p35_t66" reading_order_no="65" segment_no="5" tag_type="formula">q</text>
<text top="280" left="344" width="73" height="13" font="font34" id="p35_t67" reading_order_no="66" segment_no="5" tag_type="formula">E [ 1 l,v ] + 2 γ 2 Cσ 2</text>
<text top="272" left="419" width="16" height="7" font="font28" id="p35_t68" reading_order_no="67" segment_no="5" tag_type="formula">T − 1</text>
<text top="279" left="420" width="14" height="4" font="font29" id="p35_t69" reading_order_no="68" segment_no="5" tag_type="formula">X</text>
<text top="296" left="421" width="13" height="6" font="font28" id="p35_t70" reading_order_no="69" segment_no="5" tag_type="formula">l =0</text>
<text top="282" left="437" width="31" height="11" font="font34" id="p35_t71" reading_order_no="70" segment_no="5" tag_type="formula">E [ 1 l,v ] .</text>
<text top="312" left="108" width="396" height="9" font="font3" id="p35_t72" reading_order_no="71" segment_no="6" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="323" left="108" width="273" height="9" font="font17" id="p35_t73" reading_order_no="72" segment_no="6" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="342" left="224" width="57" height="16" font="font17" id="p35_t74" reading_order_no="73" segment_no="7" tag_type="formula">p k ≥ m · |G k |</text>
<text top="356" left="267" width="10" height="9" font="font17" id="p35_t75" reading_order_no="74" segment_no="7" tag_type="formula">n k</text>
<text top="342" left="284" width="14" height="15" font="font19" id="p35_t76" reading_order_no="75" segment_no="7" tag_type="formula">· 1</text>
<text top="356" left="290" width="10" height="9" font="font17" id="p35_t77" reading_order_no="76" segment_no="7" tag_type="formula">n k</text>
<text top="342" left="305" width="55" height="16" font="font18" id="p35_t78" reading_order_no="77" segment_no="7" tag_type="formula">= m (1 − δ k )</text>
<text top="356" left="333" width="10" height="9" font="font17" id="p35_t79" reading_order_no="78" segment_no="7" tag_type="formula">n k</text>
<text top="342" left="364" width="20" height="15" font="font19" id="p35_t80" reading_order_no="79" segment_no="7" tag_type="formula">≥ m</text>
<text top="349" left="377" width="11" height="16" font="font17" id="p35_t81" reading_order_no="80" segment_no="7" tag_type="formula">n .</text>
<text top="374" left="108" width="398" height="10" font="font3" id="p35_t82" reading_order_no="81" segment_no="8" tag_type="text">That is, each individual Byzantine worker can violate the protocol no more than 1 / p times on average.</text>
<text top="385" left="108" width="396" height="12" font="font3" id="p35_t83" reading_order_no="82" segment_no="8" tag_type="text">However, even one Byzantine peer can create a shift of the order ∆ k max at each part of the resulting</text>
<text top="397" left="108" width="396" height="9" font="font3" id="p35_t84" reading_order_no="83" segment_no="8" tag_type="text">vector. Therefore, all Byzantine peers can violate the protocol no more than b / p times on average</text>
<text top="408" left="108" width="53" height="9" font="font3" id="p35_t85" reading_order_no="84" segment_no="8" tag_type="text">implying that</text>
<text top="434" left="179" width="26" height="12" font="font34" id="p35_t86" reading_order_no="85" segment_no="9" tag_type="formula">E [ R 2 T ]</text>
<text top="435" left="215" width="8" height="9" font="font19" id="p35_t87" reading_order_no="86" segment_no="9" tag_type="formula">≤</text>
<text top="428" left="233" width="62" height="18" font="font17" id="p35_t88" reading_order_no="87" segment_no="9" tag_type="formula">R 2 0 + 40 γ 2 σ 2 T</text>
<text top="443" left="272" width="11" height="9" font="font18" id="p35_t89" reading_order_no="88" segment_no="9" tag_type="formula">7 n</text>
<text top="429" left="299" width="33" height="16" font="font18" id="p35_t90" reading_order_no="89" segment_no="9" tag_type="formula">+ 2 γnb</text>
<text top="420" left="332" width="8" height="9" font="font19" id="p35_t91" reading_order_no="90" segment_no="9" tag_type="formula">√</text>
<text top="429" left="340" width="30" height="10" font="font18" id="p35_t92" reading_order_no="91" segment_no="9" tag_type="formula">2 CσR 0</text>
<text top="443" left="336" width="9" height="9" font="font17" id="p35_t93" reading_order_no="92" segment_no="9" tag_type="formula">m</text>
<text top="428" left="374" width="55" height="17" font="font18" id="p35_t94" reading_order_no="93" segment_no="9" tag_type="formula">+ 2 γ 2 nbCσ 2</text>
<text top="443" left="403" width="9" height="9" font="font17" id="p35_t95" reading_order_no="94" segment_no="9" tag_type="formula">m</text>
<text top="436" left="430" width="3" height="9" font="font17" id="p35_t96" reading_order_no="95" segment_no="9" tag_type="formula">.</text>
<text top="459" left="108" width="27" height="9" font="font3" id="p35_t97" reading_order_no="96" segment_no="10" tag_type="text">Taking</text>
<text top="482" left="214" width="36" height="9" font="font17" id="p35_t98" reading_order_no="97" segment_no="11" tag_type="formula">γ = min</text>
<text top="472" left="252" width="17" height="13" font="font29" id="p35_t99" reading_order_no="98" segment_no="11" tag_type="formula">( 1</text>
<text top="482" left="261" width="16" height="16" font="font18" id="p35_t100" reading_order_no="99" segment_no="11" tag_type="formula">4 L ,</text>
<text top="473" left="278" width="40" height="13" font="font29" id="p35_t101" reading_order_no="100" segment_no="11" tag_type="formula">r 7 nR 2 0</text>
<text top="482" left="289" width="39" height="16" font="font18" id="p35_t102" reading_order_no="101" segment_no="11" tag_type="formula">120 σ 2 K ,</text>
<text top="473" left="330" width="10" height="4" font="font29" id="p35_t103" reading_order_no="102" segment_no="11" tag_type="formula">r</text>
<text top="474" left="352" width="25" height="12" font="font17" id="p35_t104" reading_order_no="103" segment_no="11" tag_type="formula">m 2 R 2 0</text>
<text top="488" left="341" width="47" height="10" font="font18" id="p35_t105" reading_order_no="104" segment_no="11" tag_type="formula">72 Cσ 2 n 2 b 2</text>
<text top="472" left="390" width="8" height="4" font="font29" id="p35_t106" reading_order_no="105" segment_no="11" tag_type="formula">)</text>
<text top="509" left="108" width="58" height="9" font="font3" id="p35_t107" reading_order_no="106" segment_no="12" tag_type="text">we ensure that</text>
<text top="527" left="166" width="37" height="10" font="font18" id="p35_t108" reading_order_no="107" segment_no="13" tag_type="formula">40 γ 2 σ 2 T</text>
<text top="542" left="179" width="11" height="9" font="font18" id="p35_t109" reading_order_no="108" segment_no="13" tag_type="formula">7 n</text>
<text top="528" left="207" width="32" height="16" font="font18" id="p35_t110" reading_order_no="109" segment_no="13" tag_type="formula">+ 2 γnb</text>
<text top="519" left="239" width="8" height="9" font="font19" id="p35_t111" reading_order_no="110" segment_no="13" tag_type="formula">√</text>
<text top="528" left="248" width="30" height="10" font="font18" id="p35_t112" reading_order_no="111" segment_no="13" tag_type="formula">2 CσR 0</text>
<text top="542" left="244" width="9" height="9" font="font17" id="p35_t113" reading_order_no="112" segment_no="13" tag_type="formula">m</text>
<text top="527" left="282" width="54" height="17" font="font18" id="p35_t114" reading_order_no="113" segment_no="13" tag_type="formula">+ 2 γ 2 nbCσ 2</text>
<text top="542" left="311" width="9" height="9" font="font17" id="p35_t115" reading_order_no="114" segment_no="13" tag_type="formula">m</text>
<text top="527" left="341" width="23" height="16" font="font19" id="p35_t116" reading_order_no="115" segment_no="13" tag_type="formula">≤ R 2 0</text>
<text top="527" left="356" width="35" height="24" font="font18" id="p35_t117" reading_order_no="116" segment_no="13" tag_type="formula">3 + R 2 0</text>
<text top="527" left="383" width="34" height="24" font="font18" id="p35_t118" reading_order_no="117" segment_no="13" tag_type="formula">3 + R 2 0</text>
<text top="542" left="409" width="5" height="9" font="font18" id="p35_t119" reading_order_no="118" segment_no="13" tag_type="formula">3</text>
<text top="533" left="422" width="22" height="11" font="font18" id="p35_t120" reading_order_no="119" segment_no="13" tag_type="formula">= R 2</text>
<text top="535" left="440" width="8" height="11" font="font17" id="p35_t121" reading_order_no="120" segment_no="13" tag_type="formula">0 ,</text>
<text top="558" left="108" width="396" height="12" font="font3" id="p35_t122" reading_order_no="121" segment_no="14" tag_type="text">and, as a result, we get E [ R 2 T ] ≤ 2 R 2 0 . Therefore, ( 34 ) holds for all k = 0 , 1 , . . . , K . Together with</text>
<text top="571" left="108" width="56" height="9" font="font3" id="p35_t123" reading_order_no="122" segment_no="14" tag_type="text">( 32 ) it implies</text>
<text top="583" left="248" width="111" height="18" font="font34" id="p35_t124" reading_order_no="123" segment_no="15" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ 2 R 2 0</text>
<text top="591" left="344" width="20" height="16" font="font17" id="p35_t125" reading_order_no="124" segment_no="15" tag_type="formula">γK .</text>
<text top="614" left="108" width="188" height="9" font="font3" id="p35_t126" reading_order_no="125" segment_no="16" tag_type="text">Next, from our stepsize rule ( 30 ) it follows that</text>
<text top="639" left="196" width="101" height="12" font="font34" id="p35_t127" reading_order_no="126" segment_no="17" tag_type="formula">E f ( x K ) − f ( x ∗ ) = O</text>
<text top="633" left="308" width="18" height="12" font="font17" id="p35_t128" reading_order_no="127" segment_no="17" tag_type="formula">LR 2 0</text>
<text top="648" left="312" width="8" height="9" font="font17" id="p35_t129" reading_order_no="128" segment_no="17" tag_type="formula">K</text>
<text top="634" left="330" width="31" height="16" font="font18" id="p35_t130" reading_order_no="129" segment_no="17" tag_type="formula">+ σR 0</text>
<text top="640" left="341" width="8" height="9" font="font19" id="p35_t131" reading_order_no="130" segment_no="17" tag_type="formula">√</text>
<text top="649" left="349" width="14" height="9" font="font17" id="p35_t132" reading_order_no="131" segment_no="17" tag_type="formula">nK</text>
<text top="634" left="368" width="39" height="16" font="font18" id="p35_t133" reading_order_no="132" segment_no="17" tag_type="formula">+ nbσR 0</text>
<text top="648" left="384" width="17" height="9" font="font17" id="p35_t134" reading_order_no="133" segment_no="17" tag_type="formula">mK</text>
<text top="667" left="108" width="72" height="9" font="font3" id="p35_t135" reading_order_no="134" segment_no="18" tag_type="text">meaning that after</text>
<text top="687" left="232" width="30" height="9" font="font17" id="p35_t136" reading_order_no="135" segment_no="19" tag_type="formula">K = O</text>
<text top="679" left="273" width="18" height="12" font="font17" id="p35_t137" reading_order_no="136" segment_no="19" tag_type="formula">LR 2 0</text>
<text top="694" left="280" width="5" height="9" font="font17" id="p35_t138" reading_order_no="137" segment_no="19" tag_type="formula">ε</text>
<text top="679" left="295" width="33" height="17" font="font18" id="p35_t139" reading_order_no="138" segment_no="19" tag_type="formula">+ σ 2 R 2 0</text>
<text top="693" left="310" width="15" height="10" font="font17" id="p35_t140" reading_order_no="139" segment_no="19" tag_type="formula">nε 2</text>
<text top="681" left="332" width="39" height="15" font="font18" id="p35_t141" reading_order_no="140" segment_no="19" tag_type="formula">+ nbσR 0</text>
<text top="694" left="351" width="13" height="9" font="font17" id="p35_t142" reading_order_no="141" segment_no="19" tag_type="formula">mε</text>
<text top="711" left="108" width="243" height="12" font="font3" id="p35_t143" reading_order_no="142" segment_no="20" tag_type="text">iterations BTARD-SGD guarantees E [ f ( x K ) − f ( x ∗ )] ≤ ε .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p35_t144" reading_order_no="143" segment_no="21" tag_type="text">35<a href="deeplearning_paper1.html#35">(</a></text>
</page>
<page number="36" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="20" height="9" font="font1" id="p36_t1" reading_order_no="0" segment_no="0" tag_type="title">F.2.5</text>
<text top="75" left="138" width="197" height="9" font="font1" id="p36_t2" reading_order_no="1" segment_no="0" tag_type="title">Strongly convex case: Restarted-BTARD-SGD</text>
<text top="94" left="108" width="396" height="9" font="font3" id="p36_t3" reading_order_no="2" segment_no="1" tag_type="text">In this section, we provide the complete statements and the full proofs of the convergence results</text>
<text top="105" left="108" width="396" height="9" font="font3" id="p36_t4" reading_order_no="3" segment_no="1" tag_type="text">for the restarted version of BTARD-SGD (R ESTARTED -BTARD-SGD, Alg. 7 ) when the objective</text>
<text top="116" left="108" width="168" height="9" font="font3" id="p36_t5" reading_order_no="4" segment_no="1" tag_type="text">function f is smooth and strongly convex.</text>
<text top="142" left="108" width="169" height="9" font="font1" id="p36_t6" reading_order_no="5" segment_no="2" tag_type="title">Algorithm 7 R ESTARTED -BTARD-SGD</text>
<text top="157" left="108" width="398" height="12" font="font1" id="p36_t7" reading_order_no="6" segment_no="3" tag_type="code">Input: x 0 – starting point, r – number of restarts, { γ t } r t =1 – stepsizes for BTARD-SGD, { K t } r t =1 –<a href="deeplearning_paper1.html#36">7</a></text>
<text top="168" left="125" width="224" height="13" font="font3" id="p36_t8" reading_order_no="7" segment_no="3" tag_type="code">number of iterations for BTARD-SGD, { s i,k,t } n,K − 1 ,r<a href="deeplearning_paper1.html#36">) </a>when the objective</text>
<text top="172" left="318" width="173" height="11" font="font3" id="p36_t9" reading_order_no="8" segment_no="3" tag_type="code">i,k,t =0 , 0 , 0 – seeds for batches computations</text>
<text top="183" left="113" width="45" height="12" font="font29" id="p36_t10" reading_order_no="9" segment_no="3" tag_type="code">1: b x 0 = x 0</text>
<text top="196" left="113" width="99" height="9" font="font1" id="p36_t11" reading_order_no="10" segment_no="3" tag_type="code">2: for t = 1 , 2 , . . . , r do</text>
<text top="208" left="113" width="7" height="8" font="font9" id="p36_t12" reading_order_no="11" segment_no="3" tag_type="code">3:</text>
<text top="205" left="140" width="364" height="12" font="font3" id="p36_t13" reading_order_no="12" segment_no="3" tag_type="code">Run BTARD-SGD (Alg. 6 ) for K t iterations with stepsize γ t , starting point b x t − 1 , and</text>
<text top="222" left="125" width="194" height="13" font="font3" id="p36_t14" reading_order_no="13" segment_no="3" tag_type="code">seeds for batches computations { s i,k,t } n,K − 1</text>
<text top="225" left="294" width="30" height="11" font="font3" id="p36_t15" reading_order_no="14" segment_no="3" tag_type="code">i,k =0 , 0 .</text>
<text top="224" left="334" width="68" height="12" font="font3" id="p36_t16" reading_order_no="15" segment_no="3" tag_type="code">Define b x t as b x t</text>
<text top="225" left="410" width="8" height="9" font="font18" id="p36_t17" reading_order_no="16" segment_no="3" tag_type="code">=</text>
<text top="223" left="429" width="4" height="6" font="font30" id="p36_t18" reading_order_no="17" segment_no="3" tag_type="code">1</text>
<text top="231" left="426" width="10" height="6" font="font28" id="p36_t19" reading_order_no="18" segment_no="3" tag_type="code">K t</text>
<text top="218" left="441" width="11" height="10" font="font29" id="p36_t20" reading_order_no="19" segment_no="3" tag_type="code">K t P</text>
<text top="236" left="439" width="14" height="6" font="font28" id="p36_t21" reading_order_no="20" segment_no="3" tag_type="code">k =0</text>
<text top="224" left="455" width="49" height="10" font="font17" id="p36_t22" reading_order_no="21" segment_no="3" tag_type="code">x k,t , where</text>
<text top="243" left="125" width="258" height="11" font="font17" id="p36_t23" reading_order_no="22" segment_no="3" tag_type="code">x 0 ,t , x 1 ,t , . . . , x K t ,t are the iterates produced by BTARD-SGD.</text>
<text top="256" left="108" width="49" height="12" font="font1" id="p36_t24" reading_order_no="23" segment_no="3" tag_type="code">Output: b x r</text>
<text top="294" left="108" width="393" height="9" font="font3" id="p36_t25" reading_order_no="24" segment_no="4" tag_type="text">We start with the case when the number of attacking Byzantine workers is known at each iteration.</text>
<text top="307" left="108" width="397" height="12" font="font1" id="p36_t26" reading_order_no="25" segment_no="5" tag_type="text">Theorem F.5. Let As. 3.2 , ( Option I ) from As. 3.1 hold, Q = R d , f be L -smooth (see Def. F.1 ), µ -</text>
<text top="318" left="108" width="397" height="11" font="font13" id="p36_t27" reading_order_no="26" segment_no="5" tag_type="text">strongly convex (see Def. F.2 ), and x ∗ be some optimum of f . Moreover, assume that b ≤ 0 . 15( n − m ) ,</text>
<text top="330" left="108" width="396" height="10" font="font17" id="p36_t28" reading_order_no="27" segment_no="5" tag_type="text">m ≤ ( n − 2 b ) / 2 , and the exact number of attacking Byzantine peers is known to all good peers at each</text>
<text top="342" left="108" width="110" height="9" font="font13" id="p36_t29" reading_order_no="28" segment_no="5" tag_type="text">iteration. Next, assume that</text>
<text top="373" left="126" width="38" height="9" font="font17" id="p36_t30" reading_order_no="29" segment_no="6" tag_type="formula">γ t = min</text>
<text top="359" left="166" width="9" height="4" font="font29" id="p36_t31" reading_order_no="30" segment_no="6" tag_type="formula"></text>
<text top="368" left="166" width="9" height="4" font="font29" id="p36_t32" reading_order_no="31" segment_no="6" tag_type="formula"></text>
<text top="386" left="166" width="9" height="4" font="font29" id="p36_t33" reading_order_no="32" segment_no="6" tag_type="formula"></text>
<text top="366" left="180" width="5" height="9" font="font18" id="p36_t34" reading_order_no="33" segment_no="6" tag_type="formula">1</text>
<text top="373" left="176" width="16" height="15" font="font18" id="p36_t35" reading_order_no="34" segment_no="6" tag_type="formula">4 L ,</text>
<text top="360" left="194" width="10" height="4" font="font29" id="p36_t36" reading_order_no="35" segment_no="6" tag_type="formula">s</text>
<text top="364" left="220" width="22" height="11" font="font18" id="p36_t37" reading_order_no="36" segment_no="6" tag_type="formula">7 nR 2</text>
<text top="371" left="238" width="4" height="6" font="font30" id="p36_t38" reading_order_no="37" segment_no="6" tag_type="formula">0</text>
<text top="379" left="205" width="52" height="10" font="font18" id="p36_t39" reading_order_no="38" segment_no="6" tag_type="formula">120 · 2 t σ 2 K t</text>
<text top="373" left="259" width="3" height="9" font="font17" id="p36_t40" reading_order_no="39" segment_no="6" tag_type="formula">,</text>
<text top="363" left="264" width="10" height="4" font="font29" id="p36_t41" reading_order_no="40" segment_no="6" tag_type="formula">r</text>
<text top="364" left="297" width="24" height="11" font="font17" id="p36_t42" reading_order_no="41" segment_no="6" tag_type="formula">m 2 R 2</text>
<text top="371" left="317" width="4" height="6" font="font30" id="p36_t43" reading_order_no="42" segment_no="6" tag_type="formula">0</text>
<text top="379" left="275" width="68" height="9" font="font18" id="p36_t44" reading_order_no="43" segment_no="6" tag_type="formula">1440 · 2 t Cσ 2 n 2 δ</text>
<text top="359" left="345" width="9" height="4" font="font29" id="p36_t45" reading_order_no="44" segment_no="6" tag_type="formula"></text>
<text top="368" left="345" width="9" height="4" font="font29" id="p36_t46" reading_order_no="45" segment_no="6" tag_type="formula"></text>
<text top="386" left="345" width="9" height="4" font="font29" id="p36_t47" reading_order_no="46" segment_no="6" tag_type="formula"></text>
<text top="373" left="356" width="3" height="9" font="font17" id="p36_t48" reading_order_no="47" segment_no="6" tag_type="formula">,</text>
<text top="371" left="370" width="18" height="11" font="font18" id="p36_t49" reading_order_no="48" segment_no="6" tag_type="formula">∆ k,t</text>
<text top="366" left="378" width="49" height="17" font="font18" id="p36_t50" reading_order_no="49" segment_no="6" tag_type="formula">max = (1 +</text>
<text top="357" left="429" width="8" height="9" font="font19" id="p36_t51" reading_order_no="50" segment_no="6" tag_type="formula">√</text>
<text top="366" left="437" width="9" height="9" font="font18" id="p36_t52" reading_order_no="51" segment_no="6" tag_type="formula">3)</text>
<text top="357" left="446" width="8" height="9" font="font19" id="p36_t53" reading_order_no="52" segment_no="6" tag_type="formula">√</text>
<text top="366" left="454" width="11" height="9" font="font18" id="p36_t54" reading_order_no="53" segment_no="6" tag_type="formula">2 σ</text>
<text top="379" left="416" width="19" height="11" font="font29" id="p36_t55" reading_order_no="54" segment_no="6" tag_type="formula">p n t</text>
<text top="380" left="432" width="26" height="12" font="font19" id="p36_t56" reading_order_no="55" segment_no="6" tag_type="formula">k − m</text>
<text top="373" left="467" width="3" height="9" font="font17" id="p36_t57" reading_order_no="56" segment_no="6" tag_type="formula">,</text>
<text top="373" left="487" width="17" height="9" font="font3" id="p36_t58" reading_order_no="57" segment_no="6" tag_type="text">(35)</text>
<text top="417" left="151" width="22" height="10" font="font17" id="p36_t59" reading_order_no="58" segment_no="7" tag_type="formula">K t =</text>
<text top="407" left="176" width="6" height="4" font="font29" id="p36_t60" reading_order_no="59" segment_no="7" tag_type="formula">&amp;</text>
<text top="417" left="182" width="19" height="9" font="font18" id="p36_t61" reading_order_no="60" segment_no="7" tag_type="formula">max</text>
<text top="407" left="202" width="27" height="12" font="font29" id="p36_t62" reading_order_no="61" segment_no="7" tag_type="formula">( 16 L</text>
<text top="409" left="217" width="47" height="24" font="font17" id="p36_t63" reading_order_no="62" segment_no="7" tag_type="formula">µ , 32 σ 2 2 t</text>
<text top="423" left="238" width="22" height="12" font="font17" id="p36_t64" reading_order_no="63" segment_no="7" tag_type="formula">µ 2 R 2 0</text>
<text top="410" left="265" width="16" height="16" font="font17" id="p36_t65" reading_order_no="64" segment_no="7" tag_type="formula">, 48</text>
<text top="401" left="281" width="8" height="9" font="font19" id="p36_t66" reading_order_no="65" segment_no="7" tag_type="formula">√</text>
<text top="410" left="289" width="24" height="9" font="font18" id="p36_t67" reading_order_no="66" segment_no="7" tag_type="formula">10 Cn</text>
<text top="401" left="313" width="8" height="9" font="font19" id="p36_t68" reading_order_no="67" segment_no="7" tag_type="formula">√</text>
<text top="408" left="321" width="21" height="11" font="font17" id="p36_t69" reading_order_no="68" segment_no="7" tag_type="formula">δσ 2 t 2</text>
<text top="424" left="294" width="26" height="10" font="font17" id="p36_t70" reading_order_no="69" segment_no="7" tag_type="formula">mµR 0</text>
<text top="407" left="345" width="14" height="4" font="font29" id="p36_t71" reading_order_no="70" segment_no="7" tag_type="formula">)'<a href="deeplearning_paper1.html#24">6</a></text>
<text top="417" left="361" width="3" height="9" font="font17" id="p36_t72" reading_order_no="71" segment_no="7" tag_type="formula">,<a href="deeplearning_paper1.html#24">) </a>for</text>
<text top="417" left="375" width="16" height="9" font="font17" id="p36_t73" reading_order_no="72" segment_no="7" tag_type="formula">r =</text>
<text top="417" left="399" width="17" height="11" font="font18" id="p36_t74" reading_order_no="73" segment_no="7" tag_type="formula">log 2</text>
<text top="409" left="419" width="18" height="12" font="font17" id="p36_t75" reading_order_no="74" segment_no="7" tag_type="formula">µR 2 0</text>
<text top="424" left="426" width="5" height="9" font="font17" id="p36_t76" reading_order_no="75" segment_no="7" tag_type="formula">ε</text>
<text top="417" left="446" width="15" height="9" font="font19" id="p36_t77" reading_order_no="76" segment_no="7" tag_type="formula">− 1</text>
<text top="417" left="487" width="17" height="9" font="font3" id="p36_t78" reading_order_no="77" segment_no="7" tag_type="text">(36)</text>
<text top="443" left="108" width="119" height="11" font="font13" id="p36_t79" reading_order_no="78" segment_no="8" tag_type="formula">where R 0 ≥ k x 0 − x ∗ k , ∆ k,t</text>
<text top="445" left="217" width="286" height="10" font="font13" id="p36_t80" reading_order_no="79" segment_no="8" tag_type="text">max is the parameter for verification 3 at iteration k of BTARD-SGD</text>
<text top="454" left="108" width="100" height="11" font="font13" id="p36_t81" reading_order_no="80" segment_no="8" tag_type="text">during the t -th restart, n t</text>
<text top="456" left="205" width="299" height="11" font="font13" id="p36_t82" reading_order_no="81" segment_no="8" tag_type="text">k is the total number of workers at iteration k of t -th restart. Then, we have</text>
<text top="465" left="108" width="396" height="12" font="font34" id="p36_t83" reading_order_no="82" segment_no="8" tag_type="text">E [ f ( b x r ) − f ( x ∗ )] ≤ ε after r restarts of BTARD-SGD and the total number of executed iterations</text>
<text top="478" left="108" width="80" height="9" font="font13" id="p36_t84" reading_order_no="83" segment_no="8" tag_type="text">of BTARD-SGD is</text>
<text top="489" left="216" width="4" height="6" font="font28" id="p36_t85" reading_order_no="84" segment_no="9" tag_type="formula">r</text>
<text top="497" left="211" width="14" height="4" font="font29" id="p36_t86" reading_order_no="85" segment_no="9" tag_type="formula">X</text>
<text top="513" left="211" width="13" height="6" font="font28" id="p36_t87" reading_order_no="86" segment_no="9" tag_type="formula">t =1</text>
<text top="499" left="227" width="33" height="10" font="font17" id="p36_t88" reading_order_no="87" segment_no="9" tag_type="formula">K t = O</text>
<text top="493" left="271" width="7" height="9" font="font17" id="p36_t89" reading_order_no="88" segment_no="9" tag_type="formula">L</text>
<text top="491" left="271" width="43" height="25" font="font17" id="p36_t90" reading_order_no="89" segment_no="9" tag_type="formula">µ log µR 2</text>
<text top="498" left="310" width="4" height="6" font="font30" id="p36_t91" reading_order_no="90" segment_no="9" tag_type="formula">0</text>
<text top="507" left="303" width="5" height="9" font="font17" id="p36_t92" reading_order_no="91" segment_no="9" tag_type="formula">ε</text>
<text top="491" left="318" width="24" height="18" font="font18" id="p36_t93" reading_order_no="92" segment_no="9" tag_type="formula">+ σ 2</text>
<text top="493" left="329" width="38" height="23" font="font17" id="p36_t94" reading_order_no="93" segment_no="9" tag_type="formula">nµε + n</text>
<text top="484" left="367" width="8" height="9" font="font19" id="p36_t95" reading_order_no="94" segment_no="9" tag_type="formula">√</text>
<text top="493" left="376" width="10" height="9" font="font17" id="p36_t96" reading_order_no="95" segment_no="9" tag_type="formula">δσ</text>
<text top="500" left="360" width="28" height="16" font="font17" id="p36_t97" reading_order_no="96" segment_no="9" tag_type="formula">m √ µε</text>
<text top="489" left="389" width="8" height="4" font="font29" id="p36_t98" reading_order_no="97" segment_no="9" tag_type="formula">!</text>
<text top="500" left="399" width="3" height="9" font="font17" id="p36_t99" reading_order_no="98" segment_no="9" tag_type="formula">.</text>
<text top="500" left="487" width="17" height="9" font="font3" id="p36_t100" reading_order_no="99" segment_no="9" tag_type="text">(37)</text>
<text top="536" left="108" width="213" height="9" font="font13" id="p36_t101" reading_order_no="100" segment_no="10" tag_type="text">Proof. Theorem F.3 implies that BTARD-SGD with</text>
<text top="565" left="211" width="36" height="9" font="font17" id="p36_t102" reading_order_no="101" segment_no="11" tag_type="formula">γ = min</text>
<text top="554" left="249" width="17" height="13" font="font29" id="p36_t103" reading_order_no="102" segment_no="11" tag_type="formula">( 1</text>
<text top="565" left="258" width="16" height="16" font="font18" id="p36_t104" reading_order_no="103" segment_no="11" tag_type="formula">4 L ,</text>
<text top="555" left="275" width="40" height="14" font="font29" id="p36_t105" reading_order_no="104" segment_no="11" tag_type="formula">r 7 nR 2 0</text>
<text top="565" left="286" width="39" height="16" font="font18" id="p36_t106" reading_order_no="105" segment_no="11" tag_type="formula">120 σ 2 K ,</text>
<text top="555" left="327" width="10" height="4" font="font29" id="p36_t107" reading_order_no="106" segment_no="11" tag_type="formula">r</text>
<text top="557" left="352" width="25" height="12" font="font17" id="p36_t108" reading_order_no="107" segment_no="11" tag_type="formula">m 2 R 2 0</text>
<text top="571" left="338" width="53" height="10" font="font18" id="p36_t109" reading_order_no="108" segment_no="11" tag_type="formula">1440 Cσ 2 n 2 δ</text>
<text top="554" left="393" width="8" height="4" font="font29" id="p36_t110" reading_order_no="109" segment_no="11" tag_type="formula">)</text>
<text top="592" left="108" width="43" height="9" font="font3" id="p36_t111" reading_order_no="110" segment_no="12" tag_type="text">guarantees</text>
<text top="604" left="250" width="111" height="18" font="font34" id="p36_t112" reading_order_no="111" segment_no="13" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ 2 R 2 0</text>
<text top="619" left="345" width="14" height="9" font="font17" id="p36_t113" reading_order_no="112" segment_no="13" tag_type="formula">γK</text>
<text top="634" left="108" width="232" height="9" font="font3" id="p36_t114" reading_order_no="113" segment_no="14" tag_type="text">after K iterations. Therefore, after the first restart we have</text>
<text top="651" left="233" width="106" height="19" font="font34" id="p36_t115" reading_order_no="114" segment_no="15" tag_type="formula">E [ f ( b x 1 ) − f ( x ∗ )] ≤ 2 R 2 0</text>
<text top="666" left="319" width="22" height="10" font="font17" id="p36_t116" reading_order_no="115" segment_no="15" tag_type="formula">γ 1 K 1</text>
<text top="651" left="346" width="29" height="17" font="font19" id="p36_t117" reading_order_no="116" segment_no="15" tag_type="formula">≤ µR 2 0</text>
<text top="666" left="364" width="5" height="9" font="font18" id="p36_t118" reading_order_no="117" segment_no="15" tag_type="formula">4</text>
<text top="659" left="377" width="3" height="9" font="font17" id="p36_t119" reading_order_no="118" segment_no="15" tag_type="formula">.</text>
<text top="683" left="108" width="224" height="11" font="font3" id="p36_t120" reading_order_no="119" segment_no="16" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="704" left="187" width="6" height="9" font="font17" id="p36_t121" reading_order_no="120" segment_no="17" tag_type="formula">µ</text>
<text top="703" left="188" width="234" height="24" font="font18" id="p36_t122" reading_order_no="121" segment_no="17" tag_type="formula">2 k b x 1 − x ∗ k 2 ≤ f ( b x 1 ) − f ( x ∗ ) = ⇒ E [ k b x 1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="711" left="414" width="12" height="16" font="font18" id="p36_t123" reading_order_no="122" segment_no="17" tag_type="formula">2 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p36_t124" reading_order_no="123" segment_no="18" tag_type="text">36</text>
</page>
<page number="37" position="absolute" top="0" left="0" height="792" width="612">
<text top="72" left="108" width="216" height="15" font="font3" id="p37_t1" reading_order_no="0" segment_no="0" tag_type="text">Next, assume that we have E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="72" left="310" width="196" height="16" font="font3" id="p37_t2" reading_order_no="1" segment_no="0" tag_type="text">2 t +1 , E [ k b x t − x ∗ k 2 ] ≤ R 2 0 2 t for some t ≤ r − 1 .</text>
<text top="87" left="108" width="125" height="9" font="font3" id="p37_t3" reading_order_no="2" segment_no="0" tag_type="text">Then, Theorem F.3 implies that</text>
<text top="105" left="222" width="164" height="19" font="font34" id="p37_t4" reading_order_no="3" segment_no="1" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ ) | x t ] ≤ 2 k b x t − x ∗ k 2</text>
<text top="120" left="350" width="20" height="10" font="font17" id="p37_t5" reading_order_no="4" segment_no="1" tag_type="formula">γ t K t</text>
<text top="113" left="387" width="3" height="9" font="font17" id="p37_t6" reading_order_no="5" segment_no="1" tag_type="formula">.</text>
<text top="138" left="108" width="304" height="9" font="font3" id="p37_t7" reading_order_no="6" segment_no="2" tag_type="text">Taking the full expectation from the both sides of previous inequality we get</text>
<text top="155" left="185" width="159" height="19" font="font34" id="p37_t8" reading_order_no="7" segment_no="3" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ )] ≤ 2 E [ k b x t − x ∗ k 2 ]</text>
<text top="170" left="302" width="20" height="10" font="font17" id="p37_t9" reading_order_no="8" segment_no="3" tag_type="formula">γ t K t</text>
<text top="163" left="348" width="8" height="9" font="font19" id="p37_t10" reading_order_no="9" segment_no="3" tag_type="formula">≤</text>
<text top="155" left="366" width="16" height="12" font="font18" id="p37_t11" reading_order_no="10" segment_no="3" tag_type="formula">2 R 2 0</text>
<text top="170" left="360" width="28" height="10" font="font18" id="p37_t12" reading_order_no="11" segment_no="3" tag_type="formula">2 t γ t K t</text>
<text top="155" left="393" width="29" height="17" font="font19" id="p37_t13" reading_order_no="12" segment_no="3" tag_type="formula">≤ µR 2 0</text>
<text top="164" left="404" width="23" height="15" font="font18" id="p37_t14" reading_order_no="13" segment_no="3" tag_type="formula">2 t +2 .</text>
<text top="187" left="108" width="224" height="11" font="font3" id="p37_t15" reading_order_no="14" segment_no="4" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="208" left="170" width="6" height="9" font="font17" id="p37_t16" reading_order_no="15" segment_no="5" tag_type="formula">µ</text>
<text top="222" left="171" width="5" height="9" font="font18" id="p37_t17" reading_order_no="16" segment_no="5" tag_type="formula">2</text>
<text top="214" left="177" width="5" height="9" font="font19" id="p37_t18" reading_order_no="17" segment_no="5" tag_type="formula">k</text>
<text top="213" left="182" width="170" height="13" font="font29" id="p37_t19" reading_order_no="18" segment_no="5" tag_type="formula">b x t +1 − x ∗ k 2 ≤ f ( b x t +1 ) − f ( x ∗ ) = ⇒ E [ k</text>
<text top="207" left="352" width="83" height="19" font="font29" id="p37_t20" reading_order_no="19" segment_no="5" tag_type="formula">b x t +1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="215" left="420" width="23" height="16" font="font18" id="p37_t21" reading_order_no="20" segment_no="5" tag_type="formula">2 t +1 .</text>
<text top="238" left="108" width="281" height="9" font="font3" id="p37_t22" reading_order_no="21" segment_no="6" tag_type="text">Therefore, by mathematical induction we have that for all t = 1 , . . . , r</text>
<text top="255" left="199" width="104" height="19" font="font34" id="p37_t23" reading_order_no="22" segment_no="7" tag_type="formula">E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="263" left="285" width="23" height="16" font="font18" id="p37_t24" reading_order_no="23" segment_no="7" tag_type="formula">2 t +1 ,</text>
<text top="261" left="319" width="58" height="13" font="font34" id="p37_t25" reading_order_no="24" segment_no="7" tag_type="formula">E k b x t − x ∗ k 2</text>
<text top="255" left="385" width="23" height="17" font="font19" id="p37_t26" reading_order_no="25" segment_no="7" tag_type="formula">≤ R 2 0</text>
<text top="263" left="398" width="15" height="16" font="font18" id="p37_t27" reading_order_no="26" segment_no="7" tag_type="formula">2 t .</text>
<text top="286" left="108" width="85" height="15" font="font3" id="p37_t28" reading_order_no="27" segment_no="8" tag_type="text">Then, after r = l log 2</text>
<text top="286" left="196" width="14" height="16" font="font28" id="p37_t29" reading_order_no="28" segment_no="8" tag_type="text">µR 2 0 ε</text>
<text top="286" left="212" width="292" height="15" font="font29" id="p37_t30" reading_order_no="29" segment_no="8" tag_type="text">m − 1 restarts of BTARD-SGD we have E [ f ( b x r ) − f ( x ∗ )] ≤ ε . The total</text>
<text top="305" left="108" width="203" height="9" font="font3" id="p37_t31" reading_order_no="30" segment_no="8" tag_type="text">number of iterations executed by BTARD-SGD is</text>
<text top="323" left="175" width="4" height="6" font="font28" id="p37_t32" reading_order_no="31" segment_no="9" tag_type="formula">r</text>
<text top="330" left="170" width="14" height="4" font="font29" id="p37_t33" reading_order_no="32" segment_no="9" tag_type="formula">X</text>
<text top="347" left="170" width="13" height="6" font="font28" id="p37_t34" reading_order_no="33" segment_no="9" tag_type="formula">t =1</text>
<text top="333" left="186" width="11" height="10" font="font17" id="p37_t35" reading_order_no="34" segment_no="9" tag_type="formula">K t</text>
<text top="333" left="208" width="8" height="9" font="font18" id="p37_t36" reading_order_no="35" segment_no="9" tag_type="formula">=</text>
<text top="333" left="225" width="8" height="9" font="font19" id="p37_t37" reading_order_no="36" segment_no="9" tag_type="formula">O</text>
<text top="323" left="248" width="4" height="6" font="font28" id="p37_t38" reading_order_no="37" segment_no="9" tag_type="formula">r</text>
<text top="330" left="243" width="14" height="4" font="font29" id="p37_t39" reading_order_no="38" segment_no="9" tag_type="formula">X</text>
<text top="347" left="244" width="13" height="6" font="font28" id="p37_t40" reading_order_no="39" segment_no="9" tag_type="formula">t =1</text>
<text top="333" left="259" width="19" height="9" font="font18" id="p37_t41" reading_order_no="40" segment_no="9" tag_type="formula">max</text>
<text top="323" left="279" width="17" height="13" font="font29" id="p37_t42" reading_order_no="41" segment_no="9" tag_type="formula">( L</text>
<text top="325" left="289" width="33" height="24" font="font17" id="p37_t43" reading_order_no="42" segment_no="9" tag_type="formula">µ , σ 2 2 t</text>
<text top="339" left="302" width="22" height="12" font="font17" id="p37_t44" reading_order_no="43" segment_no="9" tag_type="formula">µ 2 R 2 0</text>
<text top="327" left="326" width="12" height="15" font="font17" id="p37_t45" reading_order_no="44" segment_no="9" tag_type="formula">, n</text>
<text top="318" left="338" width="8" height="9" font="font19" id="p37_t46" reading_order_no="45" segment_no="9" tag_type="formula">√</text>
<text top="324" left="346" width="20" height="12" font="font17" id="p37_t47" reading_order_no="46" segment_no="9" tag_type="formula">δσ 2 t 2</text>
<text top="340" left="336" width="27" height="10" font="font17" id="p37_t48" reading_order_no="47" segment_no="9" tag_type="formula">mµR 0</text>
<text top="323" left="369" width="16" height="4" font="font29" id="p37_t49" reading_order_no="48" segment_no="9" tag_type="formula">)!</text>
<text top="367" left="208" width="8" height="9" font="font18" id="p37_t50" reading_order_no="49" segment_no="9" tag_type="formula">=<a href="deeplearning_paper1.html#32">F.3</a></text>
<text top="367" left="225" width="8" height="9" font="font19" id="p37_t51" reading_order_no="50" segment_no="9" tag_type="formula">O</text>
<text top="361" left="244" width="7" height="9" font="font17" id="p37_t52" reading_order_no="51" segment_no="9" tag_type="formula">L</text>
<text top="359" left="245" width="46" height="24" font="font17" id="p37_t53" reading_order_no="52" segment_no="9" tag_type="formula">µ r + σ 2 2 r</text>
<text top="373" left="270" width="23" height="12" font="font17" id="p37_t54" reading_order_no="53" segment_no="9" tag_type="formula">µ 2 R 2 0</text>
<text top="361" left="296" width="18" height="15" font="font18" id="p37_t55" reading_order_no="54" segment_no="9" tag_type="formula">+ n</text>
<text top="352" left="314" width="8" height="9" font="font19" id="p37_t56" reading_order_no="55" segment_no="9" tag_type="formula">√</text>
<text top="358" left="322" width="20" height="12" font="font17" id="p37_t57" reading_order_no="56" segment_no="9" tag_type="formula">δσ 2 r 2</text>
<text top="374" left="312" width="27" height="10" font="font17" id="p37_t58" reading_order_no="57" segment_no="9" tag_type="formula">mµR 0</text>
<text top="357" left="345" width="8" height="4" font="font29" id="p37_t59" reading_order_no="58" segment_no="9" tag_type="formula">!</text>
<text top="401" left="208" width="8" height="9" font="font18" id="p37_t60" reading_order_no="59" segment_no="9" tag_type="formula">=</text>
<text top="401" left="225" width="8" height="9" font="font19" id="p37_t61" reading_order_no="60" segment_no="9" tag_type="formula">O</text>
<text top="395" left="244" width="7" height="9" font="font17" id="p37_t62" reading_order_no="61" segment_no="9" tag_type="formula">L</text>
<text top="393" left="245" width="42" height="24" font="font17" id="p37_t63" reading_order_no="62" segment_no="9" tag_type="formula">µ log µR 2 0</text>
<text top="408" left="276" width="5" height="9" font="font17" id="p37_t64" reading_order_no="63" segment_no="9" tag_type="formula">ε</text>
<text top="401" left="291" width="8" height="9" font="font18" id="p37_t65" reading_order_no="64" segment_no="9" tag_type="formula">+</text>
<text top="393" left="308" width="10" height="11" font="font17" id="p37_t66" reading_order_no="65" segment_no="9" tag_type="formula">σ 2</text>
<text top="407" left="302" width="22" height="12" font="font17" id="p37_t67" reading_order_no="66" segment_no="9" tag_type="formula">µ 2 R 2 0</text>
<text top="393" left="328" width="24" height="17" font="font19" id="p37_t68" reading_order_no="67" segment_no="9" tag_type="formula">· µR 2 0</text>
<text top="408" left="341" width="5" height="9" font="font17" id="p37_t69" reading_order_no="68" segment_no="9" tag_type="formula">ε</text>
<text top="395" left="356" width="18" height="15" font="font18" id="p37_t70" reading_order_no="69" segment_no="9" tag_type="formula">+ n</text>
<text top="386" left="374" width="8" height="9" font="font19" id="p37_t71" reading_order_no="70" segment_no="9" tag_type="formula">√</text>
<text top="395" left="382" width="10" height="9" font="font17" id="p37_t72" reading_order_no="71" segment_no="9" tag_type="formula">δσ</text>
<text top="408" left="367" width="26" height="10" font="font17" id="p37_t73" reading_order_no="72" segment_no="9" tag_type="formula">mµR 0</text>
<text top="401" left="397" width="3" height="9" font="font19" id="p37_t74" reading_order_no="73" segment_no="9" tag_type="formula">·</text>
<text top="391" left="402" width="29" height="14" font="font29" id="p37_t75" reading_order_no="74" segment_no="9" tag_type="formula">r µR 2 0</text>
<text top="408" left="420" width="5" height="9" font="font17" id="p37_t76" reading_order_no="75" segment_no="9" tag_type="formula">ε</text>
<text top="391" left="433" width="8" height="4" font="font29" id="p37_t77" reading_order_no="76" segment_no="9" tag_type="formula">!</text>
<text top="435" left="208" width="8" height="9" font="font18" id="p37_t78" reading_order_no="77" segment_no="9" tag_type="formula">=</text>
<text top="435" left="225" width="8" height="9" font="font19" id="p37_t79" reading_order_no="78" segment_no="9" tag_type="formula">O</text>
<text top="428" left="244" width="7" height="9" font="font17" id="p37_t80" reading_order_no="79" segment_no="9" tag_type="formula">L</text>
<text top="427" left="245" width="42" height="24" font="font17" id="p37_t81" reading_order_no="80" segment_no="9" tag_type="formula">µ log µR 2 0</text>
<text top="442" left="276" width="5" height="9" font="font17" id="p37_t82" reading_order_no="81" segment_no="9" tag_type="formula">ε</text>
<text top="427" left="291" width="24" height="17" font="font18" id="p37_t83" reading_order_no="82" segment_no="9" tag_type="formula">+ σ 2</text>
<text top="428" left="302" width="39" height="23" font="font17" id="p37_t84" reading_order_no="83" segment_no="9" tag_type="formula">nµε + n</text>
<text top="419" left="341" width="8" height="9" font="font19" id="p37_t85" reading_order_no="84" segment_no="9" tag_type="formula">√</text>
<text top="428" left="349" width="10" height="9" font="font17" id="p37_t86" reading_order_no="85" segment_no="9" tag_type="formula">δσ</text>
<text top="435" left="334" width="28" height="16" font="font17" id="p37_t87" reading_order_no="86" segment_no="9" tag_type="formula">m √ µε</text>
<text top="425" left="362" width="8" height="4" font="font29" id="p37_t88" reading_order_no="87" segment_no="9" tag_type="formula">!</text>
<text top="435" left="372" width="3" height="9" font="font17" id="p37_t89" reading_order_no="88" segment_no="9" tag_type="formula">.</text>
<text top="490" left="108" width="396" height="9" font="font3" id="p37_t90" reading_order_no="89" segment_no="10" tag_type="text">In the strongly convex case, similar observations hold as in the non-convex case. Next, we derive the</text>
<text top="501" left="108" width="278" height="11" font="font3" id="p37_t91" reading_order_no="90" segment_no="10" tag_type="text">result without assuming that b b k is known to all peers at each iteration.</text>
<text top="517" left="108" width="397" height="11" font="font1" id="p37_t92" reading_order_no="91" segment_no="11" tag_type="text">Theorem F.6. Let As. 3.2 , ( Option II ) from As. 3.1 hold, Q = R d , f be L -smooth (see Def. F.1 ), µ -</text>
<text top="527" left="108" width="397" height="11" font="font13" id="p37_t93" reading_order_no="92" segment_no="11" tag_type="text">strongly convex (see Def. F.2 ), and x ∗ be some optimum of f . Moreover, assume that b ≤ 0 . 15( n − m ) ,</text>
<text top="539" left="108" width="396" height="10" font="font17" id="p37_t94" reading_order_no="93" segment_no="11" tag_type="text">m ≤ ( n − 2 b ) / 2 , and δ = 0 is used to compute clipping parameter τ l for CenteredClip . Next, assume</text>
<text top="551" left="108" width="16" height="9" font="font13" id="p37_t95" reading_order_no="94" segment_no="11" tag_type="text">that</text>
<text top="580" left="129" width="38" height="10" font="font17" id="p37_t96" reading_order_no="95" segment_no="12" tag_type="formula">γ t = min</text>
<text top="566" left="169" width="9" height="4" font="font29" id="p37_t97" reading_order_no="96" segment_no="12" tag_type="formula"></text>
<text top="575" left="169" width="9" height="4" font="font29" id="p37_t98" reading_order_no="97" segment_no="12" tag_type="formula"></text>
<text top="593" left="169" width="9" height="4" font="font29" id="p37_t99" reading_order_no="98" segment_no="12" tag_type="formula"></text>
<text top="574" left="183" width="5" height="9" font="font18" id="p37_t100" reading_order_no="99" segment_no="12" tag_type="formula">1</text>
<text top="580" left="179" width="16" height="16" font="font18" id="p37_t101" reading_order_no="100" segment_no="12" tag_type="formula">4 L ,</text>
<text top="568" left="197" width="10" height="4" font="font29" id="p37_t102" reading_order_no="101" segment_no="12" tag_type="formula">s</text>
<text top="572" left="223" width="22" height="12" font="font18" id="p37_t103" reading_order_no="102" segment_no="12" tag_type="formula">7 nR 2 0</text>
<text top="586" left="208" width="52" height="11" font="font18" id="p37_t104" reading_order_no="103" segment_no="12" tag_type="formula">120 · 2 t σ 2 K t</text>
<text top="580" left="262" width="3" height="9" font="font17" id="p37_t105" reading_order_no="104" segment_no="12" tag_type="formula">,</text>
<text top="570" left="267" width="10" height="4" font="font29" id="p37_t106" reading_order_no="105" segment_no="12" tag_type="formula">r</text>
<text top="572" left="297" width="24" height="12" font="font17" id="p37_t107" reading_order_no="106" segment_no="12" tag_type="formula">m 2 R 2 0</text>
<text top="586" left="278" width="62" height="10" font="font18" id="p37_t108" reading_order_no="107" segment_no="12" tag_type="formula">72 · 2 t Cσ 2 n 2 b 2</text>
<text top="566" left="342" width="9" height="4" font="font29" id="p37_t109" reading_order_no="108" segment_no="12" tag_type="formula"></text>
<text top="575" left="342" width="9" height="4" font="font29" id="p37_t110" reading_order_no="109" segment_no="12" tag_type="formula"></text>
<text top="593" left="342" width="9" height="4" font="font29" id="p37_t111" reading_order_no="110" segment_no="12" tag_type="formula"></text>
<text top="580" left="353" width="3" height="9" font="font17" id="p37_t112" reading_order_no="111" segment_no="12" tag_type="formula">,</text>
<text top="578" left="367" width="18" height="11" font="font18" id="p37_t113" reading_order_no="112" segment_no="12" tag_type="formula">∆ k,t</text>
<text top="574" left="375" width="49" height="17" font="font18" id="p37_t114" reading_order_no="113" segment_no="12" tag_type="formula">max = (1 +</text>
<text top="565" left="426" width="8" height="9" font="font19" id="p37_t115" reading_order_no="114" segment_no="12" tag_type="formula">√</text>
<text top="574" left="434" width="9" height="9" font="font18" id="p37_t116" reading_order_no="115" segment_no="12" tag_type="formula">3)</text>
<text top="565" left="443" width="8" height="9" font="font19" id="p37_t117" reading_order_no="116" segment_no="12" tag_type="formula">√</text>
<text top="574" left="451" width="11" height="9" font="font18" id="p37_t118" reading_order_no="117" segment_no="12" tag_type="formula">2 σ</text>
<text top="586" left="413" width="42" height="13" font="font29" id="p37_t119" reading_order_no="118" segment_no="12" tag_type="formula">p n t k − m</text>
<text top="580" left="464" width="3" height="9" font="font17" id="p37_t120" reading_order_no="119" segment_no="12" tag_type="formula">,</text>
<text top="580" left="487" width="17" height="9" font="font3" id="p37_t121" reading_order_no="120" segment_no="12" tag_type="text">(38)</text>
<text top="624" left="157" width="23" height="10" font="font17" id="p37_t122" reading_order_no="121" segment_no="13" tag_type="formula">K t =</text>
<text top="614" left="183" width="6" height="4" font="font29" id="p37_t123" reading_order_no="122" segment_no="13" tag_type="formula">&amp;</text>
<text top="624" left="189" width="19" height="9" font="font18" id="p37_t124" reading_order_no="123" segment_no="13" tag_type="formula">max</text>
<text top="614" left="209" width="26" height="13" font="font29" id="p37_t125" reading_order_no="124" segment_no="13" tag_type="formula">( 16 L</text>
<text top="616" left="224" width="47" height="24" font="font17" id="p37_t126" reading_order_no="125" segment_no="13" tag_type="formula">µ , 32 σ 2 2 t</text>
<text top="630" left="245" width="22" height="12" font="font17" id="p37_t127" reading_order_no="126" segment_no="13" tag_type="formula">µ 2 R 2 0</text>
<text top="618" left="272" width="16" height="15" font="font17" id="p37_t128" reading_order_no="127" segment_no="13" tag_type="formula">, 24</text>
<text top="609" left="288" width="8" height="9" font="font19" id="p37_t129" reading_order_no="128" segment_no="13" tag_type="formula">√</text>
<text top="615" left="296" width="39" height="12" font="font18" id="p37_t130" reading_order_no="129" segment_no="13" tag_type="formula">2 Cnbσ 2 t 2</text>
<text top="631" left="294" width="26" height="10" font="font17" id="p37_t131" reading_order_no="130" segment_no="13" tag_type="formula">mµR 0</text>
<text top="614" left="338" width="14" height="4" font="font29" id="p37_t132" reading_order_no="131" segment_no="13" tag_type="formula">)'</text>
<text top="624" left="354" width="3" height="9" font="font17" id="p37_t133" reading_order_no="132" segment_no="13" tag_type="formula">,</text>
<text top="624" left="368" width="16" height="9" font="font17" id="p37_t134" reading_order_no="133" segment_no="13" tag_type="formula">r =</text>
<text top="624" left="392" width="17" height="11" font="font18" id="p37_t135" reading_order_no="134" segment_no="13" tag_type="formula">log 2</text>
<text top="616" left="412" width="18" height="12" font="font17" id="p37_t136" reading_order_no="135" segment_no="13" tag_type="formula">µR 2 0</text>
<text top="631" left="419" width="5" height="9" font="font17" id="p37_t137" reading_order_no="136" segment_no="13" tag_type="formula">ε</text>
<text top="624" left="440" width="15" height="9" font="font19" id="p37_t138" reading_order_no="137" segment_no="13" tag_type="formula">− 1</text>
<text top="625" left="487" width="17" height="9" font="font3" id="p37_t139" reading_order_no="138" segment_no="13" tag_type="text">(39)</text>
<text top="650" left="108" width="119" height="11" font="font13" id="p37_t140" reading_order_no="139" segment_no="14" tag_type="formula">where R 0 ≥ k x 0 − x ∗ k , ∆ k,t</text>
<text top="652" left="217" width="286" height="10" font="font13" id="p37_t141" reading_order_no="140" segment_no="14" tag_type="text">max is the parameter for verification 3 at iteration k of BTARD-SGD</text>
<text top="661" left="108" width="100" height="11" font="font13" id="p37_t142" reading_order_no="141" segment_no="14" tag_type="text">during the t -th restart, n t</text>
<text top="663" left="205" width="299" height="11" font="font13" id="p37_t143" reading_order_no="142" segment_no="14" tag_type="text">k is the total number of workers at iteration k of t -th restart. Then, we have</text>
<text top="672" left="108" width="396" height="12" font="font34" id="p37_t144" reading_order_no="143" segment_no="14" tag_type="text">E [ f ( b x r ) − f ( x ∗ )] ≤ ε after r restarts of BTARD-SGD and the total number of executed iterations</text>
<text top="685" left="108" width="80" height="9" font="font13" id="p37_t145" reading_order_no="144" segment_no="14" tag_type="text">of BTARD-SGD is</text>
<text top="695" left="216" width="4" height="6" font="font28" id="p37_t146" reading_order_no="145" segment_no="15" tag_type="formula">r</text>
<text top="702" left="211" width="14" height="4" font="font29" id="p37_t147" reading_order_no="146" segment_no="15" tag_type="formula">X</text>
<text top="719" left="212" width="13" height="6" font="font28" id="p37_t148" reading_order_no="147" segment_no="15" tag_type="formula">t =1</text>
<text top="705" left="227" width="34" height="10" font="font17" id="p37_t149" reading_order_no="148" segment_no="15" tag_type="formula">K t = O</text>
<text top="699" left="271" width="7" height="9" font="font17" id="p37_t150" reading_order_no="149" segment_no="15" tag_type="formula">L</text>
<text top="697" left="271" width="43" height="24" font="font17" id="p37_t151" reading_order_no="150" segment_no="15" tag_type="formula">µ log µR 2 0</text>
<text top="712" left="303" width="5" height="9" font="font17" id="p37_t152" reading_order_no="151" segment_no="15" tag_type="formula">ε</text>
<text top="697" left="318" width="24" height="17" font="font18" id="p37_t153" reading_order_no="152" segment_no="15" tag_type="formula">+ σ 2</text>
<text top="705" left="329" width="28" height="16" font="font17" id="p37_t154" reading_order_no="153" segment_no="15" tag_type="formula">nµε +</text>
<text top="699" left="366" width="16" height="9" font="font17" id="p37_t155" reading_order_no="154" segment_no="15" tag_type="formula">nbσ</text>
<text top="706" left="360" width="28" height="15" font="font17" id="p37_t156" reading_order_no="155" segment_no="15" tag_type="formula">m √ µε</text>
<text top="705" left="398" width="3" height="9" font="font17" id="p37_t157" reading_order_no="156" segment_no="15" tag_type="formula">.</text>
<text top="706" left="487" width="17" height="9" font="font3" id="p37_t158" reading_order_no="157" segment_no="15" tag_type="text">(40)</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p37_t159" reading_order_no="158" segment_no="16" tag_type="text">37</text>
</page>
<page number="38" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="213" height="9" font="font13" id="p38_t1" reading_order_no="0" segment_no="0" tag_type="text">Proof. Theorem F.4 implies that BTARD-SGD with</text>
<text top="103" left="214" width="36" height="9" font="font17" id="p38_t2" reading_order_no="1" segment_no="1" tag_type="formula">γ = min</text>
<text top="92" left="252" width="17" height="13" font="font29" id="p38_t3" reading_order_no="2" segment_no="1" tag_type="formula">( 1<a href="deeplearning_paper1.html#34">F.4</a></text>
<text top="103" left="261" width="16" height="16" font="font18" id="p38_t4" reading_order_no="3" segment_no="1" tag_type="formula">4 L ,</text>
<text top="93" left="278" width="40" height="14" font="font29" id="p38_t5" reading_order_no="4" segment_no="1" tag_type="formula">r 7 nR 2 0</text>
<text top="103" left="289" width="39" height="16" font="font18" id="p38_t6" reading_order_no="5" segment_no="1" tag_type="formula">120 σ 2 K ,</text>
<text top="93" left="330" width="10" height="4" font="font29" id="p38_t7" reading_order_no="6" segment_no="1" tag_type="formula">r</text>
<text top="95" left="352" width="25" height="12" font="font17" id="p38_t8" reading_order_no="7" segment_no="1" tag_type="formula">m 2 R 2 0</text>
<text top="109" left="341" width="47" height="10" font="font18" id="p38_t9" reading_order_no="8" segment_no="1" tag_type="formula">72 Cσ 2 n 2 b 2</text>
<text top="92" left="390" width="8" height="4" font="font29" id="p38_t10" reading_order_no="9" segment_no="1" tag_type="formula">)</text>
<text top="129" left="108" width="43" height="9" font="font3" id="p38_t11" reading_order_no="10" segment_no="2" tag_type="text">guarantees</text>
<text top="139" left="250" width="111" height="18" font="font34" id="p38_t12" reading_order_no="11" segment_no="3" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ 2 R 2 0</text>
<text top="154" left="345" width="14" height="9" font="font17" id="p38_t13" reading_order_no="12" segment_no="3" tag_type="formula">γK</text>
<text top="168" left="108" width="232" height="9" font="font3" id="p38_t14" reading_order_no="13" segment_no="4" tag_type="text">after K iterations. Therefore, after the first restart we have</text>
<text top="184" left="233" width="106" height="18" font="font34" id="p38_t15" reading_order_no="14" segment_no="5" tag_type="formula">E [ f ( b x 1 ) − f ( x ∗ )] ≤ 2 R 2 0</text>
<text top="199" left="319" width="22" height="9" font="font17" id="p38_t16" reading_order_no="15" segment_no="5" tag_type="formula">γ 1 K 1</text>
<text top="184" left="346" width="29" height="16" font="font19" id="p38_t17" reading_order_no="16" segment_no="5" tag_type="formula">≤ µR 2 0</text>
<text top="199" left="364" width="5" height="9" font="font18" id="p38_t18" reading_order_no="17" segment_no="5" tag_type="formula">4</text>
<text top="192" left="377" width="3" height="9" font="font17" id="p38_t19" reading_order_no="18" segment_no="5" tag_type="formula">.</text>
<text top="214" left="108" width="224" height="11" font="font3" id="p38_t20" reading_order_no="19" segment_no="6" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="235" left="187" width="6" height="9" font="font17" id="p38_t21" reading_order_no="20" segment_no="7" tag_type="formula">µ</text>
<text top="233" left="188" width="234" height="24" font="font18" id="p38_t22" reading_order_no="21" segment_no="7" tag_type="formula">2 k b x 1 − x ∗ k 2 ≤ f ( b x 1 ) − f ( x ∗ ) = ⇒ E [ k b x 1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="242" left="414" width="12" height="15" font="font18" id="p38_t23" reading_order_no="22" segment_no="7" tag_type="formula">2 .</text>
<text top="263" left="108" width="216" height="15" font="font3" id="p38_t24" reading_order_no="23" segment_no="8" tag_type="text">Next, assume that we have E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="263" left="310" width="196" height="16" font="font3" id="p38_t25" reading_order_no="24" segment_no="8" tag_type="text">2 t +1 , E [ k b x t − x ∗ k 2 ] ≤ R 2 0 2 t for some t ≤ r − 1 .</text>
<text top="279" left="108" width="125" height="9" font="font3" id="p38_t26" reading_order_no="25" segment_no="8" tag_type="text">Then, Theorem F.4 implies that</text>
<text top="295" left="222" width="164" height="19" font="font34" id="p38_t27" reading_order_no="26" segment_no="9" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ ) | x t ] ≤ 2 k b x t − x ∗ k 2</text>
<text top="311" left="350" width="20" height="9" font="font17" id="p38_t28" reading_order_no="27" segment_no="9" tag_type="formula">γ t K t</text>
<text top="304" left="387" width="3" height="9" font="font17" id="p38_t29" reading_order_no="28" segment_no="9" tag_type="formula">.</text>
<text top="327" left="108" width="304" height="9" font="font3" id="p38_t30" reading_order_no="29" segment_no="10" tag_type="text">Taking the full expectation from the both sides of previous inequality we get</text>
<text top="344" left="185" width="159" height="19" font="font34" id="p38_t31" reading_order_no="30" segment_no="11" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ )] ≤ 2 E [ k b x t − x ∗ k 2 ]</text>
<text top="359" left="302" width="20" height="10" font="font17" id="p38_t32" reading_order_no="31" segment_no="11" tag_type="formula">γ t K t</text>
<text top="352" left="348" width="8" height="9" font="font19" id="p38_t33" reading_order_no="32" segment_no="11" tag_type="formula">≤</text>
<text top="344" left="366" width="16" height="12" font="font18" id="p38_t34" reading_order_no="33" segment_no="11" tag_type="formula">2 R 2 0</text>
<text top="358" left="360" width="28" height="11" font="font18" id="p38_t35" reading_order_no="34" segment_no="11" tag_type="formula">2 t γ t K t</text>
<text top="344" left="393" width="29" height="17" font="font19" id="p38_t36" reading_order_no="35" segment_no="11" tag_type="formula">≤ µR 2 0</text>
<text top="352" left="404" width="23" height="16" font="font18" id="p38_t37" reading_order_no="36" segment_no="11" tag_type="formula">2 t +2 .</text>
<text top="375" left="108" width="224" height="11" font="font3" id="p38_t38" reading_order_no="37" segment_no="12" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="395" left="170" width="6" height="9" font="font17" id="p38_t39" reading_order_no="38" segment_no="13" tag_type="formula">µ</text>
<text top="409" left="171" width="5" height="9" font="font18" id="p38_t40" reading_order_no="39" segment_no="13" tag_type="formula">2</text>
<text top="401" left="177" width="5" height="9" font="font19" id="p38_t41" reading_order_no="40" segment_no="13" tag_type="formula">k</text>
<text top="400" left="182" width="170" height="13" font="font29" id="p38_t42" reading_order_no="41" segment_no="13" tag_type="formula">b x t +1 − x ∗ k 2 ≤ f ( b x t +1 ) − f ( x ∗ ) = ⇒ E [ k</text>
<text top="394" left="352" width="83" height="19" font="font29" id="p38_t43" reading_order_no="42" segment_no="13" tag_type="formula">b x t +1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="402" left="420" width="23" height="16" font="font18" id="p38_t44" reading_order_no="43" segment_no="13" tag_type="formula">2 t +1 .</text>
<text top="424" left="108" width="281" height="9" font="font3" id="p38_t45" reading_order_no="44" segment_no="14" tag_type="text">Therefore, by mathematical induction we have that for all t = 1 , . . . , r</text>
<text top="440" left="199" width="104" height="19" font="font34" id="p38_t46" reading_order_no="45" segment_no="15" tag_type="formula">E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="449" left="285" width="23" height="16" font="font18" id="p38_t47" reading_order_no="46" segment_no="15" tag_type="formula">2 t +1 ,</text>
<text top="446" left="319" width="58" height="13" font="font34" id="p38_t48" reading_order_no="47" segment_no="15" tag_type="formula">E k b x t − x ∗ k 2</text>
<text top="440" left="385" width="23" height="17" font="font19" id="p38_t49" reading_order_no="48" segment_no="15" tag_type="formula">≤ R 2 0</text>
<text top="449" left="398" width="15" height="16" font="font18" id="p38_t50" reading_order_no="49" segment_no="15" tag_type="formula">2 t .</text>
<text top="470" left="108" width="85" height="16" font="font3" id="p38_t51" reading_order_no="50" segment_no="16" tag_type="text">Then, after r = l log 2</text>
<text top="470" left="196" width="14" height="17" font="font28" id="p38_t52" reading_order_no="51" segment_no="16" tag_type="text">µR 2 0 ε</text>
<text top="470" left="212" width="292" height="16" font="font29" id="p38_t53" reading_order_no="52" segment_no="16" tag_type="text">m − 1 restarts of BTARD-SGD we have E [ f ( b x r ) − f ( x ∗ )] ≤ ε . The total</text>
<text top="489" left="108" width="203" height="9" font="font3" id="p38_t54" reading_order_no="53" segment_no="16" tag_type="text">number of iterations executed by BTARD-SGD is</text>
<text top="506" left="175" width="4" height="6" font="font28" id="p38_t55" reading_order_no="54" segment_no="17" tag_type="formula">r</text>
<text top="514" left="170" width="14" height="4" font="font29" id="p38_t56" reading_order_no="55" segment_no="17" tag_type="formula">X</text>
<text top="531" left="170" width="13" height="6" font="font28" id="p38_t57" reading_order_no="56" segment_no="17" tag_type="formula">t =1</text>
<text top="517" left="186" width="11" height="9" font="font17" id="p38_t58" reading_order_no="57" segment_no="17" tag_type="formula">K t</text>
<text top="517" left="208" width="8" height="9" font="font18" id="p38_t59" reading_order_no="58" segment_no="17" tag_type="formula">=</text>
<text top="516" left="225" width="8" height="9" font="font19" id="p38_t60" reading_order_no="59" segment_no="17" tag_type="formula">O</text>
<text top="506" left="248" width="4" height="6" font="font28" id="p38_t61" reading_order_no="60" segment_no="17" tag_type="formula">r</text>
<text top="514" left="243" width="14" height="4" font="font29" id="p38_t62" reading_order_no="61" segment_no="17" tag_type="formula">X</text>
<text top="531" left="244" width="13" height="6" font="font28" id="p38_t63" reading_order_no="62" segment_no="17" tag_type="formula">t =1</text>
<text top="517" left="259" width="19" height="9" font="font18" id="p38_t64" reading_order_no="63" segment_no="17" tag_type="formula">max</text>
<text top="506" left="279" width="17" height="13" font="font29" id="p38_t65" reading_order_no="64" segment_no="17" tag_type="formula">( L</text>
<text top="509" left="289" width="33" height="24" font="font17" id="p38_t66" reading_order_no="65" segment_no="17" tag_type="formula">µ , σ 2 2 t</text>
<text top="522" left="302" width="22" height="12" font="font17" id="p38_t67" reading_order_no="66" segment_no="17" tag_type="formula">µ 2 R 2 0</text>
<text top="507" left="326" width="31" height="19" font="font17" id="p38_t68" reading_order_no="67" segment_no="17" tag_type="formula">, nbσ 2 t 2</text>
<text top="524" left="332" width="26" height="9" font="font17" id="p38_t69" reading_order_no="68" segment_no="17" tag_type="formula">mµR 0</text>
<text top="506" left="360" width="16" height="4" font="font29" id="p38_t70" reading_order_no="69" segment_no="17" tag_type="formula">)!</text>
<text top="549" left="208" width="8" height="9" font="font18" id="p38_t71" reading_order_no="70" segment_no="17" tag_type="formula">=</text>
<text top="548" left="225" width="8" height="9" font="font19" id="p38_t72" reading_order_no="71" segment_no="17" tag_type="formula">O</text>
<text top="542" left="244" width="7" height="9" font="font17" id="p38_t73" reading_order_no="72" segment_no="17" tag_type="formula">L</text>
<text top="540" left="244" width="47" height="24" font="font17" id="p38_t74" reading_order_no="73" segment_no="17" tag_type="formula">µ r + σ 2 2 r</text>
<text top="554" left="270" width="22" height="12" font="font17" id="p38_t75" reading_order_no="74" segment_no="17" tag_type="formula">µ 2 R 2 0</text>
<text top="539" left="296" width="37" height="19" font="font18" id="p38_t76" reading_order_no="75" segment_no="17" tag_type="formula">+ nbσ 2 r 2</text>
<text top="555" left="307" width="27" height="10" font="font17" id="p38_t77" reading_order_no="76" segment_no="17" tag_type="formula">mµR 0</text>
<text top="580" left="208" width="8" height="9" font="font18" id="p38_t78" reading_order_no="77" segment_no="17" tag_type="formula">=</text>
<text top="579" left="225" width="8" height="9" font="font19" id="p38_t79" reading_order_no="78" segment_no="17" tag_type="formula">O</text>
<text top="573" left="244" width="7" height="9" font="font17" id="p38_t80" reading_order_no="79" segment_no="17" tag_type="formula">L</text>
<text top="571" left="245" width="42" height="24" font="font17" id="p38_t81" reading_order_no="80" segment_no="17" tag_type="formula">µ log µR 2 0</text>
<text top="586" left="276" width="5" height="9" font="font17" id="p38_t82" reading_order_no="81" segment_no="17" tag_type="formula">ε</text>
<text top="580" left="291" width="8" height="9" font="font18" id="p38_t83" reading_order_no="82" segment_no="17" tag_type="formula">+</text>
<text top="571" left="308" width="10" height="11" font="font17" id="p38_t84" reading_order_no="83" segment_no="17" tag_type="formula">σ 2</text>
<text top="585" left="302" width="22" height="12" font="font17" id="p38_t85" reading_order_no="84" segment_no="17" tag_type="formula">µ 2 R 2 0</text>
<text top="571" left="328" width="24" height="17" font="font19" id="p38_t86" reading_order_no="85" segment_no="17" tag_type="formula">· µR 2 0</text>
<text top="586" left="341" width="5" height="9" font="font17" id="p38_t87" reading_order_no="86" segment_no="17" tag_type="formula">ε</text>
<text top="580" left="356" width="8" height="9" font="font18" id="p38_t88" reading_order_no="87" segment_no="17" tag_type="formula">+</text>
<text top="573" left="372" width="16" height="9" font="font17" id="p38_t89" reading_order_no="88" segment_no="17" tag_type="formula">nbσ</text>
<text top="586" left="367" width="26" height="10" font="font17" id="p38_t90" reading_order_no="89" segment_no="17" tag_type="formula">mµR 0</text>
<text top="579" left="397" width="3" height="9" font="font19" id="p38_t91" reading_order_no="90" segment_no="17" tag_type="formula">·</text>
<text top="570" left="402" width="29" height="12" font="font29" id="p38_t92" reading_order_no="91" segment_no="17" tag_type="formula">r µR 2</text>
<text top="578" left="427" width="4" height="6" font="font30" id="p38_t93" reading_order_no="92" segment_no="17" tag_type="formula">0</text>
<text top="586" left="420" width="5" height="9" font="font17" id="p38_t94" reading_order_no="93" segment_no="17" tag_type="formula">ε</text>
<text top="569" left="433" width="8" height="4" font="font29" id="p38_t95" reading_order_no="94" segment_no="17" tag_type="formula">!</text>
<text top="611" left="208" width="8" height="9" font="font18" id="p38_t96" reading_order_no="95" segment_no="17" tag_type="formula">=</text>
<text top="610" left="225" width="8" height="9" font="font19" id="p38_t97" reading_order_no="96" segment_no="17" tag_type="formula">O</text>
<text top="604" left="244" width="7" height="9" font="font17" id="p38_t98" reading_order_no="97" segment_no="17" tag_type="formula">L</text>
<text top="603" left="244" width="43" height="24" font="font17" id="p38_t99" reading_order_no="98" segment_no="17" tag_type="formula">µ log µR 2 0</text>
<text top="618" left="276" width="5" height="9" font="font17" id="p38_t100" reading_order_no="99" segment_no="17" tag_type="formula">ε</text>
<text top="603" left="291" width="24" height="17" font="font18" id="p38_t101" reading_order_no="100" segment_no="17" tag_type="formula">+ σ 2</text>
<text top="611" left="302" width="28" height="16" font="font17" id="p38_t102" reading_order_no="101" segment_no="17" tag_type="formula">nµε +</text>
<text top="604" left="339" width="16" height="9" font="font17" id="p38_t103" reading_order_no="102" segment_no="17" tag_type="formula">nbσ</text>
<text top="611" left="333" width="28" height="16" font="font17" id="p38_t104" reading_order_no="103" segment_no="17" tag_type="formula">m √ µε</text>
<text top="611" left="371" width="3" height="9" font="font17" id="p38_t105" reading_order_no="104" segment_no="17" tag_type="formula">.</text>
<text top="660" left="108" width="12" height="9" font="font1" id="p38_t106" reading_order_no="105" segment_no="18" tag_type="title">F.3</text>
<text top="660" left="130" width="216" height="9" font="font1" id="p38_t107" reading_order_no="106" segment_no="18" tag_type="title">Convergence guarantees for BTARD-Clipped-SGD</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p38_t108" reading_order_no="107" segment_no="19" tag_type="text">The results for BTARD-SGD and R ESTARTED -BTARD-SGD rely on As. 3.2 that the stochastic</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p38_t109" reading_order_no="108" segment_no="19" tag_type="text">gradients have not too heavy tails, i.e., sub-quadratically decreasing tails. The main reason why it</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p38_t110" reading_order_no="109" segment_no="19" tag_type="text">is needed in the analysis is to prevent too often extra computations because of Verification 3 from</text>
<text top="713" left="108" width="396" height="9" font="font3" id="p38_t111" reading_order_no="110" segment_no="19" tag_type="text">BTARD when all workers honestly follow the protocol. However, in many important NLP tasks</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p38_t112" reading_order_no="111" segment_no="20" tag_type="text">38</text>
</page>
<page number="39" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="396" height="9" font="font3" id="p39_t1" reading_order_no="0" segment_no="0" tag_type="text">such as BERT training [ 81 ], the noise in the stochastic gradient has such a heavy noise that As. 3.2<a href="deeplearning_paper1.html#14">[</a></text>
<text top="86" left="108" width="77" height="9" font="font3" id="p39_t2" reading_order_no="1" segment_no="0" tag_type="text">becomes unnatural.<a href="deeplearning_paper1.html#14">81</a></text>
<text top="109" left="108" width="155" height="9" font="font1" id="p39_t3" reading_order_no="2" segment_no="1" tag_type="title">Algorithm 8 BTARD-C LIPPED -SGD<a href="deeplearning_paper1.html#14">], </a>the noise in the stochastic gradient has such a heavy noise that As.</text>
<text top="123" left="108" width="316" height="13" font="font1" id="p39_t4" reading_order_no="3" segment_no="2" tag_type="code">Input: x 0 – starting point, γ – stepsize, K – number of iterations, { s i,k } n,K − 1<a href="deeplearning_paper1.html#6">3.2</a></text>
<text top="127" left="400" width="104" height="11" font="font3" id="p39_t5" reading_order_no="4" segment_no="2" tag_type="code">i,k =0 , 0 – seeds for batches</text>
<text top="138" left="125" width="97" height="12" font="font3" id="p39_t6" reading_order_no="5" segment_no="2" tag_type="code">computations, { λ k } K − 1</text>
<text top="141" left="204" width="139" height="11" font="font3" id="p39_t7" reading_order_no="6" segment_no="2" tag_type="code">k =0 – gradient clipping parameter</text>
<text top="152" left="113" width="99" height="10" font="font17" id="p39_t8" reading_order_no="7" segment_no="2" tag_type="code">1: C 0 = Banned − 1 = ∅</text>
<text top="162" left="113" width="122" height="10" font="font1" id="p39_t9" reading_order_no="8" segment_no="2" tag_type="code">2: for k = 0 , 1 , . . . , K − 1 do</text>
<text top="184" left="113" width="7" height="8" font="font9" id="p39_t10" reading_order_no="9" segment_no="2" tag_type="code">3:</text>
<text top="182" left="140" width="91" height="12" font="font3" id="p39_t11" reading_order_no="10" segment_no="2" tag_type="code">Worker i computes e g k i</text>
<text top="184" left="236" width="8" height="9" font="font18" id="p39_t12" reading_order_no="11" segment_no="2" tag_type="code">=</text>
<text top="173" left="247" width="41" height="13" font="font29" id="p39_t13" reading_order_no="12" segment_no="2" tag_type="code">( min n 1 ,</text>
<text top="175" left="311" width="9" height="6" font="font28" id="p39_t14" reading_order_no="13" segment_no="2" tag_type="code">λ k</text>
<text top="182" left="291" width="49" height="7" font="font4" id="p39_t15" reading_order_no="14" segment_no="2" tag_type="code">k∇ f ( x k ,ξ i,k ) k</text>
<text top="173" left="342" width="63" height="14" font="font29" id="p39_t16" reading_order_no="15" segment_no="2" tag_type="code">o ∇ f ( x k , ξ i,k ) ,</text>
<text top="177" left="414" width="58" height="10" font="font3" id="p39_t17" reading_order_no="16" segment_no="2" tag_type="code">if i ∈ G k \ C k ,</text>
<text top="192" left="255" width="8" height="10" font="font19" id="p39_t18" reading_order_no="17" segment_no="2" tag_type="code">∗ ,</text>
<text top="192" left="414" width="58" height="10" font="font3" id="p39_t19" reading_order_no="18" segment_no="2" tag_type="code">if i ∈ B k \ C k ,</text>
<text top="184" left="473" width="31" height="9" font="font3" id="p39_t20" reading_order_no="19" segment_no="2" tag_type="code">, where</text>
<text top="205" left="125" width="219" height="9" font="font17" id="p39_t21" reading_order_no="20" segment_no="2" tag_type="code">ξ i,k is generated via seed s i,k available to every worker</text>
<text top="218" left="113" width="7" height="8" font="font9" id="p39_t22" reading_order_no="21" segment_no="2" tag_type="code">4:</text>
<text top="215" left="140" width="127" height="13" font="font29" id="p39_t23" reading_order_no="22" segment_no="2" tag_type="code">b g k , public_info k = BTARD ( e g k</text>
<text top="222" left="262" width="7" height="8" font="font28" id="p39_t24" reading_order_no="23" segment_no="2" tag_type="code">i k 1</text>
<text top="215" left="270" width="14" height="11" font="font17" id="p39_t25" reading_order_no="24" segment_no="2" tag_type="code">, g k</text>
<text top="222" left="279" width="7" height="8" font="font28" id="p39_t26" reading_order_no="25" segment_no="2" tag_type="code">i k 1</text>
<text top="215" left="287" width="31" height="12" font="font17" id="p39_t27" reading_order_no="26" segment_no="2" tag_type="code">, . . . , e g k</text>
<text top="222" left="314" width="11" height="10" font="font28" id="p39_t28" reading_order_no="27" segment_no="2" tag_type="code">i k ak</text>
<text top="215" left="326" width="83" height="13" font="font18" id="p39_t29" reading_order_no="28" segment_no="2" tag_type="code">) , where { i k 1 , . . . , i k a k</text>
<text top="216" left="410" width="78" height="10" font="font19" id="p39_t30" reading_order_no="29" segment_no="2" tag_type="code">} = ( G k ∪ B k ) \ C k</text>
<text top="235" left="113" width="7" height="8" font="font9" id="p39_t31" reading_order_no="30" segment_no="2" tag_type="code">5:</text>
<text top="232" left="140" width="102" height="11" font="font3" id="p39_t32" reading_order_no="31" segment_no="2" tag_type="code">Choose 2 m workers c k +1</text>
<text top="239" left="228" width="4" height="6" font="font30" id="p39_t33" reading_order_no="32" segment_no="2" tag_type="code">1</text>
<text top="233" left="243" width="41" height="12" font="font17" id="p39_t34" reading_order_no="33" segment_no="2" tag_type="code">, . . . , c k +1 m</text>
<text top="232" left="284" width="25" height="11" font="font17" id="p39_t35" reading_order_no="34" segment_no="2" tag_type="code">, u k +1</text>
<text top="239" left="294" width="4" height="6" font="font30" id="p39_t36" reading_order_no="35" segment_no="2" tag_type="code">1</text>
<text top="233" left="309" width="42" height="12" font="font17" id="p39_t37" reading_order_no="36" segment_no="2" tag_type="code">, . . . , u k +1 m</text>
<text top="234" left="355" width="151" height="9" font="font3" id="p39_t38" reading_order_no="37" segment_no="2" tag_type="code">uniformly at random without replace-</text>
<text top="245" left="125" width="82" height="11" font="font3" id="p39_t39" reading_order_no="38" segment_no="2" tag_type="code">ment, C k +1 = { c k +1</text>
<text top="252" left="193" width="4" height="6" font="font30" id="p39_t40" reading_order_no="39" segment_no="2" tag_type="code">1</text>
<text top="245" left="208" width="40" height="12" font="font17" id="p39_t41" reading_order_no="40" segment_no="2" tag_type="code">, . . . , c k +1 m</text>
<text top="245" left="249" width="70" height="11" font="font19" id="p39_t42" reading_order_no="41" segment_no="2" tag_type="code">} , U k +1 = { u k +1</text>
<text top="252" left="304" width="4" height="6" font="font30" id="p39_t43" reading_order_no="42" segment_no="2" tag_type="code">1</text>
<text top="245" left="319" width="42" height="12" font="font17" id="p39_t44" reading_order_no="43" segment_no="2" tag_type="code">, . . . , u k +1 m</text>
<text top="246" left="362" width="5" height="9" font="font19" id="p39_t45" reading_order_no="44" segment_no="2" tag_type="code">}</text>
<text top="259" left="113" width="7" height="8" font="font9" id="p39_t46" reading_order_no="45" segment_no="2" tag_type="code">6:</text>
<text top="257" left="140" width="256" height="12" font="font3" id="p39_t47" reading_order_no="46" segment_no="2" tag_type="code">Banned k = C HECK C OMPUTATIONS ( C k +1 , U k +1 , public_info k )</text>
<text top="271" left="113" width="7" height="8" font="font9" id="p39_t48" reading_order_no="47" segment_no="2" tag_type="code">7:</text>
<text top="268" left="140" width="242" height="13" font="font17" id="p39_t49" reading_order_no="48" segment_no="2" tag_type="code">x k +1 = proj Q ( x k − γ b g k ) := argmin x ∈ Q k x − ( x k − γ b g k ) k</text>
<text top="283" left="113" width="7" height="8" font="font9" id="p39_t50" reading_order_no="49" segment_no="2" tag_type="code">8:</text>
<text top="282" left="140" width="206" height="11" font="font19" id="p39_t51" reading_order_no="50" segment_no="2" tag_type="code">G k +1 = G k \ Banned k − 1 , B k +1 = B k \ Banned k − 1</text>
<text top="318" left="108" width="396" height="9" font="font3" id="p39_t52" reading_order_no="51" segment_no="3" tag_type="text">To handle the problems with heavy-tailed noise distributions we consider BTARD-C LIPPED -SGD</text>
<text top="328" left="108" width="396" height="10" font="font3" id="p39_t53" reading_order_no="52" segment_no="3" tag_type="text">(see Alg. 8 in Appendix) applied to solve ( 1 ) such that Q is bounded. Essentially, this algorithm</text>
<text top="339" left="108" width="396" height="10" font="font3" id="p39_t54" reading_order_no="53" segment_no="3" tag_type="text">coincides with BTARD-SGD up to the following change: all good peers i ∈ G k \ C k use clipped</text>
<text top="353" left="108" width="93" height="12" font="font3" id="p39_t55" reading_order_no="54" segment_no="3" tag_type="text">stochastic gradients e g k i</text>
<text top="350" left="206" width="238" height="15" font="font18" id="p39_t56" reading_order_no="55" segment_no="3" tag_type="text">= ( e g k i (1) &gt; , . . . , e g k i ( n k − m ) &gt; ) &gt; , where e g k i ( l ) = min n 1 ,</text>
<text top="352" left="455" width="9" height="7" font="font28" id="p39_t57" reading_order_no="56" segment_no="3" tag_type="text">λ k</text>
<text top="359" left="447" width="25" height="9" font="font4" id="p39_t58" reading_order_no="57" segment_no="3" tag_type="text">k g k i ( l ) k</text>
<text top="350" left="473" width="33" height="15" font="font29" id="p39_t59" reading_order_no="58" segment_no="3" tag_type="text">o g k i ( l ) ,</text>
<text top="369" left="108" width="396" height="12" font="font17" id="p39_t60" reading_order_no="59" segment_no="3" tag_type="text">l = 1 , . . . , n k − m , and g k i is the stochastic gradient. Next, we introduce the following assumption.</text>
<text top="384" left="108" width="396" height="10" font="font1" id="p39_t61" reading_order_no="60" segment_no="4" tag_type="text">Assumption F.1. There exist such constant G &gt; 0 , s 0 ∈ [ d ] , and α ∈ (1 , 2] that for any set of indices</text>
<text top="395" left="108" width="396" height="10" font="font17" id="p39_t62" reading_order_no="61" segment_no="4" tag_type="text">S = ( i 1 , . . . , i d ) , 1 ≤ i 1 &lt; i 2 &lt; . . . &lt; i s ≤ d , s ≥ s 0 and arbitrary x ∈ Q stochastic gradient</text>
<text top="406" left="108" width="64" height="10" font="font19" id="p39_t63" reading_order_no="62" segment_no="4" tag_type="text">∇ f ( x, ξ ) satisfy</text>
<text top="432" left="183" width="93" height="10" font="font34" id="p39_t64" reading_order_no="63" segment_no="5" tag_type="formula">E [ ∇ f ( x, ξ )] = ∇ f ( x ) ,</text>
<text top="434" left="287" width="7" height="8" font="font34" id="p39_t65" reading_order_no="64" segment_no="5" tag_type="formula">E</text>
<text top="428" left="305" width="58" height="14" font="font19" id="p39_t66" reading_order_no="65" segment_no="5" tag_type="formula">∇ [ S ] f ( x, ξ ) α</text>
<text top="432" left="371" width="8" height="9" font="font19" id="p39_t67" reading_order_no="66" segment_no="5" tag_type="formula">≤</text>
<text top="418" left="390" width="21" height="22" font="font19" id="p39_t68" reading_order_no="67" segment_no="5" tag_type="formula">√ sG √</text>
<text top="440" left="402" width="5" height="9" font="font17" id="p39_t69" reading_order_no="68" segment_no="5" tag_type="formula">d</text>
<text top="422" left="419" width="5" height="6" font="font28" id="p39_t70" reading_order_no="69" segment_no="5" tag_type="formula">α</text>
<text top="432" left="426" width="3" height="9" font="font17" id="p39_t71" reading_order_no="70" segment_no="5" tag_type="formula">,</text>
<text top="432" left="487" width="17" height="9" font="font3" id="p39_t72" reading_order_no="71" segment_no="5" tag_type="text">(41)</text>
<text top="456" left="108" width="156" height="11" font="font13" id="p39_t73" reading_order_no="72" segment_no="6" tag_type="text">where ∇ [ S ] f ( x, ξ ) is defined in As. 3.1 .</text>
<text top="477" left="108" width="396" height="9" font="font3" id="p39_t74" reading_order_no="73" segment_no="7" tag_type="text">This is a modified version of the assumption used in [ 81 ]. When α &lt; 2 the variance of the stochastic</text>
<text top="488" left="108" width="378" height="9" font="font3" id="p39_t75" reading_order_no="74" segment_no="7" tag_type="text">gradient can be unbounded. One can show that in such a regime vanilla SGD can diverge [ 81 ].</text>
<text top="504" left="108" width="361" height="9" font="font3" id="p39_t76" reading_order_no="75" segment_no="8" tag_type="text">Under As. F.1 we derive the convergence results for convex and strongly convex problems.</text>
<text top="527" left="108" width="20" height="9" font="font1" id="p39_t77" reading_order_no="76" segment_no="9" tag_type="title">F.3.1</text>
<text top="527" left="138" width="111" height="9" font="font1" id="p39_t78" reading_order_no="77" segment_no="9" tag_type="title">Quality of the aggregation</text>
<text top="546" left="108" width="396" height="9" font="font3" id="p39_t79" reading_order_no="78" segment_no="10" tag_type="text">Since now we have As. F.1 instead of As. 3.1 and 3.2 it is needed to derive new guarantees for the</text>
<text top="557" left="108" width="396" height="9" font="font3" id="p39_t80" reading_order_no="79" segment_no="10" tag_type="text">quality of the aggregation. We start with the following useful lemma about the properties of clipped</text>
<text top="568" left="108" width="81" height="9" font="font3" id="p39_t81" reading_order_no="80" segment_no="10" tag_type="text">stochastic gradeints.</text>
<text top="582" left="108" width="396" height="10" font="font1" id="p39_t82" reading_order_no="81" segment_no="11" tag_type="text">Lemma F.5 (See also Lemma 9 from [ 81 ]) . Let As. F.1 holds and i, j ∈ G k \ C k . Then, for all</text>
<text top="593" left="108" width="119" height="10" font="font17" id="p39_t83" reading_order_no="82" segment_no="11" tag_type="text">l = 1 , 2 , . . . , n k − m we have</text>
<text top="615" left="189" width="10" height="4" font="font29" id="p39_t84" reading_order_no="83" segment_no="12" tag_type="formula">q</text>
<text top="618" left="199" width="27" height="12" font="font34" id="p39_t85" reading_order_no="84" segment_no="12" tag_type="formula">E k e g k</text>
<text top="618" left="221" width="38" height="13" font="font18" id="p39_t86" reading_order_no="85" segment_no="12" tag_type="formula">i ( l ) − e g k</text>
<text top="619" left="255" width="43" height="12" font="font18" id="p39_t87" reading_order_no="86" segment_no="12" tag_type="formula">j ( l ) k 4 | x k</text>
<text top="619" left="313" width="8" height="9" font="font19" id="p39_t88" reading_order_no="87" segment_no="12" tag_type="formula">≤</text>
<text top="620" left="331" width="11" height="9" font="font18" id="p39_t89" reading_order_no="88" segment_no="12" tag_type="formula">4 λ</text>
<text top="614" left="342" width="15" height="17" font="font28" id="p39_t90" reading_order_no="89" segment_no="12" tag_type="formula">4 − α 2 k</text>
<text top="613" left="384" width="8" height="9" font="font17" id="p39_t91" reading_order_no="90" segment_no="12" tag_type="formula">G</text>
<text top="619" left="368" width="8" height="9" font="font19" id="p39_t92" reading_order_no="91" segment_no="12" tag_type="formula">√</text>
<text top="626" left="376" width="33" height="10" font="font17" id="p39_t93" reading_order_no="92" segment_no="12" tag_type="formula">n k − m</text>
<text top="609" left="418" width="5" height="9" font="font31" id="p39_t94" reading_order_no="93" segment_no="12" tag_type="formula">α 2</text>
<text top="620" left="426" width="3" height="9" font="font17" id="p39_t95" reading_order_no="94" segment_no="12" tag_type="formula">,</text>
<text top="620" left="487" width="17" height="9" font="font3" id="p39_t96" reading_order_no="95" segment_no="12" tag_type="text">(42)</text>
<text top="647" left="232" width="66" height="12" font="font34" id="p39_t97" reading_order_no="96" segment_no="13" tag_type="formula">E k g k ( l ) k 2 | x k</text>
<text top="648" left="313" width="8" height="9" font="font19" id="p39_t98" reading_order_no="97" segment_no="13" tag_type="formula">≤</text>
<text top="639" left="338" width="35" height="12" font="font17" id="p39_t99" reading_order_no="98" segment_no="13" tag_type="formula">G α λ 2 − α</text>
<text top="647" left="357" width="4" height="6" font="font28" id="p39_t100" reading_order_no="99" segment_no="13" tag_type="formula">k</text>
<text top="653" left="332" width="46" height="13" font="font18" id="p39_t101" reading_order_no="100" segment_no="13" tag_type="formula">( n k − m ) α 2</text>
<text top="649" left="380" width="3" height="9" font="font17" id="p39_t102" reading_order_no="101" segment_no="13" tag_type="formula">,</text>
<text top="649" left="487" width="17" height="9" font="font3" id="p39_t103" reading_order_no="102" segment_no="13" tag_type="text">(43)</text>
<text top="673" left="187" width="116" height="15" font="font34" id="p39_t104" reading_order_no="103" segment_no="14" tag_type="formula">E [ g k ( l ) | x k ] − ∇ ( l ) f ( x k ) 2</text>
<text top="677" left="313" width="8" height="9" font="font19" id="p39_t105" reading_order_no="104" segment_no="14" tag_type="formula">≤</text>
<text top="669" left="362" width="17" height="11" font="font17" id="p39_t106" reading_order_no="105" segment_no="14" tag_type="formula">G 2 α</text>
<text top="683" left="332" width="77" height="13" font="font18" id="p39_t107" reading_order_no="106" segment_no="14" tag_type="formula">( n k − m ) α λ 2( α − 1)</text>
<text top="692" left="383" width="4" height="6" font="font28" id="p39_t108" reading_order_no="107" segment_no="14" tag_type="formula">k</text>
<text top="677" left="410" width="3" height="9" font="font17" id="p39_t109" reading_order_no="108" segment_no="14" tag_type="formula">,</text>
<text top="678" left="487" width="17" height="9" font="font3" id="p39_t110" reading_order_no="109" segment_no="14" tag_type="text">(44)</text>
<text top="704" left="108" width="58" height="11" font="font13" id="p39_t111" reading_order_no="110" segment_no="15" tag_type="formula">where g k ( l ) =</text>
<text top="704" left="181" width="4" height="6" font="font30" id="p39_t112" reading_order_no="111" segment_no="15" tag_type="formula">1</text>
<text top="711" left="170" width="26" height="7" font="font4" id="p39_t113" reading_order_no="112" segment_no="15" tag_type="formula">|G k \C k |</text>
<text top="705" left="209" width="11" height="4" font="font29" id="p39_t114" reading_order_no="113" segment_no="15" tag_type="formula">P</text>
<text top="717" left="199" width="30" height="7" font="font28" id="p39_t115" reading_order_no="114" segment_no="15" tag_type="formula">i ∈G k \C k</text>
<text top="704" left="231" width="9" height="12" font="font29" id="p39_t116" reading_order_no="115" segment_no="15" tag_type="formula">e g k</text>
<text top="705" left="236" width="123" height="12" font="font18" id="p39_t117" reading_order_no="116" segment_no="15" tag_type="formula">i ( l ) for all l = 1 , . . . , n k − m .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p39_t118" reading_order_no="117" segment_no="16" tag_type="text">39</text>
</page>
<page number="40" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="115" height="9" font="font13" id="p40_t1" reading_order_no="0" segment_no="0" tag_type="text">Proof. First of all, we derive</text>
<text top="93" left="124" width="99" height="12" font="font34" id="p40_t2" reading_order_no="1" segment_no="1" tag_type="formula">E k e g k i ( l ) − e g k j ( l ) k 4 | x k</text>
<text top="95" left="239" width="8" height="9" font="font18" id="p40_t3" reading_order_no="2" segment_no="1" tag_type="formula">=</text>
<text top="92" left="259" width="180" height="13" font="font34" id="p40_t4" reading_order_no="3" segment_no="1" tag_type="formula">E k e g k i ( l ) − e g k j ( l ) k α k e g k i ( l ) − e g k j ( l ) k 4 − α | x k</text>
<text top="111" left="239" width="8" height="9" font="font19" id="p40_t5" reading_order_no="4" segment_no="1" tag_type="formula">≤</text>
<text top="109" left="259" width="26" height="12" font="font18" id="p40_t6" reading_order_no="5" segment_no="1" tag_type="formula">8 λ 4 − α</text>
<text top="117" left="270" width="4" height="6" font="font28" id="p40_t7" reading_order_no="6" segment_no="1" tag_type="formula">k</text>
<text top="109" left="286" width="196" height="13" font="font34" id="p40_t8" reading_order_no="7" segment_no="1" tag_type="formula">E k∇ ( l ) f ( x k , ξ i,k ) k α + k∇ ( l ) f ( x k , ξ j,k ) k α | x k</text>
<text top="128" left="238" width="11" height="14" font="font19" id="p40_t9" reading_order_no="8" segment_no="1" tag_type="formula">( 41 ) ≤</text>
<text top="131" left="259" width="31" height="12" font="font18" id="p40_t10" reading_order_no="9" segment_no="1" tag_type="formula">16 λ 4 − α</text>
<text top="139" left="275" width="4" height="6" font="font28" id="p40_t11" reading_order_no="10" segment_no="1" tag_type="formula">k</text>
<text top="127" left="317" width="8" height="9" font="font17" id="p40_t12" reading_order_no="11" segment_no="1" tag_type="formula">G</text>
<text top="133" left="301" width="8" height="9" font="font19" id="p40_t13" reading_order_no="12" segment_no="1" tag_type="formula">√</text>
<text top="140" left="309" width="32" height="10" font="font17" id="p40_t14" reading_order_no="13" segment_no="1" tag_type="formula">n k − m</text>
<text top="124" left="350" width="5" height="6" font="font28" id="p40_t15" reading_order_no="14" segment_no="1" tag_type="formula">α</text>
<text top="159" left="108" width="193" height="10" font="font3" id="p40_t16" reading_order_no="15" segment_no="2" tag_type="text">implying ( 42 ). Next, for all i ∈ G k \ C k we have</text>
<text top="178" left="121" width="66" height="12" font="font34" id="p40_t17" reading_order_no="16" segment_no="3" tag_type="formula">E k e g k i ( l ) k 2 | x k</text>
<text top="180" left="204" width="8" height="9" font="font18" id="p40_t18" reading_order_no="17" segment_no="3" tag_type="formula">=</text>
<text top="177" left="224" width="113" height="13" font="font34" id="p40_t19" reading_order_no="18" segment_no="3" tag_type="formula">E k e g k i ( l ) k α k e g k i ( l ) k 2 − α | x k</text>
<text top="177" left="345" width="32" height="12" font="font19" id="p40_t20" reading_order_no="19" segment_no="3" tag_type="formula">≤ λ 2 − α</text>
<text top="185" left="361" width="4" height="6" font="font28" id="p40_t21" reading_order_no="20" segment_no="3" tag_type="formula">k</text>
<text top="178" left="377" width="107" height="12" font="font34" id="p40_t22" reading_order_no="21" segment_no="3" tag_type="formula">E k∇ ( l ) f ( x k , ξ i,k ) k α | x k</text>
<text top="196" left="202" width="11" height="15" font="font19" id="p40_t23" reading_order_no="22" segment_no="3" tag_type="formula">( 41 ) ≤</text>
<text top="194" left="231" width="34" height="11" font="font17" id="p40_t24" reading_order_no="23" segment_no="3" tag_type="formula">G α λ 2 − α</text>
<text top="201" left="250" width="4" height="6" font="font28" id="p40_t25" reading_order_no="24" segment_no="3" tag_type="formula">k</text>
<text top="207" left="225" width="45" height="13" font="font18" id="p40_t26" reading_order_no="25" segment_no="3" tag_type="formula">( n k − m ) α 2</text>
<text top="228" left="108" width="36" height="9" font="font3" id="p40_t27" reading_order_no="26" segment_no="4" tag_type="text">implying</text>
<text top="253" left="160" width="66" height="12" font="font34" id="p40_t28" reading_order_no="27" segment_no="5" tag_type="formula">E k g k ( l ) k 2 | x k</text>
<text top="254" left="234" width="8" height="9" font="font19" id="p40_t29" reading_order_no="28" segment_no="5" tag_type="formula">≤</text>
<text top="248" left="261" width="5" height="9" font="font18" id="p40_t30" reading_order_no="29" segment_no="5" tag_type="formula">1</text>
<text top="261" left="245" width="36" height="10" font="font19" id="p40_t31" reading_order_no="30" segment_no="5" tag_type="formula">|G k \ C k |</text>
<text top="252" left="292" width="14" height="4" font="font29" id="p40_t32" reading_order_no="31" segment_no="5" tag_type="formula">X</text>
<text top="269" left="284" width="30" height="7" font="font28" id="p40_t33" reading_order_no="32" segment_no="5" tag_type="formula">i ∈G k \C k</text>
<text top="253" left="316" width="66" height="12" font="font34" id="p40_t34" reading_order_no="33" segment_no="5" tag_type="formula">E k e g k i ( l ) k 2 | x k</text>
<text top="254" left="389" width="8" height="9" font="font19" id="p40_t35" reading_order_no="34" segment_no="5" tag_type="formula">≤</text>
<text top="245" left="407" width="35" height="12" font="font17" id="p40_t36" reading_order_no="35" segment_no="5" tag_type="formula">G α λ 2 − α</text>
<text top="253" left="426" width="4" height="6" font="font28" id="p40_t37" reading_order_no="36" segment_no="5" tag_type="formula">k</text>
<text top="259" left="401" width="46" height="12" font="font18" id="p40_t38" reading_order_no="37" segment_no="5" tag_type="formula">( n k − m ) α 2</text>
<text top="255" left="449" width="3" height="9" font="font17" id="p40_t39" reading_order_no="38" segment_no="5" tag_type="formula">.</text>
<text top="285" left="108" width="147" height="10" font="font3" id="p40_t40" reading_order_no="39" segment_no="6" tag_type="text">Finally, for all i ∈ G k \ C k we derive</text>
<text top="304" left="121" width="18" height="13" font="font34" id="p40_t41" reading_order_no="40" segment_no="7" tag_type="formula">E [ e g k</text>
<text top="304" left="135" width="92" height="13" font="font18" id="p40_t42" reading_order_no="41" segment_no="7" tag_type="formula">i ( l ) | x k ] − ∇ ( l ) f ( x k )</text>
<text top="306" left="244" width="8" height="9" font="font18" id="p40_t43" reading_order_no="42" segment_no="7" tag_type="formula">=</text>
<text top="304" left="269" width="19" height="13" font="font34" id="p40_t44" reading_order_no="43" segment_no="7" tag_type="formula">E [ e g k</text>
<text top="304" left="284" width="111" height="13" font="font18" id="p40_t45" reading_order_no="44" segment_no="7" tag_type="formula">i ( l ) − ∇ ( l ) f ( x k , ξ i,k ) | x k ]</text>
<text top="322" left="244" width="8" height="9" font="font19" id="p40_t46" reading_order_no="45" segment_no="7" tag_type="formula">≤</text>
<text top="325" left="264" width="7" height="8" font="font34" id="p40_t47" reading_order_no="46" segment_no="7" tag_type="formula">E</text>
<text top="321" left="282" width="94" height="12" font="font29" id="p40_t48" reading_order_no="47" segment_no="7" tag_type="formula">e g k i ( l ) − ∇ ( l ) f ( x k , ξ i,k )</text>
<text top="321" left="384" width="15" height="11" font="font19" id="p40_t49" reading_order_no="48" segment_no="7" tag_type="formula">| x k</text>
<text top="342" left="244" width="8" height="9" font="font18" id="p40_t50" reading_order_no="49" segment_no="7" tag_type="formula">=</text>
<text top="344" left="264" width="7" height="8" font="font34" id="p40_t51" reading_order_no="50" segment_no="7" tag_type="formula">E</text>
<text top="337" left="272" width="5" height="4" font="font29" id="p40_t52" reading_order_no="51" segment_no="7" tag_type="formula">h</text>
<text top="339" left="282" width="9" height="13" font="font29" id="p40_t53" reading_order_no="52" segment_no="7" tag_type="formula">e g k</text>
<text top="339" left="287" width="89" height="13" font="font18" id="p40_t54" reading_order_no="53" segment_no="7" tag_type="formula">i ( l ) − ∇ ( l ) f ( x k , ξ i,k )</text>
<text top="337" left="383" width="112" height="15" font="font19" id="p40_t55" reading_order_no="54" segment_no="7" tag_type="formula">1 {k∇ ( l ) f ( x k ,ξ i,k ) k≥ λ k } | x k i</text>
<text top="363" left="244" width="8" height="9" font="font19" id="p40_t56" reading_order_no="55" segment_no="7" tag_type="formula">≤</text>
<text top="366" left="264" width="7" height="8" font="font34" id="p40_t57" reading_order_no="56" segment_no="7" tag_type="formula">E</text>
<text top="359" left="272" width="71" height="14" font="font29" id="p40_t58" reading_order_no="57" segment_no="7" tag_type="formula">h ∇ ( l ) f ( x k , ξ i,k )</text>
<text top="359" left="350" width="112" height="15" font="font19" id="p40_t59" reading_order_no="58" segment_no="7" tag_type="formula">1 {k∇ ( l ) f ( x k ,ξ i,k ) k≥ λ k } | x k i</text>
<text top="395" left="244" width="8" height="9" font="font19" id="p40_t60" reading_order_no="59" segment_no="7" tag_type="formula">≤</text>
<text top="388" left="265" width="7" height="8" font="font34" id="p40_t61" reading_order_no="60" segment_no="7" tag_type="formula">E</text>
<text top="381" left="273" width="196" height="15" font="font29" id="p40_t62" reading_order_no="61" segment_no="7" tag_type="formula">h ∇ ( l ) f ( x k , ξ i,k ) α 1 {k∇ ( l ) f ( x k ,ξ i,k ) k≥ λ k } | x k i</text>
<text top="401" left="356" width="21" height="11" font="font17" id="p40_t63" reading_order_no="62" segment_no="7" tag_type="formula">λ α − 1</text>
<text top="408" left="362" width="4" height="6" font="font28" id="p40_t64" reading_order_no="63" segment_no="7" tag_type="formula">k</text>
<text top="418" left="242" width="12" height="15" font="font19" id="p40_t65" reading_order_no="64" segment_no="7" tag_type="formula">( 41 ) ≤</text>
<text top="417" left="293" width="12" height="10" font="font17" id="p40_t66" reading_order_no="65" segment_no="7" tag_type="formula">G α</text>
<text top="430" left="265" width="68" height="12" font="font18" id="p40_t67" reading_order_no="66" segment_no="7" tag_type="formula">( n k − m ) α 2 λ α − 1</text>
<text top="438" left="318" width="4" height="6" font="font28" id="p40_t68" reading_order_no="67" segment_no="7" tag_type="formula">k</text>
<text top="451" left="108" width="36" height="9" font="font3" id="p40_t69" reading_order_no="68" segment_no="8" tag_type="text">implying</text>
<text top="471" left="138" width="115" height="14" font="font34" id="p40_t70" reading_order_no="69" segment_no="9" tag_type="formula">E [ g k ( l ) | x k ] − ∇ ( l ) f ( x k ) 2</text>
<text top="474" left="264" width="8" height="9" font="font19" id="p40_t71" reading_order_no="70" segment_no="9" tag_type="formula">≤</text>
<text top="468" left="298" width="5" height="9" font="font18" id="p40_t72" reading_order_no="71" segment_no="9" tag_type="formula">1</text>
<text top="481" left="283" width="36" height="10" font="font19" id="p40_t73" reading_order_no="72" segment_no="9" tag_type="formula">|G k \ C k |</text>
<text top="472" left="329" width="14" height="4" font="font29" id="p40_t74" reading_order_no="73" segment_no="9" tag_type="formula">X</text>
<text top="489" left="321" width="30" height="7" font="font28" id="p40_t75" reading_order_no="74" segment_no="9" tag_type="formula">i ∈G k \C k</text>
<text top="473" left="353" width="120" height="12" font="font34" id="p40_t76" reading_order_no="75" segment_no="9" tag_type="formula">E k e g k i ( l ) − ∇ ( l ) f ( x k ) k 2 | x k</text>
<text top="508" left="264" width="8" height="9" font="font19" id="p40_t77" reading_order_no="76" segment_no="9" tag_type="formula">≤</text>
<text top="501" left="312" width="17" height="10" font="font17" id="p40_t78" reading_order_no="77" segment_no="9" tag_type="formula">G 2 α</text>
<text top="515" left="283" width="76" height="13" font="font18" id="p40_t79" reading_order_no="78" segment_no="9" tag_type="formula">( n k − m ) α λ 2( α − 1)</text>
<text top="523" left="334" width="4" height="6" font="font28" id="p40_t80" reading_order_no="79" segment_no="9" tag_type="formula">k</text>
<text top="509" left="361" width="3" height="9" font="font17" id="p40_t81" reading_order_no="80" segment_no="9" tag_type="formula">.</text>
<text top="563" left="108" width="396" height="9" font="font3" id="p40_t82" reading_order_no="81" segment_no="10" tag_type="text">Next, we derive the guarantees for the quality of the aggregation in the case when the number of</text>
<text top="575" left="108" width="271" height="10" font="font3" id="p40_t83" reading_order_no="82" segment_no="10" tag_type="text">Byzantine peers violating the protocol b b k is known at each iteration.</text>
<text top="592" left="108" width="396" height="10" font="font1" id="p40_t84" reading_order_no="83" segment_no="11" tag_type="text">Lemma F.6. Let As. F.1 hold and b ≤ 0 . 15( n − m ) . Assume that b b k is known for each worker</text>
<text top="604" left="108" width="72" height="11" font="font13" id="p40_t85" reading_order_no="84" segment_no="11" tag_type="text">at iteration k , ∆ k</text>
<text top="606" left="176" width="57" height="11" font="font18" id="p40_t86" reading_order_no="85" segment_no="11" tag_type="text">max = 2 λ k =</text>
<text top="604" left="248" width="9" height="6" font="font30" id="p40_t87" reading_order_no="86" segment_no="11" tag_type="text">2 λ</text>
<text top="606" left="238" width="266" height="13" font="font13" id="p40_t88" reading_order_no="87" segment_no="11" tag_type="text">√ n k − m and δ = b δ k is used to compute clipping parameter τ l for</text>
<text top="622" left="108" width="347" height="11" font="font36" id="p40_t89" reading_order_no="88" segment_no="11" tag_type="text">CenteredClip . If the total number of iterations T of CenteredClip satisfies T ≥ log 0 . 94</text>
<text top="619" left="472" width="16" height="8" font="font30" id="p40_t90" reading_order_no="89" segment_no="11" tag_type="text">2 δσ 2</text>
<text top="628" left="459" width="44" height="8" font="font35" id="p40_t91" reading_order_no="90" segment_no="11" tag_type="text">E [ k v 0 − g k k 2 ]</text>
<text top="636" left="108" width="246" height="9" font="font13" id="p40_t92" reading_order_no="91" segment_no="11" tag_type="text">and C HECK A VERAGING is not triggered for any worker, then</text>
<text top="655" left="207" width="77" height="13" font="font34" id="p40_t93" reading_order_no="92" segment_no="12" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="653" left="292" width="56" height="14" font="font19" id="p40_t94" reading_order_no="93" segment_no="12" tag_type="formula">≤ b δ k ( C 1 λ 4 − α 2</text>
<text top="654" left="349" width="56" height="13" font="font17" id="p40_t95" reading_order_no="94" segment_no="12" tag_type="formula">G α 2 + C 2 λ 2 ) ,</text>
<text top="657" left="487" width="17" height="9" font="font3" id="p40_t96" reading_order_no="95" segment_no="12" tag_type="text">(45)</text>
<text top="686" left="189" width="55" height="12" font="font34" id="p40_t97" reading_order_no="96" segment_no="13" tag_type="formula">E k b g k k 2 | x k</text>
<text top="684" left="252" width="61" height="13" font="font19" id="p40_t98" reading_order_no="97" segment_no="13" tag_type="formula">≤ 2 b δ k ( C 1 λ 4 − α 2</text>
<text top="684" left="314" width="109" height="13" font="font17" id="p40_t99" reading_order_no="98" segment_no="13" tag_type="formula">G α 2 + C 2 λ 2 ) + 2 G α λ 2 − α ,</text>
<text top="688" left="487" width="17" height="9" font="font3" id="p40_t100" reading_order_no="99" segment_no="13" tag_type="text">(46)</text>
<text top="704" left="108" width="47" height="11" font="font13" id="p40_t101" reading_order_no="100" segment_no="14" tag_type="formula">where g k =</text>
<text top="704" left="170" width="4" height="6" font="font30" id="p40_t102" reading_order_no="101" segment_no="14" tag_type="formula">1</text>
<text top="711" left="159" width="26" height="7" font="font4" id="p40_t103" reading_order_no="102" segment_no="14" tag_type="formula">|G k \C k |</text>
<text top="705" left="199" width="11" height="4" font="font29" id="p40_t104" reading_order_no="103" segment_no="14" tag_type="formula">P</text>
<text top="717" left="188" width="31" height="7" font="font28" id="p40_t105" reading_order_no="104" segment_no="14" tag_type="formula">j ∈G k \C k</text>
<text top="704" left="221" width="9" height="11" font="font17" id="p40_t106" reading_order_no="105" segment_no="14" tag_type="formula">g k<a href="deeplearning_paper1.html#38">(</a></text>
<text top="706" left="226" width="104" height="11" font="font13" id="p40_t107" reading_order_no="106" segment_no="14" tag_type="formula">j , C 1 = 384 , and C 2 = 4 .<a href="deeplearning_paper1.html#38">41</a></text>
<text top="743" left="301" width="10" height="9" font="font3" id="p40_t108" reading_order_no="107" segment_no="15" tag_type="text">40<a href="deeplearning_paper1.html#38">)</a></text>
</page>
<page number="41" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="396" height="12" font="font13" id="p41_t1" reading_order_no="0" segment_no="0" tag_type="text">Proof. Consider the i -th part of b g k , i.e., consider b g k ( i ) . If i ∈ G k \ C k , then, in view of ( 42 ), we can</text>
<text top="86" left="108" width="134" height="9" font="font3" id="p41_t2" reading_order_no="1" segment_no="0" tag_type="text">directly apply Lemma F.1 and get</text>
<text top="108" left="159" width="100" height="12" font="font34" id="p41_t3" reading_order_no="2" segment_no="1" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="109" left="267" width="40" height="10" font="font19" id="p41_t4" reading_order_no="3" segment_no="1" tag_type="formula">≤ 384 b δ k λ</text>
<text top="104" left="307" width="15" height="17" font="font28" id="p41_t5" reading_order_no="4" segment_no="1" tag_type="formula">4 − α 2 k</text>
<text top="100" left="340" width="14" height="12" font="font17" id="p41_t6" reading_order_no="5" segment_no="1" tag_type="formula">G α 2</text>
<text top="114" left="325" width="45" height="13" font="font18" id="p41_t7" reading_order_no="6" segment_no="1" tag_type="formula">( n k − m ) α 4</text>
<text top="100" left="375" width="57" height="19" font="font18" id="p41_t8" reading_order_no="7" segment_no="1" tag_type="formula">= 384 b δ k λ 4 − α 2</text>
<text top="100" left="434" width="14" height="12" font="font17" id="p41_t9" reading_order_no="8" segment_no="1" tag_type="formula">G α 2</text>
<text top="116" left="402" width="32" height="10" font="font17" id="p41_t10" reading_order_no="9" segment_no="1" tag_type="formula">n k − m</text>
<text top="110" left="450" width="3" height="9" font="font17" id="p41_t11" reading_order_no="10" segment_no="1" tag_type="formula">.</text>
<text top="131" left="108" width="101" height="11" font="font3" id="p41_t12" reading_order_no="11" segment_no="2" tag_type="text">Next, if i ∈ B k \ C k , then</text>
<text top="152" left="190" width="99" height="13" font="font34" id="p41_t13" reading_order_no="12" segment_no="3" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="152" left="297" width="27" height="11" font="font19" id="p41_t14" reading_order_no="13" segment_no="3" tag_type="formula">≤ (∆ k</text>
<text top="152" left="320" width="51" height="13" font="font18" id="p41_t15" reading_order_no="14" segment_no="3" tag_type="formula">max ) 2 = 4 λ 2</text>
<text top="154" left="367" width="16" height="11" font="font18" id="p41_t16" reading_order_no="15" segment_no="3" tag_type="formula">k =</text>
<text top="146" left="395" width="15" height="11" font="font18" id="p41_t17" reading_order_no="16" segment_no="3" tag_type="formula">4 λ 2</text>
<text top="154" left="387" width="36" height="17" font="font17" id="p41_t18" reading_order_no="17" segment_no="3" tag_type="formula">n k − m .</text>
<text top="175" left="108" width="120" height="9" font="font3" id="p41_t19" reading_order_no="18" segment_no="4" tag_type="text">Putting all together, we derive</text>
<text top="190" left="108" width="77" height="13" font="font34" id="p41_t20" reading_order_no="19" segment_no="5" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="192" left="200" width="8" height="9" font="font18" id="p41_t21" reading_order_no="20" segment_no="5" tag_type="formula">=<a href="deeplearning_paper1.html#39">(</a></text>
<text top="189" left="226" width="14" height="4" font="font29" id="p41_t22" reading_order_no="21" segment_no="5" tag_type="formula">X<a href="deeplearning_paper1.html#39">42</a></text>
<text top="206" left="218" width="30" height="7" font="font28" id="p41_t23" reading_order_no="22" segment_no="5" tag_type="formula">i ∈G k \C k<a href="deeplearning_paper1.html#39">)</a>, we can</text>
<text top="190" left="250" width="99" height="13" font="font34" id="p41_t24" reading_order_no="23" segment_no="5" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="192" left="356" width="8" height="9" font="font18" id="p41_t25" reading_order_no="24" segment_no="5" tag_type="formula">+<a href="deeplearning_paper1.html#25">F.1</a></text>
<text top="189" left="374" width="14" height="4" font="font29" id="p41_t26" reading_order_no="25" segment_no="5" tag_type="formula">X</text>
<text top="206" left="366" width="30" height="7" font="font28" id="p41_t27" reading_order_no="26" segment_no="5" tag_type="formula">i ∈B k \C k</text>
<text top="190" left="398" width="100" height="13" font="font34" id="p41_t28" reading_order_no="27" segment_no="5" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="227" left="200" width="8" height="9" font="font19" id="p41_t29" reading_order_no="28" segment_no="5" tag_type="formula">≤</text>
<text top="218" left="218" width="127" height="20" font="font18" id="p41_t30" reading_order_no="29" segment_no="5" tag_type="formula">(1 − b δ k )( n k − m ) · 384 b δ k λ 4 − α 2</text>
<text top="218" left="346" width="14" height="12" font="font17" id="p41_t31" reading_order_no="30" segment_no="5" tag_type="formula">G α 2</text>
<text top="234" left="315" width="32" height="10" font="font17" id="p41_t32" reading_order_no="31" segment_no="5" tag_type="formula">n k − m</text>
<text top="227" left="365" width="64" height="11" font="font18" id="p41_t33" reading_order_no="32" segment_no="5" tag_type="formula">+ b δ k ( n k − m ) ·</text>
<text top="220" left="440" width="15" height="10" font="font18" id="p41_t34" reading_order_no="33" segment_no="5" tag_type="formula">4 λ 2</text>
<text top="234" left="432" width="32" height="10" font="font17" id="p41_t35" reading_order_no="34" segment_no="5" tag_type="formula">n k − m</text>
<text top="250" left="200" width="8" height="9" font="font19" id="p41_t36" reading_order_no="35" segment_no="5" tag_type="formula">≤</text>
<text top="247" left="218" width="45" height="13" font="font29" id="p41_t37" reading_order_no="36" segment_no="5" tag_type="formula">b δ k ( C 1 λ 4 − α 2</text>
<text top="247" left="265" width="56" height="13" font="font17" id="p41_t38" reading_order_no="37" segment_no="5" tag_type="formula">G α 2 + C 2 λ 2 ) .</text>
<text top="266" left="108" width="85" height="9" font="font3" id="p41_t39" reading_order_no="38" segment_no="6" tag_type="text">Using ( 43 ) we obtain</text>
<text top="280" left="147" width="55" height="12" font="font34" id="p41_t40" reading_order_no="39" segment_no="7" tag_type="formula">E k b g k k 2 | x k</text>
<text top="281" left="219" width="8" height="9" font="font19" id="p41_t41" reading_order_no="40" segment_no="7" tag_type="formula">≤</text>
<text top="280" left="239" width="82" height="12" font="font18" id="p41_t42" reading_order_no="41" segment_no="7" tag_type="formula">2 E k b g k − g k k 2 | x k</text>
<text top="280" left="328" width="70" height="12" font="font18" id="p41_t43" reading_order_no="42" segment_no="7" tag_type="formula">+ 2 E k g k k 2 | x k</text>
<text top="298" left="217" width="11" height="15" font="font19" id="p41_t44" reading_order_no="43" segment_no="7" tag_type="formula">( 45 ) ≤</text>
<text top="301" left="239" width="50" height="14" font="font18" id="p41_t45" reading_order_no="44" segment_no="7" tag_type="formula">2 b δ k ( C 1 λ 4 − α 2</text>
<text top="302" left="290" width="71" height="13" font="font17" id="p41_t46" reading_order_no="45" segment_no="7" tag_type="formula">G α 2 + C 2 λ 2 ) + 2</text>
<text top="302" left="381" width="14" height="4" font="font29" id="p41_t47" reading_order_no="46" segment_no="7" tag_type="formula">X</text>
<text top="319" left="362" width="51" height="7" font="font28" id="p41_t48" reading_order_no="47" segment_no="7" tag_type="formula">i ∈ ( G k ∪B k ) \C k</text>
<text top="296" left="423" width="34" height="11" font="font17" id="p41_t49" reading_order_no="48" segment_no="7" tag_type="formula">G α λ 2 − α</text>
<text top="303" left="442" width="4" height="6" font="font28" id="p41_t50" reading_order_no="49" segment_no="7" tag_type="formula">k</text>
<text top="309" left="417" width="45" height="13" font="font18" id="p41_t51" reading_order_no="50" segment_no="7" tag_type="formula">( n k − m ) α 2</text>
<text top="335" left="219" width="8" height="9" font="font18" id="p41_t52" reading_order_no="51" segment_no="7" tag_type="formula">=</text>
<text top="331" left="239" width="50" height="13" font="font18" id="p41_t53" reading_order_no="52" segment_no="7" tag_type="formula">2 b δ k ( C 1 λ 4 − α 2</text>
<text top="331" left="290" width="109" height="13" font="font17" id="p41_t54" reading_order_no="53" segment_no="7" tag_type="formula">G α 2 + C 2 λ 2 ) + 2 G α λ 2 − α .</text>
<text top="373" left="108" width="396" height="9" font="font3" id="p41_t55" reading_order_no="54" segment_no="8" tag_type="text">We notice that Verification 3 can be simplified in the following way: if at least on good peer i notices</text>
<text top="382" left="108" width="396" height="12" font="font3" id="p41_t56" reading_order_no="55" segment_no="8" tag_type="text">that k e g k i ( j ) − b g k ( j ) k &gt; ∆ k max = 2 λ k , then peer i should accuse j -th peer and both are removed</text>
<text top="395" left="108" width="396" height="9" font="font3" id="p41_t57" reading_order_no="56" segment_no="8" tag_type="text">from the training process. In this scenario, there is no sense for Byzantine workers in triggering to</text>
<text top="405" left="108" width="303" height="9" font="font3" id="p41_t58" reading_order_no="57" segment_no="8" tag_type="text">deviate significantly from the clipped stochastic gradients of the good peers.</text>
<text top="423" left="108" width="396" height="10" font="font3" id="p41_t59" reading_order_no="58" segment_no="9" tag_type="text">As for BTARD-SGD, when b b k is unknown we always use C ENTERED C LIP with τ l = ∞ for all</text>
<text top="434" left="108" width="396" height="10" font="font17" id="p41_t60" reading_order_no="59" segment_no="9" tag_type="text">l ≥ 0 , i.e., good peers compute an exact average. In this settings, even 1 byzantine worker can</text>
<text top="446" left="108" width="396" height="9" font="font3" id="p41_t61" reading_order_no="60" segment_no="9" tag_type="text">significantly shift the average in all parts of the vector. The next lemma quantifies the negative effect</text>
<text top="457" left="108" width="135" height="9" font="font3" id="p41_t62" reading_order_no="61" segment_no="9" tag_type="text">of Byzantine workers in this case.</text>
<text top="472" left="108" width="396" height="10" font="font1" id="p41_t63" reading_order_no="62" segment_no="10" tag_type="text">Lemma F.7. Let As. F.1 hold and b ≤ 0 . 15( n − m ) . Assume that b b k is known for each worker</text>
<text top="484" left="108" width="125" height="12" font="font13" id="p41_t64" reading_order_no="63" segment_no="10" tag_type="text">at iteration k , ∆ k max = 2 λ k =</text>
<text top="484" left="248" width="9" height="6" font="font30" id="p41_t65" reading_order_no="64" segment_no="10" tag_type="text">2 λ</text>
<text top="486" left="238" width="266" height="12" font="font13" id="p41_t66" reading_order_no="65" segment_no="10" tag_type="text">√ n k − m and δ = b δ k is used to compute clipping parameter τ l for</text>
<text top="502" left="108" width="347" height="11" font="font36" id="p41_t67" reading_order_no="66" segment_no="10" tag_type="text">CenteredClip . If the total number of iterations T of CenteredClip satisfies T ≥ log 0 . 94</text>
<text top="499" left="472" width="16" height="7" font="font30" id="p41_t68" reading_order_no="67" segment_no="10" tag_type="text">2 δσ 2</text>
<text top="507" left="459" width="44" height="8" font="font35" id="p41_t69" reading_order_no="68" segment_no="10" tag_type="text">E [ k v 0 − g k k 2 ]</text>
<text top="516" left="108" width="246" height="9" font="font13" id="p41_t70" reading_order_no="69" segment_no="10" tag_type="text">and C HECK A VERAGING is not triggered for any worker, then</text>
<text top="529" left="237" width="77" height="13" font="font34" id="p41_t71" reading_order_no="70" segment_no="11" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="529" left="322" width="53" height="12" font="font19" id="p41_t72" reading_order_no="71" segment_no="11" tag_type="formula">≤ C 2 λ 2 1 k,v ,</text>
<text top="532" left="487" width="17" height="9" font="font3" id="p41_t73" reading_order_no="72" segment_no="11" tag_type="text">(47)</text>
<text top="555" left="220" width="55" height="13" font="font34" id="p41_t74" reading_order_no="73" segment_no="12" tag_type="formula">E k b g k k 2 | x k</text>
<text top="555" left="282" width="111" height="12" font="font19" id="p41_t75" reading_order_no="74" segment_no="12" tag_type="formula">≤ 2 C 2 λ 2 1 k,v + 2 G α λ 2 − α ,</text>
<text top="557" left="487" width="17" height="9" font="font3" id="p41_t76" reading_order_no="75" segment_no="12" tag_type="text">(48)</text>
<text top="571" left="108" width="47" height="11" font="font13" id="p41_t77" reading_order_no="76" segment_no="13" tag_type="text">where g k =</text>
<text top="571" left="170" width="4" height="6" font="font30" id="p41_t78" reading_order_no="77" segment_no="13" tag_type="text">1</text>
<text top="578" left="159" width="26" height="7" font="font4" id="p41_t79" reading_order_no="78" segment_no="13" tag_type="text">|G k \C k |</text>
<text top="572" left="198" width="11" height="4" font="font29" id="p41_t80" reading_order_no="79" segment_no="13" tag_type="text">P</text>
<text top="584" left="188" width="31" height="7" font="font28" id="p41_t81" reading_order_no="80" segment_no="13" tag_type="text">j ∈G k \C k</text>
<text top="571" left="221" width="284" height="12" font="font17" id="p41_t82" reading_order_no="81" segment_no="13" tag_type="text">g k j , C 2 = 4 , and 1 k,v is an indicator function of the event that at least 1</text>
<text top="593" left="108" width="200" height="9" font="font13" id="p41_t83" reading_order_no="82" segment_no="13" tag_type="text">Byzantine peer violates the protocol at iteration k .</text>
<text top="615" left="108" width="170" height="10" font="font13" id="p41_t84" reading_order_no="83" segment_no="14" tag_type="text">Proof. For all i ∈ ( G k ∪ B k ) \ C k we have</text>
<text top="636" left="165" width="99" height="13" font="font34" id="p41_t85" reading_order_no="84" segment_no="15" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="636" left="272" width="27" height="11" font="font19" id="p41_t86" reading_order_no="85" segment_no="15" tag_type="formula">≤ (∆ k</text>
<text top="636" left="295" width="69" height="13" font="font18" id="p41_t87" reading_order_no="86" segment_no="15" tag_type="formula">max ) 2 1 k,v = 4 λ 2</text>
<text top="638" left="360" width="33" height="11" font="font18" id="p41_t88" reading_order_no="87" segment_no="15" tag_type="formula">k 1 k,v =</text>
<text top="630" left="405" width="15" height="10" font="font18" id="p41_t89" reading_order_no="88" segment_no="15" tag_type="formula">4 λ 2</text>
<text top="639" left="397" width="50" height="15" font="font17" id="p41_t90" reading_order_no="89" segment_no="15" tag_type="formula">n k − m 1 k,v</text>
<text top="658" left="108" width="36" height="9" font="font3" id="p41_t91" reading_order_no="90" segment_no="16" tag_type="text">implying</text>
<text top="674" left="172" width="77" height="12" font="font34" id="p41_t92" reading_order_no="91" segment_no="17" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="676" left="264" width="8" height="9" font="font18" id="p41_t93" reading_order_no="92" segment_no="17" tag_type="formula">=</text>
<text top="673" left="300" width="14" height="4" font="font29" id="p41_t94" reading_order_no="93" segment_no="17" tag_type="formula">X</text>
<text top="690" left="281" width="51" height="7" font="font28" id="p41_t95" reading_order_no="94" segment_no="17" tag_type="formula">i ∈ ( G k ∪B k ) \C k</text>
<text top="674" left="334" width="100" height="12" font="font34" id="p41_t96" reading_order_no="95" segment_no="17" tag_type="formula">E k b g k ( i ) − g k ( i ) k 2 | x k</text>
<text top="709" left="264" width="8" height="9" font="font19" id="p41_t97" reading_order_no="96" segment_no="17" tag_type="formula">≤</text>
<text top="709" left="281" width="45" height="10" font="font18" id="p41_t98" reading_order_no="97" segment_no="17" tag_type="formula">( n k − m ) ·</text>
<text top="701" left="338" width="14" height="11" font="font18" id="p41_t99" reading_order_no="98" segment_no="17" tag_type="formula">4 λ 2</text>
<text top="716" left="329" width="32" height="10" font="font17" id="p41_t100" reading_order_no="99" segment_no="17" tag_type="formula">n k − m</text>
<text top="708" left="362" width="73" height="11" font="font18" id="p41_t101" reading_order_no="100" segment_no="17" tag_type="formula">1 k,v = C 2 λ 2 1 k,v .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p41_t102" reading_order_no="101" segment_no="18" tag_type="text">41</text>
</page>
<page number="42" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="85" height="9" font="font3" id="p42_t1" reading_order_no="0" segment_no="0" tag_type="text">Using ( 43 ) we obtain<a href="deeplearning_paper1.html#39">(</a></text>
<text top="96" left="121" width="18" height="11" font="font34" id="p42_t2" reading_order_no="1" segment_no="1" tag_type="formula">E k<a href="deeplearning_paper1.html#39">43</a></text>
<text top="95" left="139" width="37" height="13" font="font29" id="p42_t3" reading_order_no="2" segment_no="1" tag_type="formula">b g k k 2 | x k<a href="deeplearning_paper1.html#39">) </a>we obtain</text>
<text top="96" left="193" width="8" height="9" font="font19" id="p42_t4" reading_order_no="3" segment_no="1" tag_type="formula">≤</text>
<text top="96" left="213" width="22" height="11" font="font18" id="p42_t5" reading_order_no="4" segment_no="1" tag_type="formula">2 E k</text>
<text top="95" left="235" width="60" height="13" font="font29" id="p42_t6" reading_order_no="5" segment_no="1" tag_type="formula">b g k − g k k 2 | x k</text>
<text top="95" left="302" width="70" height="12" font="font18" id="p42_t7" reading_order_no="6" segment_no="1" tag_type="formula">+ 2 E k g k k 2 | x k</text>
<text top="114" left="191" width="11" height="15" font="font19" id="p42_t8" reading_order_no="7" segment_no="1" tag_type="formula">( 45 ) ≤</text>
<text top="118" left="213" width="61" height="12" font="font18" id="p42_t9" reading_order_no="8" segment_no="1" tag_type="formula">2 C 2 λ 2 1 k,v + 2</text>
<text top="117" left="294" width="14" height="4" font="font29" id="p42_t10" reading_order_no="9" segment_no="1" tag_type="formula">X</text>
<text top="134" left="276" width="51" height="7" font="font28" id="p42_t11" reading_order_no="10" segment_no="1" tag_type="formula">i ∈ ( G k ∪B k ) \C k</text>
<text top="111" left="336" width="34" height="11" font="font17" id="p42_t12" reading_order_no="11" segment_no="1" tag_type="formula">G α λ 2 − α</text>
<text top="118" left="355" width="4" height="6" font="font28" id="p42_t13" reading_order_no="12" segment_no="1" tag_type="formula">k</text>
<text top="125" left="330" width="46" height="12" font="font18" id="p42_t14" reading_order_no="13" segment_no="1" tag_type="formula">( n k − m ) α 2</text>
<text top="118" left="381" width="110" height="12" font="font18" id="p42_t15" reading_order_no="14" segment_no="1" tag_type="formula">= 2 C 2 λ 2 1 k,v + 2 G α λ 2 − α .</text>
<text top="185" left="108" width="20" height="9" font="font1" id="p42_t16" reading_order_no="15" segment_no="2" tag_type="title">F.3.2</text>
<text top="185" left="138" width="52" height="9" font="font1" id="p42_t17" reading_order_no="16" segment_no="2" tag_type="title">Convex case</text>
<text top="205" left="108" width="396" height="9" font="font3" id="p42_t18" reading_order_no="17" segment_no="3" tag_type="text">In this section, we provide the complete statements and the full proofs of the convergence results for</text>
<text top="216" left="108" width="396" height="9" font="font3" id="p42_t19" reading_order_no="18" segment_no="3" tag_type="text">BTARD-C LIPPED -SGD when the objective function f is smooth and convex. We start with the case</text>
<text top="229" left="108" width="353" height="10" font="font3" id="p42_t20" reading_order_no="19" segment_no="3" tag_type="text">when the number of Byzantine peers violating the protocol b b k is known at each iteration.</text>
<text top="244" left="108" width="396" height="11" font="font1" id="p42_t21" reading_order_no="20" segment_no="4" tag_type="text">Theorem F.7. Let As. F.1 hold, Q is bounded, f be convex, x ∗ be some optimum of f , and ∇ f ( x ∗ ) =</text>
<text top="256" left="108" width="396" height="10" font="font18" id="p42_t22" reading_order_no="21" segment_no="4" tag_type="text">0 . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and the exact number of attacking</text>
<text top="268" left="108" width="315" height="9" font="font13" id="p42_t23" reading_order_no="22" segment_no="4" tag_type="text">Byzantine peers is known to all good peers at each iteration. Next, assume that</text>
<text top="301" left="116" width="36" height="9" font="font17" id="p42_t24" reading_order_no="23" segment_no="5" tag_type="formula">γ = min</text>
<text top="287" left="154" width="9" height="4" font="font29" id="p42_t25" reading_order_no="24" segment_no="5" tag_type="formula"></text>
<text top="296" left="154" width="9" height="4" font="font29" id="p42_t26" reading_order_no="25" segment_no="5" tag_type="formula"></text>
<text top="314" left="154" width="9" height="4" font="font29" id="p42_t27" reading_order_no="26" segment_no="5" tag_type="formula"></text>
<text top="294" left="177" width="11" height="9" font="font17" id="p42_t28" reading_order_no="27" segment_no="5" tag_type="formula">R 0</text>
<text top="300" left="164" width="8" height="9" font="font19" id="p42_t29" reading_order_no="28" segment_no="5" tag_type="formula">√</text>
<text top="306" left="172" width="28" height="12" font="font18" id="p42_t30" reading_order_no="29" segment_no="5" tag_type="formula">6 GK 1 α</text>
<text top="301" left="203" width="3" height="9" font="font17" id="p42_t31" reading_order_no="30" segment_no="5" tag_type="formula">,</text>
<text top="294" left="265" width="20" height="9" font="font17" id="p42_t32" reading_order_no="31" segment_no="5" tag_type="formula">mR 0</text>
<text top="313" left="208" width="24" height="9" font="font18" id="p42_t33" reading_order_no="32" segment_no="5" tag_type="formula">12 Gn</text>
<text top="307" left="232" width="10" height="4" font="font29" id="p42_t34" reading_order_no="33" segment_no="5" tag_type="formula">q</text>
<text top="310" left="242" width="100" height="13" font="font18" id="p42_t35" reading_order_no="34" segment_no="5" tag_type="formula">10 δ ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="287" left="343" width="9" height="4" font="font29" id="p42_t36" reading_order_no="35" segment_no="5" tag_type="formula"></text>
<text top="296" left="343" width="9" height="4" font="font29" id="p42_t37" reading_order_no="36" segment_no="5" tag_type="formula"></text>
<text top="314" left="343" width="9" height="4" font="font29" id="p42_t38" reading_order_no="37" segment_no="5" tag_type="formula"></text>
<text top="301" left="354" width="3" height="9" font="font17" id="p42_t39" reading_order_no="38" segment_no="5" tag_type="formula">,<a href="deeplearning_paper1.html#40">(</a></text>
<text top="299" left="368" width="63" height="12" font="font18" id="p42_t40" reading_order_no="39" segment_no="5" tag_type="formula">∆ k max = 2 λ k =<a href="deeplearning_paper1.html#40">45</a></text>
<text top="294" left="450" width="11" height="9" font="font18" id="p42_t41" reading_order_no="40" segment_no="5" tag_type="formula">2 λ<a href="deeplearning_paper1.html#40">)</a></text>
<text top="300" left="435" width="8" height="9" font="font19" id="p42_t42" reading_order_no="41" segment_no="5" tag_type="formula">√</text>
<text top="301" left="443" width="36" height="16" font="font17" id="p42_t43" reading_order_no="42" segment_no="5" tag_type="formula">n k − m ,</text>
<text top="301" left="487" width="17" height="9" font="font3" id="p42_t44" reading_order_no="43" segment_no="5" tag_type="text">(49)</text>
<text top="341" left="283" width="46" height="12" font="font17" id="p42_t45" reading_order_no="44" segment_no="6" tag_type="formula">λ = GK 1 α ,</text>
<text top="344" left="487" width="17" height="9" font="font3" id="p42_t46" reading_order_no="45" segment_no="6" tag_type="text">(50)</text>
<text top="361" left="108" width="397" height="13" font="font13" id="p42_t47" reading_order_no="46" segment_no="7" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k max is the parameter for verification 3 at iteration k of BTARD-</text>
<text top="373" left="108" width="397" height="12" font="font3" id="p42_t48" reading_order_no="47" segment_no="7" tag_type="text">C LIPPED -SGD . Then, we have E [ f ( x K ) − f ( x ∗ )] ≤ ε after K iterations of BTARD-C LIPPED -SGD ,</text>
<text top="386" left="108" width="24" height="9" font="font13" id="p42_t49" reading_order_no="48" segment_no="7" tag_type="text">where</text>
<text top="411" left="212" width="30" height="10" font="font17" id="p42_t50" reading_order_no="49" segment_no="8" tag_type="formula">K = O</text>
<text top="398" left="244" width="9" height="4" font="font29" id="p42_t51" reading_order_no="50" segment_no="8" tag_type="formula"></text>
<text top="416" left="244" width="9" height="4" font="font29" id="p42_t52" reading_order_no="51" segment_no="8" tag_type="formula"></text>
<text top="405" left="261" width="20" height="10" font="font17" id="p42_t53" reading_order_no="52" segment_no="8" tag_type="formula">GR 0</text>
<text top="419" left="269" width="5" height="9" font="font17" id="p42_t54" reading_order_no="53" segment_no="8" tag_type="formula">ε</text>
<text top="401" left="291" width="13" height="9" font="font31" id="p42_t55" reading_order_no="54" segment_no="8" tag_type="formula">α α − 1</text>
<text top="412" left="308" width="8" height="9" font="font18" id="p42_t56" reading_order_no="55" segment_no="8" tag_type="formula">+</text>
<text top="405" left="327" width="6" height="9" font="font17" id="p42_t57" reading_order_no="56" segment_no="8" tag_type="formula">n</text>
<text top="396" left="333" width="8" height="9" font="font19" id="p42_t58" reading_order_no="57" segment_no="8" tag_type="formula">√</text>
<text top="405" left="342" width="24" height="10" font="font17" id="p42_t59" reading_order_no="58" segment_no="8" tag_type="formula">δGR 0</text>
<text top="419" left="340" width="13" height="9" font="font17" id="p42_t60" reading_order_no="59" segment_no="8" tag_type="formula">mε</text>
<text top="398" left="367" width="33" height="9" font="font29" id="p42_t61" reading_order_no="60" segment_no="8" tag_type="formula">! α α − 1 </text>
<text top="416" left="391" width="9" height="4" font="font29" id="p42_t62" reading_order_no="61" segment_no="8" tag_type="formula"></text>
<text top="412" left="487" width="17" height="9" font="font3" id="p42_t63" reading_order_no="62" segment_no="8" tag_type="text">(51)</text>
<text top="444" left="108" width="51" height="12" font="font13" id="p42_t64" reading_order_no="63" segment_no="9" tag_type="formula">and x K = 1</text>
<text top="452" left="153" width="7" height="6" font="font28" id="p42_t65" reading_order_no="64" segment_no="9" tag_type="formula">K</text>
<text top="443" left="163" width="28" height="7" font="font29" id="p42_t66" reading_order_no="65" segment_no="9" tag_type="formula">P K − 1</text>
<text top="447" left="174" width="20" height="10" font="font13" id="p42_t67" reading_order_no="66" segment_no="9" tag_type="formula">k =0 .</text>
<text top="479" left="108" width="313" height="9" font="font13" id="p42_t68" reading_order_no="67" segment_no="10" tag_type="text">Proof. Non-expansiveness of the projection operator and convexity of f imply</text>
<text top="500" left="108" width="57" height="12" font="font19" id="p42_t69" reading_order_no="68" segment_no="11" tag_type="formula">k x k +1 − x ∗ k 2</text>
<text top="503" left="176" width="8" height="9" font="font18" id="p42_t70" reading_order_no="69" segment_no="11" tag_type="formula">=</text>
<text top="499" left="199" width="131" height="15" font="font3" id="p42_t71" reading_order_no="70" segment_no="11" tag_type="formula">proj Q ( x k − γ b g k ) − proj Q ( x ∗ ) 2</text>
<text top="519" left="176" width="8" height="9" font="font19" id="p42_t72" reading_order_no="71" segment_no="11" tag_type="formula">≤</text>
<text top="517" left="193" width="75" height="13" font="font19" id="p42_t73" reading_order_no="72" segment_no="11" tag_type="formula">k x k − x ∗ − γ b g k k 2</text>
<text top="535" left="176" width="8" height="9" font="font18" id="p42_t74" reading_order_no="73" segment_no="11" tag_type="formula">=</text>
<text top="533" left="193" width="172" height="13" font="font19" id="p42_t75" reading_order_no="74" segment_no="11" tag_type="formula">k x k − x ∗ k 2 − 2 γ h x k − x ∗ , b g k i + γ 2 k b g k k 2</text>
<text top="551" left="176" width="8" height="9" font="font18" id="p42_t76" reading_order_no="75" segment_no="11" tag_type="formula">=</text>
<text top="548" left="193" width="318" height="13" font="font19" id="p42_t77" reading_order_no="76" segment_no="11" tag_type="formula">k x k − x ∗ k 2 − 2 γ h x k − x ∗ , ∇ f ( x k ) i − 2 γ h x k − x ∗ , b g k − ∇ f ( x k ) i + γ 2 k b g k k 2</text>
<text top="566" left="176" width="8" height="9" font="font19" id="p42_t78" reading_order_no="77" segment_no="11" tag_type="formula">≤</text>
<text top="564" left="193" width="315" height="13" font="font19" id="p42_t79" reading_order_no="78" segment_no="11" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) − 2 γ h x k − x ∗ , b g k − ∇ f ( x k ) i + γ 2 k b g k k 2 .</text>
<text top="587" left="108" width="369" height="12" font="font3" id="p42_t80" reading_order_no="79" segment_no="12" tag_type="text">Taking conditional expectation E [ · | x k ] from the both sides of previous inequality we derive</text>
<text top="609" left="108" width="88" height="13" font="font34" id="p42_t81" reading_order_no="80" segment_no="13" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="611" left="213" width="8" height="9" font="font19" id="p42_t82" reading_order_no="81" segment_no="13" tag_type="formula">≤</text>
<text top="609" left="233" width="137" height="11" font="font19" id="p42_t83" reading_order_no="82" segment_no="13" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ )</text>
<text top="625" left="243" width="148" height="13" font="font19" id="p42_t84" reading_order_no="83" segment_no="13" tag_type="formula">− 2 γ E h x k − x ∗ , b g k − ∇ f ( x k ) i | x k</text>
<text top="626" left="399" width="75" height="12" font="font18" id="p42_t85" reading_order_no="84" segment_no="13" tag_type="formula">+ γ 2 E k b g k k 2 | x k</text>
<text top="643" left="211" width="11" height="15" font="font19" id="p42_t86" reading_order_no="85" segment_no="13" tag_type="formula">( 46 ) ≤</text>
<text top="647" left="233" width="203" height="12" font="font19" id="p42_t87" reading_order_no="86" segment_no="13" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) + 2 γ 2 G α λ 2 − α</text>
<text top="665" left="243" width="125" height="13" font="font19" id="p42_t88" reading_order_no="87" segment_no="13" tag_type="formula">− 2 γ x k − x ∗ , E b g k − g k | x k</text>
<text top="664" left="379" width="71" height="13" font="font18" id="p42_t89" reading_order_no="88" segment_no="13" tag_type="formula">+ 2 γ 2 b δ k ( C 1 λ 4 − α 2</text>
<text top="664" left="451" width="54" height="13" font="font17" id="p42_t90" reading_order_no="89" segment_no="13" tag_type="formula">G α 2 + C 2 λ 2 )</text>
<text top="686" left="213" width="8" height="9" font="font18" id="p42_t91" reading_order_no="90" segment_no="13" tag_type="formula">=</text>
<text top="681" left="233" width="205" height="14" font="font19" id="p42_t92" reading_order_no="91" segment_no="13" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) + 2 γ 2 G 2 K 2 − α α</text>
<text top="707" left="243" width="125" height="13" font="font19" id="p42_t93" reading_order_no="92" segment_no="13" tag_type="formula">− 2 γ x k − x ∗ , E b g k − g k | x k</text>
<text top="699" left="379" width="124" height="20" font="font18" id="p42_t94" reading_order_no="93" segment_no="13" tag_type="formula">+ 2 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="716" left="431" width="32" height="10" font="font17" id="p42_t95" reading_order_no="94" segment_no="13" tag_type="formula">n k − m</text>
<text top="710" left="504" width="13" height="9" font="font29" id="p42_t96" reading_order_no="95" segment_no="13" tag_type="formula">b b k .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p42_t97" reading_order_no="96" segment_no="14" tag_type="text">42</text>
</page>
<page number="43" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="358" height="9" font="font3" id="p43_t1" reading_order_no="0" segment_no="0" tag_type="text">To estimate the inner product in the right-hand side we apply Cauchy-Schwarz inequality:</text>
<text top="91" left="127" width="125" height="13" font="font19" id="p43_t2" reading_order_no="1" segment_no="1" tag_type="formula">− 2 γ x k − x ∗ , E b g k − g k | x k</text>
<text top="93" left="274" width="8" height="9" font="font19" id="p43_t3" reading_order_no="2" segment_no="1" tag_type="formula">≤</text>
<text top="91" left="294" width="58" height="11" font="font18" id="p43_t4" reading_order_no="3" segment_no="1" tag_type="formula">2 γ k x k − x ∗ k ·</text>
<text top="91" left="360" width="63" height="13" font="font34" id="p43_t5" reading_order_no="4" segment_no="1" tag_type="formula">E b g k − g k | x k</text>
<text top="109" left="274" width="8" height="9" font="font19" id="p43_t6" reading_order_no="5" segment_no="1" tag_type="formula">≤</text>
<text top="107" left="294" width="126" height="13" font="font18" id="p43_t7" reading_order_no="6" segment_no="1" tag_type="formula">2 γ k x k − x ∗ k E k b g k − g k k | x k</text>
<text top="130" left="274" width="8" height="9" font="font19" id="p43_t8" reading_order_no="7" segment_no="1" tag_type="formula">≤</text>
<text top="125" left="294" width="63" height="14" font="font18" id="p43_t9" reading_order_no="8" segment_no="1" tag_type="formula">2 γ k x k − x ∗ k q</text>
<text top="128" left="357" width="77" height="13" font="font34" id="p43_t10" reading_order_no="9" segment_no="1" tag_type="formula">E k b g k − g k k 2 | x k</text>
<text top="148" left="272" width="11" height="14" font="font19" id="p43_t11" reading_order_no="10" segment_no="1" tag_type="formula">( 45 ) ≤</text>
<text top="152" left="294" width="53" height="11" font="font18" id="p43_t12" reading_order_no="11" segment_no="1" tag_type="formula">2 γ k x k − x ∗ k</text>
<text top="147" left="347" width="10" height="4" font="font29" id="p43_t13" reading_order_no="12" segment_no="1" tag_type="formula">q</text>
<text top="151" left="357" width="46" height="13" font="font29" id="p43_t14" reading_order_no="13" segment_no="1" tag_type="formula">b δ k ( C 1 λ 4 − α 2</text>
<text top="151" left="404" width="53" height="13" font="font17" id="p43_t15" reading_order_no="14" segment_no="1" tag_type="formula">G α 2 + C 2 λ 2 )</text>
<text top="185" left="274" width="8" height="9" font="font18" id="p43_t16" reading_order_no="15" segment_no="1" tag_type="formula">=</text>
<text top="174" left="295" width="61" height="11" font="font18" id="p43_t17" reading_order_no="16" segment_no="1" tag_type="formula">2 γG k x k − x ∗ k</text>
<text top="170" left="356" width="10" height="4" font="font29" id="p43_t18" reading_order_no="17" segment_no="1" tag_type="formula">q</text>
<text top="173" left="366" width="36" height="13" font="font17" id="p43_t19" reading_order_no="18" segment_no="1" tag_type="formula">C 1 K 4 − α 2 α</text>
<text top="174" left="406" width="36" height="12" font="font18" id="p43_t20" reading_order_no="19" segment_no="1" tag_type="formula">+ C 2 K 2 α</text>
<text top="184" left="349" width="41" height="17" font="font19" id="p43_t21" reading_order_no="20" segment_no="1" tag_type="formula">√ n k − m</text>
<text top="177" left="445" width="10" height="4" font="font29" id="p43_t22" reading_order_no="21" segment_no="1" tag_type="formula">q</text>
<text top="185" left="454" width="9" height="9" font="font29" id="p43_t23" reading_order_no="22" segment_no="1" tag_type="formula">b b k</text>
<text top="219" left="274" width="8" height="9" font="font19" id="p43_t24" reading_order_no="23" segment_no="1" tag_type="formula">≤</text>
<text top="209" left="295" width="61" height="11" font="font18" id="p43_t25" reading_order_no="24" segment_no="1" tag_type="formula">2 γG k x k − x ∗ k</text>
<text top="205" left="356" width="10" height="4" font="font29" id="p43_t26" reading_order_no="25" segment_no="1" tag_type="formula">q</text>
<text top="208" left="366" width="96" height="13" font="font18" id="p43_t27" reading_order_no="26" segment_no="1" tag_type="formula">20( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="219" left="369" width="8" height="9" font="font19" id="p43_t28" reading_order_no="27" segment_no="1" tag_type="formula">√</text>
<text top="228" left="377" width="11" height="9" font="font18" id="p43_t29" reading_order_no="28" segment_no="1" tag_type="formula">7 n</text>
<text top="213" left="463" width="10" height="4" font="font29" id="p43_t30" reading_order_no="29" segment_no="1" tag_type="formula">q</text>
<text top="220" left="472" width="13" height="10" font="font29" id="p43_t31" reading_order_no="30" segment_no="1" tag_type="formula">b b k ,</text>
<text top="243" left="108" width="396" height="11" font="font3" id="p43_t32" reading_order_no="31" segment_no="2" tag_type="text">where in the last inequality we use b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , γ ≤ 1 / 4 L , n k − m ≥ n − 2 b − m ≥</text>
<text top="253" left="111" width="4" height="6" font="font30" id="p43_t33" reading_order_no="32" segment_no="2" tag_type="text">7</text>
<text top="255" left="109" width="138" height="11" font="font17" id="p43_t34" reading_order_no="33" segment_no="2" tag_type="text">20 n . Putting all together we obtain</text>
<text top="274" left="142" width="88" height="12" font="font34" id="p43_t35" reading_order_no="34" segment_no="3" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="275" left="245" width="8" height="9" font="font19" id="p43_t36" reading_order_no="35" segment_no="3" tag_type="formula">≤</text>
<text top="272" left="263" width="205" height="13" font="font19" id="p43_t37" reading_order_no="36" segment_no="3" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) + 2 γ 2 G 2 K 2 − α α</text>
<text top="306" left="273" width="8" height="9" font="font18" id="p43_t38" reading_order_no="37" segment_no="3" tag_type="formula">+</text>
<text top="291" left="282" width="72" height="15" font="font18" id="p43_t39" reading_order_no="38" segment_no="3" tag_type="formula">2 γG k x k − x ∗ k q</text>
<text top="294" left="353" width="50" height="13" font="font18" id="p43_t40" reading_order_no="39" segment_no="3" tag_type="formula">20( C 1 K 4 − α 2 α</text>
<text top="294" left="407" width="42" height="13" font="font18" id="p43_t41" reading_order_no="40" segment_no="3" tag_type="formula">+ C 2 K 2 α )</text>
<text top="305" left="356" width="8" height="9" font="font19" id="p43_t42" reading_order_no="41" segment_no="3" tag_type="formula">√</text>
<text top="314" left="364" width="11" height="9" font="font18" id="p43_t43" reading_order_no="42" segment_no="3" tag_type="formula">7 n</text>
<text top="299" left="450" width="10" height="4" font="font29" id="p43_t44" reading_order_no="43" segment_no="3" tag_type="formula">q</text>
<text top="306" left="459" width="9" height="9" font="font29" id="p43_t45" reading_order_no="44" segment_no="3" tag_type="formula">b b k</text>
<text top="325" left="273" width="127" height="20" font="font18" id="p43_t46" reading_order_no="45" segment_no="3" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="343" left="335" width="11" height="9" font="font18" id="p43_t47" reading_order_no="46" segment_no="3" tag_type="formula">7 n</text>
<text top="336" left="400" width="13" height="9" font="font29" id="p43_t48" reading_order_no="47" segment_no="3" tag_type="formula">b b k .</text>
<text top="357" left="108" width="396" height="9" font="font3" id="p43_t49" reading_order_no="48" segment_no="4" tag_type="text">Taking the full expectation from the both sides of the above inequality and summing up the results</text>
<text top="367" left="108" width="135" height="10" font="font3" id="p43_t50" reading_order_no="49" segment_no="4" tag_type="text">for k = 0 , 1 , . . . , T − 1 we derive</text>
<text top="388" left="112" width="10" height="9" font="font18" id="p43_t51" reading_order_no="50" segment_no="5" tag_type="formula">2 γ</text>
<text top="402" left="114" width="6" height="9" font="font17" id="p43_t52" reading_order_no="51" segment_no="5" tag_type="formula">T</text>
<text top="384" left="126" width="16" height="7" font="font28" id="p43_t53" reading_order_no="52" segment_no="5" tag_type="formula">T − 1</text>
<text top="392" left="126" width="14" height="4" font="font29" id="p43_t54" reading_order_no="53" segment_no="5" tag_type="formula">X</text>
<text top="409" left="126" width="15" height="6" font="font28" id="p43_t55" reading_order_no="54" segment_no="5" tag_type="formula">k =0</text>
<text top="392" left="143" width="73" height="13" font="font34" id="p43_t56" reading_order_no="55" segment_no="5" tag_type="formula">E [ f ( x k ) − f ( x ∗ )]</text>
<text top="394" left="226" width="8" height="9" font="font19" id="p43_t57" reading_order_no="56" segment_no="5" tag_type="formula">≤</text>
<text top="388" left="246" width="5" height="9" font="font18" id="p43_t58" reading_order_no="57" segment_no="5" tag_type="formula">1</text>
<text top="402" left="245" width="6" height="9" font="font17" id="p43_t59" reading_order_no="58" segment_no="5" tag_type="formula">T</text>
<text top="384" left="255" width="16" height="7" font="font28" id="p43_t60" reading_order_no="59" segment_no="5" tag_type="formula">T − 1</text>
<text top="392" left="255" width="14" height="4" font="font29" id="p43_t61" reading_order_no="60" segment_no="5" tag_type="formula">X</text>
<text top="409" left="255" width="15" height="6" font="font28" id="p43_t62" reading_order_no="61" segment_no="5" tag_type="formula">k =0</text>
<text top="392" left="277" width="59" height="13" font="font34" id="p43_t63" reading_order_no="62" segment_no="5" tag_type="formula">E k x k − x ∗ k 2</text>
<text top="392" left="343" width="80" height="13" font="font19" id="p43_t64" reading_order_no="63" segment_no="5" tag_type="formula">− E k x k +1 − x ∗ k 2</text>
<text top="391" left="434" width="62" height="13" font="font18" id="p43_t65" reading_order_no="64" segment_no="5" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α</text>
<text top="434" left="253" width="8" height="9" font="font18" id="p43_t66" reading_order_no="65" segment_no="5" tag_type="formula">+</text>
<text top="425" left="262" width="19" height="9" font="font18" id="p43_t67" reading_order_no="66" segment_no="5" tag_type="formula">4 γG</text>
<text top="419" left="281" width="10" height="4" font="font29" id="p43_t68" reading_order_no="67" segment_no="5" tag_type="formula">q</text>
<text top="422" left="291" width="90" height="13" font="font18" id="p43_t69" reading_order_no="68" segment_no="5" tag_type="formula">5( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="433" left="311" width="8" height="9" font="font19" id="p43_t70" reading_order_no="69" segment_no="5" tag_type="formula">√</text>
<text top="441" left="319" width="12" height="9" font="font17" id="p43_t71" reading_order_no="70" segment_no="5" tag_type="formula">nT</text>
<text top="423" left="384" width="16" height="7" font="font28" id="p43_t72" reading_order_no="71" segment_no="5" tag_type="formula">T − 1</text>
<text top="431" left="385" width="14" height="4" font="font29" id="p43_t73" reading_order_no="72" segment_no="5" tag_type="formula">X</text>
<text top="448" left="385" width="14" height="6" font="font28" id="p43_t74" reading_order_no="73" segment_no="5" tag_type="formula">k =0</text>
<text top="432" left="401" width="57" height="12" font="font34" id="p43_t75" reading_order_no="74" segment_no="5" tag_type="formula">E k x k − x ∗ k</text>
<text top="427" left="458" width="10" height="4" font="font29" id="p43_t76" reading_order_no="75" segment_no="5" tag_type="formula">q</text>
<text top="434" left="467" width="9" height="10" font="font29" id="p43_t77" reading_order_no="76" segment_no="5" tag_type="formula">b b k</text>
<text top="459" left="253" width="127" height="19" font="font18" id="p43_t78" reading_order_no="77" segment_no="5" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="476" left="312" width="17" height="9" font="font18" id="p43_t79" reading_order_no="78" segment_no="5" tag_type="formula">7 nT</text>
<text top="458" left="383" width="16" height="7" font="font28" id="p43_t80" reading_order_no="79" segment_no="5" tag_type="formula">T − 1</text>
<text top="466" left="384" width="14" height="4" font="font29" id="p43_t81" reading_order_no="80" segment_no="5" tag_type="formula">X</text>
<text top="483" left="383" width="15" height="6" font="font28" id="p43_t82" reading_order_no="81" segment_no="5" tag_type="formula">k =0</text>
<text top="469" left="400" width="22" height="10" font="font34" id="p43_t83" reading_order_no="82" segment_no="5" tag_type="formula">E [ b b k ]</text>
<text top="501" left="226" width="8" height="9" font="font19" id="p43_t84" reading_order_no="83" segment_no="5" tag_type="formula">≤</text>
<text top="493" left="245" width="122" height="12" font="font19" id="p43_t85" reading_order_no="84" segment_no="5" tag_type="formula">k x 0 − x ∗ k 2 − E [ k x K − x ∗ k 2 ]</text>
<text top="508" left="301" width="8" height="9" font="font17" id="p43_t86" reading_order_no="85" segment_no="5" tag_type="formula">K<a href="deeplearning_paper1.html#40">(</a></text>
<text top="497" left="370" width="61" height="13" font="font18" id="p43_t87" reading_order_no="86" segment_no="5" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α<a href="deeplearning_paper1.html#40">45</a></text>
<text top="534" left="253" width="8" height="9" font="font18" id="p43_t88" reading_order_no="87" segment_no="5" tag_type="formula">+<a href="deeplearning_paper1.html#40">)</a></text>
<text top="526" left="262" width="19" height="9" font="font18" id="p43_t89" reading_order_no="88" segment_no="5" tag_type="formula">4 γG</text>
<text top="519" left="281" width="10" height="4" font="font29" id="p43_t90" reading_order_no="89" segment_no="5" tag_type="formula">q</text>
<text top="522" left="291" width="90" height="13" font="font18" id="p43_t91" reading_order_no="90" segment_no="5" tag_type="formula">5( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="533" left="311" width="8" height="9" font="font19" id="p43_t92" reading_order_no="91" segment_no="5" tag_type="formula">√</text>
<text top="541" left="319" width="12" height="9" font="font17" id="p43_t93" reading_order_no="92" segment_no="5" tag_type="formula">nT</text>
<text top="524" left="384" width="16" height="7" font="font28" id="p43_t94" reading_order_no="93" segment_no="5" tag_type="formula">T − 1</text>
<text top="531" left="385" width="14" height="4" font="font29" id="p43_t95" reading_order_no="94" segment_no="5" tag_type="formula">X</text>
<text top="548" left="385" width="14" height="6" font="font28" id="p43_t96" reading_order_no="95" segment_no="5" tag_type="formula">k =0</text>
<text top="526" left="401" width="10" height="4" font="font29" id="p43_t97" reading_order_no="96" segment_no="5" tag_type="formula">r</text>
<text top="533" left="411" width="70" height="12" font="font34" id="p43_t98" reading_order_no="97" segment_no="5" tag_type="formula">E [ k x k − x ∗ k 2 ] E</text>
<text top="530" left="483" width="5" height="4" font="font29" id="p43_t99" reading_order_no="98" segment_no="5" tag_type="formula">h</text>
<text top="534" left="487" width="9" height="10" font="font29" id="p43_t100" reading_order_no="99" segment_no="5" tag_type="formula">b b k</text>
<text top="530" left="497" width="5" height="4" font="font29" id="p43_t101" reading_order_no="100" segment_no="5" tag_type="formula">i</text>
<text top="559" left="253" width="127" height="19" font="font18" id="p43_t102" reading_order_no="101" segment_no="5" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="576" left="312" width="17" height="9" font="font18" id="p43_t103" reading_order_no="102" segment_no="5" tag_type="formula">7 nT</text>
<text top="559" left="383" width="16" height="7" font="font28" id="p43_t104" reading_order_no="103" segment_no="5" tag_type="formula">T − 1</text>
<text top="567" left="384" width="14" height="4" font="font29" id="p43_t105" reading_order_no="104" segment_no="5" tag_type="formula">X</text>
<text top="584" left="383" width="15" height="6" font="font28" id="p43_t106" reading_order_no="105" segment_no="5" tag_type="formula">k =0</text>
<text top="569" left="400" width="25" height="11" font="font34" id="p43_t107" reading_order_no="106" segment_no="5" tag_type="formula">E [ b b k ] .</text>
<text top="598" left="108" width="185" height="11" font="font3" id="p43_t108" reading_order_no="107" segment_no="6" tag_type="text">From Jensen’s inequality we have f ( x T ) ≤ 1</text>
<text top="605" left="288" width="5" height="6" font="font28" id="p43_t109" reading_order_no="108" segment_no="6" tag_type="text">T</text>
<text top="596" left="297" width="26" height="7" font="font29" id="p43_t110" reading_order_no="109" segment_no="6" tag_type="text">P T − 1</text>
<text top="598" left="307" width="107" height="12" font="font17" id="p43_t111" reading_order_no="110" segment_no="6" tag_type="text">k =0 f ( x k ) , where x T = 1</text>
<text top="605" left="409" width="5" height="6" font="font28" id="p43_t112" reading_order_no="111" segment_no="6" tag_type="text">T</text>
<text top="596" left="417" width="27" height="7" font="font29" id="p43_t113" reading_order_no="112" segment_no="6" tag_type="text">P T − 1</text>
<text top="598" left="428" width="76" height="12" font="font17" id="p43_t114" reading_order_no="113" segment_no="6" tag_type="text">k =0 x k . Using this</text>
<text top="610" left="108" width="270" height="12" font="font3" id="p43_t115" reading_order_no="114" segment_no="6" tag_type="text">and new notation R k = k x k − x ∗ k , k &gt; 0 , R 0 ≥ k x 0 − x ∗ k we get</text>
<text top="634" left="127" width="103" height="13" font="font18" id="p43_t116" reading_order_no="115" segment_no="7" tag_type="formula">0 ≤ 2 γ E f ( x T ) − f ( x ∗ )</text>
<text top="636" left="244" width="8" height="9" font="font19" id="p43_t117" reading_order_no="116" segment_no="7" tag_type="formula">≤</text>
<text top="629" left="263" width="51" height="12" font="font17" id="p43_t118" reading_order_no="117" segment_no="7" tag_type="formula">R 2 0 − E [ R 2 T ]</text>
<text top="644" left="285" width="6" height="9" font="font17" id="p43_t119" reading_order_no="118" segment_no="7" tag_type="formula">T</text>
<text top="633" left="317" width="62" height="13" font="font18" id="p43_t120" reading_order_no="119" segment_no="7" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α</text>
<text top="670" left="272" width="8" height="9" font="font18" id="p43_t121" reading_order_no="120" segment_no="7" tag_type="formula">+</text>
<text top="661" left="281" width="19" height="9" font="font18" id="p43_t122" reading_order_no="121" segment_no="7" tag_type="formula">4 γG</text>
<text top="655" left="300" width="10" height="4" font="font29" id="p43_t123" reading_order_no="122" segment_no="7" tag_type="formula">q</text>
<text top="658" left="310" width="44" height="13" font="font18" id="p43_t124" reading_order_no="123" segment_no="7" tag_type="formula">5( C 1 K 4 − α 2 α</text>
<text top="659" left="358" width="42" height="12" font="font18" id="p43_t125" reading_order_no="124" segment_no="7" tag_type="formula">+ C 2 K 2 α )</text>
<text top="669" left="330" width="8" height="9" font="font19" id="p43_t126" reading_order_no="125" segment_no="7" tag_type="formula">√</text>
<text top="677" left="338" width="12" height="9" font="font17" id="p43_t127" reading_order_no="126" segment_no="7" tag_type="formula">nT</text>
<text top="659" left="402" width="16" height="7" font="font28" id="p43_t128" reading_order_no="127" segment_no="7" tag_type="formula">T − 1</text>
<text top="667" left="403" width="14" height="4" font="font29" id="p43_t129" reading_order_no="128" segment_no="7" tag_type="formula">X</text>
<text top="684" left="403" width="15" height="6" font="font28" id="p43_t130" reading_order_no="129" segment_no="7" tag_type="formula">k =0</text>
<text top="661" left="420" width="10" height="4" font="font29" id="p43_t131" reading_order_no="130" segment_no="7" tag_type="formula">r</text>
<text top="669" left="430" width="35" height="12" font="font34" id="p43_t132" reading_order_no="131" segment_no="7" tag_type="formula">E [ R 2 k ] E</text>
<text top="665" left="466" width="5" height="4" font="font29" id="p43_t133" reading_order_no="132" segment_no="7" tag_type="formula">h</text>
<text top="670" left="470" width="9" height="9" font="font29" id="p43_t134" reading_order_no="133" segment_no="7" tag_type="formula">b b k</text>
<text top="665" left="480" width="5" height="4" font="font29" id="p43_t135" reading_order_no="134" segment_no="7" tag_type="formula">i</text>
<text top="695" left="272" width="81" height="19" font="font18" id="p43_t136" reading_order_no="135" segment_no="7" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α</text>
<text top="696" left="357" width="42" height="12" font="font18" id="p43_t137" reading_order_no="136" segment_no="7" tag_type="formula">+ C 2 K 2 α )</text>
<text top="712" left="331" width="17" height="9" font="font18" id="p43_t138" reading_order_no="137" segment_no="7" tag_type="formula">7 nT</text>
<text top="694" left="401" width="16" height="7" font="font28" id="p43_t139" reading_order_no="138" segment_no="7" tag_type="formula">T − 1</text>
<text top="702" left="402" width="14" height="4" font="font29" id="p43_t140" reading_order_no="139" segment_no="7" tag_type="formula">X</text>
<text top="719" left="402" width="15" height="6" font="font28" id="p43_t141" reading_order_no="140" segment_no="7" tag_type="formula">k =0</text>
<text top="705" left="419" width="22" height="10" font="font34" id="p43_t142" reading_order_no="141" segment_no="7" tag_type="formula">E [ b b k ]</text>
<text top="705" left="487" width="17" height="9" font="font3" id="p43_t143" reading_order_no="142" segment_no="7" tag_type="text">(52)</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p43_t144" reading_order_no="143" segment_no="8" tag_type="text">43</text>
</page>
<page number="44" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="165" height="9" font="font3" id="p44_t1" reading_order_no="0" segment_no="0" tag_type="text">implying (after changing the indices) that</text>
<text top="106" left="132" width="25" height="12" font="font34" id="p44_t2" reading_order_no="1" segment_no="1" tag_type="formula">E [ R 2 k ]</text>
<text top="107" left="166" width="8" height="9" font="font19" id="p44_t3" reading_order_no="2" segment_no="1" tag_type="formula">≤</text>
<text top="104" left="184" width="81" height="14" font="font17" id="p44_t4" reading_order_no="3" segment_no="1" tag_type="formula">R 2 0 + 2 γ 2 G 2 kK 2 − α α</text>
<text top="108" left="269" width="8" height="9" font="font18" id="p44_t5" reading_order_no="4" segment_no="1" tag_type="formula">+</text>
<text top="99" left="280" width="19" height="9" font="font18" id="p44_t6" reading_order_no="5" segment_no="1" tag_type="formula">4 γG</text>
<text top="93" left="299" width="10" height="4" font="font29" id="p44_t7" reading_order_no="6" segment_no="1" tag_type="formula">q</text>
<text top="96" left="308" width="45" height="13" font="font18" id="p44_t8" reading_order_no="7" segment_no="1" tag_type="formula">5( C 1 K 4 − α 2 α</text>
<text top="96" left="357" width="42" height="13" font="font18" id="p44_t9" reading_order_no="8" segment_no="1" tag_type="formula">+ C 2 K 2 α )</text>
<text top="107" left="332" width="8" height="9" font="font19" id="p44_t10" reading_order_no="9" segment_no="1" tag_type="formula">√</text>
<text top="115" left="340" width="6" height="9" font="font17" id="p44_t11" reading_order_no="10" segment_no="1" tag_type="formula">n</text>
<text top="97" left="401" width="15" height="7" font="font28" id="p44_t12" reading_order_no="11" segment_no="1" tag_type="formula">k − 1</text>
<text top="105" left="402" width="14" height="4" font="font29" id="p44_t13" reading_order_no="12" segment_no="1" tag_type="formula">X</text>
<text top="122" left="402" width="13" height="6" font="font28" id="p44_t14" reading_order_no="13" segment_no="1" tag_type="formula">l =0</text>
<text top="99" left="418" width="10" height="4" font="font29" id="p44_t15" reading_order_no="14" segment_no="1" tag_type="formula">r</text>
<text top="106" left="428" width="22" height="12" font="font34" id="p44_t16" reading_order_no="15" segment_no="1" tag_type="formula">E [ R 2</text>
<text top="108" left="446" width="16" height="11" font="font18" id="p44_t17" reading_order_no="16" segment_no="1" tag_type="formula">l ] E</text>
<text top="103" left="464" width="5" height="4" font="font29" id="p44_t18" reading_order_no="17" segment_no="1" tag_type="formula">h</text>
<text top="108" left="468" width="8" height="9" font="font29" id="p44_t19" reading_order_no="18" segment_no="1" tag_type="formula">b b l</text>
<text top="103" left="476" width="5" height="4" font="font29" id="p44_t20" reading_order_no="19" segment_no="1" tag_type="formula">i</text>
<text top="133" left="194" width="127" height="19" font="font18" id="p44_t21" reading_order_no="20" segment_no="1" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="150" left="256" width="11" height="9" font="font18" id="p44_t22" reading_order_no="21" segment_no="1" tag_type="formula">7 n</text>
<text top="132" left="323" width="15" height="7" font="font28" id="p44_t23" reading_order_no="22" segment_no="1" tag_type="formula">k − 1</text>
<text top="140" left="323" width="14" height="4" font="font29" id="p44_t24" reading_order_no="23" segment_no="1" tag_type="formula">X</text>
<text top="157" left="324" width="13" height="6" font="font28" id="p44_t25" reading_order_no="24" segment_no="1" tag_type="formula">l =0</text>
<text top="143" left="340" width="19" height="10" font="font34" id="p44_t26" reading_order_no="25" segment_no="1" tag_type="formula">E [ b b l ]</text>
<text top="143" left="487" width="17" height="9" font="font3" id="p44_t27" reading_order_no="26" segment_no="1" tag_type="text">(53)</text>
<text top="171" left="108" width="324" height="9" font="font3" id="p44_t28" reading_order_no="27" segment_no="2" tag_type="text">holds for all k ≥ 0 . In the remaining part of the proof we derive by induction that</text>
<text top="202" left="135" width="12" height="11" font="font17" id="p44_t29" reading_order_no="28" segment_no="3" tag_type="formula">R 2</text>
<text top="200" left="143" width="74" height="15" font="font18" id="p44_t30" reading_order_no="29" segment_no="3" tag_type="formula">0 + 2 γ 2 G 2 kK 2 − α α</text>
<text top="204" left="220" width="8" height="9" font="font18" id="p44_t31" reading_order_no="30" segment_no="3" tag_type="formula">+</text>
<text top="195" left="231" width="19" height="9" font="font18" id="p44_t32" reading_order_no="31" segment_no="3" tag_type="formula">4 γG</text>
<text top="189" left="250" width="10" height="4" font="font29" id="p44_t33" reading_order_no="32" segment_no="3" tag_type="formula">q</text>
<text top="192" left="260" width="90" height="13" font="font18" id="p44_t34" reading_order_no="33" segment_no="3" tag_type="formula">5( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="203" left="284" width="8" height="9" font="font19" id="p44_t35" reading_order_no="34" segment_no="3" tag_type="formula">√</text>
<text top="211" left="292" width="6" height="9" font="font17" id="p44_t36" reading_order_no="35" segment_no="3" tag_type="formula">n</text>
<text top="193" left="353" width="15" height="7" font="font28" id="p44_t37" reading_order_no="36" segment_no="3" tag_type="formula">k − 1</text>
<text top="201" left="353" width="14" height="4" font="font29" id="p44_t38" reading_order_no="37" segment_no="3" tag_type="formula">X</text>
<text top="218" left="354" width="12" height="6" font="font28" id="p44_t39" reading_order_no="38" segment_no="3" tag_type="formula">l =0</text>
<text top="196" left="369" width="10" height="4" font="font29" id="p44_t40" reading_order_no="39" segment_no="3" tag_type="formula">r</text>
<text top="200" left="379" width="41" height="15" font="font34" id="p44_t41" reading_order_no="40" segment_no="3" tag_type="formula">E [ R 2 l ] E h</text>
<text top="204" left="419" width="8" height="10" font="font29" id="p44_t42" reading_order_no="41" segment_no="3" tag_type="formula">b b l</text>
<text top="200" left="427" width="5" height="4" font="font29" id="p44_t43" reading_order_no="42" segment_no="3" tag_type="formula">i</text>
<text top="229" left="267" width="126" height="19" font="font18" id="p44_t44" reading_order_no="43" segment_no="3" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="246" left="329" width="11" height="9" font="font18" id="p44_t45" reading_order_no="44" segment_no="3" tag_type="formula">7 n</text>
<text top="229" left="396" width="15" height="7" font="font28" id="p44_t46" reading_order_no="45" segment_no="3" tag_type="formula">k − 1</text>
<text top="236" left="396" width="14" height="4" font="font29" id="p44_t47" reading_order_no="46" segment_no="3" tag_type="formula">X</text>
<text top="253" left="397" width="13" height="6" font="font28" id="p44_t48" reading_order_no="47" segment_no="3" tag_type="formula">l =0</text>
<text top="239" left="412" width="20" height="11" font="font34" id="p44_t49" reading_order_no="48" segment_no="3" tag_type="formula">E [ b b l ]</text>
<text top="239" left="442" width="8" height="9" font="font19" id="p44_t50" reading_order_no="49" segment_no="3" tag_type="formula">≤</text>
<text top="237" left="459" width="17" height="11" font="font18" id="p44_t51" reading_order_no="50" segment_no="3" tag_type="formula">2 R 2</text>
<text top="244" left="472" width="4" height="6" font="font30" id="p44_t52" reading_order_no="51" segment_no="3" tag_type="formula">0</text>
<text top="239" left="487" width="17" height="9" font="font3" id="p44_t53" reading_order_no="52" segment_no="3" tag_type="text">(54)</text>
<text top="268" left="108" width="396" height="9" font="font3" id="p44_t54" reading_order_no="53" segment_no="4" tag_type="text">for all k = 0 , . . . , K . For k = 0 this inequality trivially holds. Next, assume that it holds for all</text>
<text top="278" left="108" width="396" height="10" font="font17" id="p44_t55" reading_order_no="54" segment_no="4" tag_type="text">k = 0 , 1 , . . . , T − 1 , T ≤ K − 1 . Let us show that it holds for k = T as well. From ( 28 ) and ( 29 )</text>
<text top="288" left="108" width="263" height="12" font="font3" id="p44_t56" reading_order_no="55" segment_no="4" tag_type="text">we have that E [ R 2 k ] ≤ 2 R 2 0 for all k = 0 , 1 , . . . , T − 1 . Therefore,</text>
<text top="321" left="129" width="27" height="12" font="font34" id="p44_t57" reading_order_no="56" segment_no="5" tag_type="formula">E [ R 2 T ]</text>
<text top="322" left="165" width="8" height="9" font="font19" id="p44_t58" reading_order_no="57" segment_no="5" tag_type="formula">≤</text>
<text top="319" left="183" width="83" height="14" font="font17" id="p44_t59" reading_order_no="58" segment_no="5" tag_type="formula">R 2 0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="323" left="270" width="8" height="9" font="font18" id="p44_t60" reading_order_no="59" segment_no="5" tag_type="formula">+</text>
<text top="314" left="281" width="19" height="9" font="font18" id="p44_t61" reading_order_no="60" segment_no="5" tag_type="formula">4 γG</text>
<text top="308" left="299" width="10" height="4" font="font29" id="p44_t62" reading_order_no="61" segment_no="5" tag_type="formula">q</text>
<text top="311" left="309" width="91" height="13" font="font18" id="p44_t63" reading_order_no="62" segment_no="5" tag_type="formula">5( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="322" left="333" width="8" height="9" font="font19" id="p44_t64" reading_order_no="63" segment_no="5" tag_type="formula">√</text>
<text top="330" left="341" width="6" height="9" font="font17" id="p44_t65" reading_order_no="64" segment_no="5" tag_type="formula">n</text>
<text top="312" left="402" width="16" height="7" font="font28" id="p44_t66" reading_order_no="65" segment_no="5" tag_type="formula">T − 1</text>
<text top="320" left="403" width="14" height="4" font="font29" id="p44_t67" reading_order_no="66" segment_no="5" tag_type="formula">X</text>
<text top="337" left="404" width="13" height="6" font="font28" id="p44_t68" reading_order_no="67" segment_no="5" tag_type="formula">l =0</text>
<text top="314" left="420" width="10" height="4" font="font29" id="p44_t69" reading_order_no="68" segment_no="5" tag_type="formula">r</text>
<text top="321" left="430" width="23" height="12" font="font34" id="p44_t70" reading_order_no="69" segment_no="5" tag_type="formula">E [ R 2</text>
<text top="323" left="449" width="16" height="11" font="font18" id="p44_t71" reading_order_no="70" segment_no="5" tag_type="formula">l ] E</text>
<text top="318" left="466" width="5" height="4" font="font29" id="p44_t72" reading_order_no="71" segment_no="5" tag_type="formula">h</text>
<text top="323" left="470" width="8" height="9" font="font29" id="p44_t73" reading_order_no="72" segment_no="5" tag_type="formula">b b l</text>
<text top="318" left="478" width="5" height="4" font="font29" id="p44_t74" reading_order_no="73" segment_no="5" tag_type="formula">i</text>
<text top="348" left="193" width="81" height="19" font="font18" id="p44_t75" reading_order_no="74" segment_no="5" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α</text>
<text top="348" left="278" width="42" height="13" font="font18" id="p44_t76" reading_order_no="75" segment_no="5" tag_type="formula">+ C 2 K 2 α )</text>
<text top="365" left="255" width="11" height="9" font="font18" id="p44_t77" reading_order_no="76" segment_no="5" tag_type="formula">7 n</text>
<text top="347" left="322" width="16" height="7" font="font28" id="p44_t78" reading_order_no="77" segment_no="5" tag_type="formula">T − 1</text>
<text top="355" left="323" width="14" height="4" font="font29" id="p44_t79" reading_order_no="78" segment_no="5" tag_type="formula">X</text>
<text top="372" left="324" width="13" height="6" font="font28" id="p44_t80" reading_order_no="79" segment_no="5" tag_type="formula">l =0</text>
<text top="358" left="340" width="20" height="10" font="font34" id="p44_t81" reading_order_no="80" segment_no="5" tag_type="formula">E [ b b l ]</text>
<text top="397" left="165" width="8" height="9" font="font19" id="p44_t82" reading_order_no="81" segment_no="5" tag_type="formula">≤</text>
<text top="395" left="183" width="12" height="11" font="font17" id="p44_t83" reading_order_no="82" segment_no="5" tag_type="formula">R 2</text>
<text top="393" left="191" width="75" height="15" font="font18" id="p44_t84" reading_order_no="83" segment_no="5" tag_type="formula">0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="397" left="270" width="8" height="9" font="font18" id="p44_t85" reading_order_no="84" segment_no="5" tag_type="formula">+</text>
<text top="388" left="281" width="30" height="10" font="font18" id="p44_t86" reading_order_no="85" segment_no="5" tag_type="formula">4 γGR 0</text>
<text top="382" left="311" width="10" height="4" font="font29" id="p44_t87" reading_order_no="86" segment_no="5" tag_type="formula">q</text>
<text top="385" left="321" width="96" height="13" font="font18" id="p44_t88" reading_order_no="87" segment_no="5" tag_type="formula">10( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="396" left="342" width="8" height="9" font="font19" id="p44_t89" reading_order_no="88" segment_no="5" tag_type="formula">√</text>
<text top="404" left="350" width="6" height="9" font="font17" id="p44_t90" reading_order_no="89" segment_no="5" tag_type="formula">n</text>
<text top="386" left="419" width="16" height="7" font="font28" id="p44_t91" reading_order_no="90" segment_no="5" tag_type="formula">T − 1</text>
<text top="394" left="420" width="14" height="4" font="font29" id="p44_t92" reading_order_no="91" segment_no="5" tag_type="formula">X</text>
<text top="411" left="421" width="13" height="6" font="font28" id="p44_t93" reading_order_no="92" segment_no="5" tag_type="formula">l =0</text>
<text top="389" left="437" width="10" height="4" font="font29" id="p44_t94" reading_order_no="93" segment_no="5" tag_type="formula">r</text>
<text top="393" left="447" width="13" height="14" font="font34" id="p44_t95" reading_order_no="94" segment_no="5" tag_type="formula">E h</text>
<text top="397" left="459" width="8" height="10" font="font29" id="p44_t96" reading_order_no="95" segment_no="5" tag_type="formula">b b l</text>
<text top="393" left="467" width="5" height="4" font="font29" id="p44_t97" reading_order_no="96" segment_no="5" tag_type="formula">i</text>
<text top="422" left="193" width="81" height="19" font="font18" id="p44_t98" reading_order_no="97" segment_no="5" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α</text>
<text top="423" left="278" width="42" height="12" font="font18" id="p44_t99" reading_order_no="98" segment_no="5" tag_type="formula">+ C 2 K 2 α )</text>
<text top="439" left="255" width="11" height="9" font="font18" id="p44_t100" reading_order_no="99" segment_no="5" tag_type="formula">7 n</text>
<text top="422" left="322" width="16" height="7" font="font28" id="p44_t101" reading_order_no="100" segment_no="5" tag_type="formula">T − 1</text>
<text top="429" left="323" width="14" height="4" font="font29" id="p44_t102" reading_order_no="101" segment_no="5" tag_type="formula">X</text>
<text top="446" left="324" width="13" height="6" font="font28" id="p44_t103" reading_order_no="102" segment_no="5" tag_type="formula">l =0</text>
<text top="432" left="340" width="20" height="11" font="font34" id="p44_t104" reading_order_no="103" segment_no="5" tag_type="formula">E [ b b l ]</text>
<text top="461" left="108" width="396" height="9" font="font3" id="p44_t105" reading_order_no="104" segment_no="6" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="472" left="108" width="273" height="9" font="font17" id="p44_t106" reading_order_no="105" segment_no="6" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="489" left="224" width="57" height="17" font="font17" id="p44_t107" reading_order_no="106" segment_no="7" tag_type="formula">p k ≥ m · |G k |</text>
<text top="503" left="267" width="10" height="10" font="font17" id="p44_t108" reading_order_no="107" segment_no="7" tag_type="formula">n k</text>
<text top="490" left="284" width="14" height="15" font="font19" id="p44_t109" reading_order_no="108" segment_no="7" tag_type="formula">· 1</text>
<text top="503" left="290" width="10" height="10" font="font17" id="p44_t110" reading_order_no="109" segment_no="7" tag_type="formula">n k</text>
<text top="489" left="305" width="55" height="16" font="font18" id="p44_t111" reading_order_no="110" segment_no="7" tag_type="formula">= m (1 − δ k )</text>
<text top="503" left="333" width="10" height="10" font="font17" id="p44_t112" reading_order_no="111" segment_no="7" tag_type="formula">n k</text>
<text top="490" left="364" width="20" height="15" font="font19" id="p44_t113" reading_order_no="112" segment_no="7" tag_type="formula">≥ m</text>
<text top="496" left="377" width="11" height="16" font="font17" id="p44_t114" reading_order_no="113" segment_no="7" tag_type="formula">n .</text>
<text top="520" left="108" width="396" height="10" font="font3" id="p44_t115" reading_order_no="114" segment_no="8" tag_type="text">Therefore, each individual Byzantine worker can violate the protocol no more than 1 / p times on</text>
<text top="531" left="108" width="87" height="9" font="font3" id="p44_t116" reading_order_no="115" segment_no="8" tag_type="text">average implying that</text>
<text top="562" left="151" width="21" height="12" font="font34" id="p44_t117" reading_order_no="116" segment_no="9" tag_type="formula">E [ R 2</text>
<text top="564" left="168" width="9" height="11" font="font18" id="p44_t118" reading_order_no="117" segment_no="9" tag_type="formula">T ]</text>
<text top="564" left="193" width="8" height="9" font="font19" id="p44_t119" reading_order_no="118" segment_no="9" tag_type="formula">≤</text>
<text top="562" left="216" width="12" height="11" font="font17" id="p44_t120" reading_order_no="119" segment_no="9" tag_type="formula">R 2</text>
<text top="560" left="224" width="75" height="15" font="font18" id="p44_t121" reading_order_no="120" segment_no="9" tag_type="formula">0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="564" left="303" width="8" height="9" font="font18" id="p44_t122" reading_order_no="121" segment_no="9" tag_type="formula">+</text>
<text top="555" left="314" width="36" height="10" font="font18" id="p44_t123" reading_order_no="122" segment_no="9" tag_type="formula">4 γGR 0 n</text>
<text top="549" left="350" width="10" height="4" font="font29" id="p44_t124" reading_order_no="123" segment_no="9" tag_type="formula">q</text>
<text top="552" left="360" width="99" height="13" font="font18" id="p44_t125" reading_order_no="124" segment_no="9" tag_type="formula">10( C 1 K 4 − α 2 α + C 2 K 2 α ) b</text>
<text top="571" left="375" width="9" height="9" font="font17" id="p44_t126" reading_order_no="125" segment_no="9" tag_type="formula">m</text>
<text top="563" left="384" width="8" height="9" font="font19" id="p44_t127" reading_order_no="126" segment_no="9" tag_type="formula">√</text>
<text top="571" left="392" width="6" height="9" font="font17" id="p44_t128" reading_order_no="127" segment_no="9" tag_type="formula">n</text>
<text top="584" left="226" width="81" height="19" font="font18" id="p44_t129" reading_order_no="128" segment_no="9" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α</text>
<text top="585" left="311" width="52" height="12" font="font18" id="p44_t130" reading_order_no="129" segment_no="9" tag_type="formula">+ C 2 K 2 α ) nb</text>
<text top="601" left="289" width="20" height="9" font="font18" id="p44_t131" reading_order_no="130" segment_no="9" tag_type="formula">7 nm</text>
<text top="620" left="187" width="19" height="7" font="font28" id="p44_t132" reading_order_no="131" segment_no="9" tag_type="formula">T ≤ K</text>
<text top="627" left="193" width="8" height="9" font="font19" id="p44_t133" reading_order_no="132" segment_no="9" tag_type="formula">≤</text>
<text top="625" left="216" width="12" height="11" font="font17" id="p44_t134" reading_order_no="133" segment_no="9" tag_type="formula">R 2</text>
<text top="624" left="224" width="71" height="14" font="font18" id="p44_t135" reading_order_no="134" segment_no="9" tag_type="formula">0 + 2 γ 2 G 2 K 2 α +</text>
<text top="618" left="298" width="36" height="10" font="font18" id="p44_t136" reading_order_no="135" segment_no="9" tag_type="formula">4 γGR 0 n</text>
<text top="612" left="334" width="10" height="4" font="font29" id="p44_t137" reading_order_no="136" segment_no="9" tag_type="formula">q</text>
<text top="615" left="344" width="99" height="13" font="font18" id="p44_t138" reading_order_no="137" segment_no="9" tag_type="formula">10( C 1 K 4 − α 2 α + C 2 K 2 α ) δ</text>
<text top="634" left="367" width="9" height="9" font="font17" id="p44_t139" reading_order_no="138" segment_no="9" tag_type="formula">m</text>
<text top="644" left="226" width="81" height="20" font="font18" id="p44_t140" reading_order_no="139" segment_no="9" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α</text>
<text top="645" left="311" width="52" height="13" font="font18" id="p44_t141" reading_order_no="140" segment_no="9" tag_type="formula">+ C 2 K 2 α ) nδ</text>
<text top="662" left="292" width="14" height="9" font="font18" id="p44_t142" reading_order_no="141" segment_no="9" tag_type="formula">7 m</text>
<text top="655" left="365" width="3" height="9" font="font17" id="p44_t143" reading_order_no="142" segment_no="9" tag_type="formula">.</text>
<text top="677" left="108" width="27" height="9" font="font3" id="p44_t144" reading_order_no="143" segment_no="10" tag_type="text">Taking</text>
<text top="701" left="188" width="36" height="9" font="font17" id="p44_t145" reading_order_no="144" segment_no="11" tag_type="formula">γ = min</text>
<text top="687" left="225" width="9" height="4" font="font29" id="p44_t146" reading_order_no="145" segment_no="11" tag_type="formula"></text>
<text top="696" left="225" width="9" height="4" font="font29" id="p44_t147" reading_order_no="146" segment_no="11" tag_type="formula"></text>
<text top="714" left="225" width="9" height="4" font="font29" id="p44_t148" reading_order_no="147" segment_no="11" tag_type="formula"></text>
<text top="694" left="248" width="12" height="10" font="font17" id="p44_t149" reading_order_no="148" segment_no="11" tag_type="formula">R 0</text>
<text top="700" left="236" width="8" height="9" font="font19" id="p44_t150" reading_order_no="149" segment_no="11" tag_type="formula">√</text>
<text top="706" left="244" width="28" height="12" font="font18" id="p44_t151" reading_order_no="150" segment_no="11" tag_type="formula">6 GK 1 α</text>
<text top="701" left="274" width="3" height="9" font="font17" id="p44_t152" reading_order_no="151" segment_no="11" tag_type="formula">,</text>
<text top="694" left="337" width="20" height="10" font="font17" id="p44_t153" reading_order_no="152" segment_no="11" tag_type="formula">mR 0</text>
<text top="713" left="280" width="24" height="9" font="font18" id="p44_t154" reading_order_no="153" segment_no="11" tag_type="formula">12 Gn</text>
<text top="707" left="304" width="10" height="4" font="font29" id="p44_t155" reading_order_no="154" segment_no="11" tag_type="formula">q</text>
<text top="710" left="314" width="100" height="13" font="font18" id="p44_t156" reading_order_no="155" segment_no="11" tag_type="formula">10 δ ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="687" left="415" width="9" height="4" font="font29" id="p44_t157" reading_order_no="156" segment_no="11" tag_type="formula"></text>
<text top="696" left="415" width="9" height="4" font="font29" id="p44_t158" reading_order_no="157" segment_no="11" tag_type="formula"></text>
<text top="714" left="415" width="9" height="4" font="font29" id="p44_t159" reading_order_no="158" segment_no="11" tag_type="formula"></text>
<text top="743" left="301" width="10" height="9" font="font3" id="p44_t160" reading_order_no="159" segment_no="12" tag_type="text">44</text>
</page>
<page number="45" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="58" height="9" font="font3" id="p45_t1" reading_order_no="0" segment_no="0" tag_type="text">we ensure that</text>
<text top="102" left="143" width="54" height="12" font="font18" id="p45_t2" reading_order_no="1" segment_no="1" tag_type="formula">2 γ 2 G 2 K 2 α +</text>
<text top="97" left="200" width="37" height="9" font="font18" id="p45_t3" reading_order_no="2" segment_no="1" tag_type="formula">4 γGR 0 n</text>
<text top="90" left="237" width="10" height="4" font="font29" id="p45_t4" reading_order_no="3" segment_no="1" tag_type="formula">q</text>
<text top="93" left="247" width="99" height="13" font="font18" id="p45_t5" reading_order_no="4" segment_no="1" tag_type="formula">10( C 1 K 4 − α 2 α + C 2 K 2 α ) δ</text>
<text top="112" left="269" width="9" height="9" font="font17" id="p45_t6" reading_order_no="5" segment_no="1" tag_type="formula">m</text>
<text top="123" left="210" width="136" height="19" font="font18" id="p45_t7" reading_order_no="6" segment_no="1" tag_type="formula">+ 40 γ 2 G 2 ( C 1 K 4 − α 2 α + C 2 K 2 α ) nδ</text>
<text top="140" left="276" width="14" height="9" font="font18" id="p45_t8" reading_order_no="7" segment_no="1" tag_type="formula">7 m</text>
<text top="132" left="358" width="8" height="9" font="font19" id="p45_t9" reading_order_no="8" segment_no="1" tag_type="formula">≤</text>
<text top="125" left="377" width="12" height="12" font="font17" id="p45_t10" reading_order_no="9" segment_no="1" tag_type="formula">R 2 0</text>
<text top="125" left="380" width="35" height="24" font="font18" id="p45_t11" reading_order_no="10" segment_no="1" tag_type="formula">3 + R 2 0</text>
<text top="125" left="407" width="35" height="24" font="font18" id="p45_t12" reading_order_no="11" segment_no="1" tag_type="formula">3 + R 2 0</text>
<text top="131" left="434" width="35" height="18" font="font18" id="p45_t13" reading_order_no="12" segment_no="1" tag_type="formula">3 = R 2 0</text>
<text top="154" left="108" width="115" height="12" font="font3" id="p45_t14" reading_order_no="13" segment_no="2" tag_type="text">and, as a result, we get E [ R 2</text>
<text top="154" left="219" width="285" height="13" font="font18" id="p45_t15" reading_order_no="14" segment_no="2" tag_type="text">T ] ≤ 2 R 2 0 . Therefore, ( 54 ) holds for all k = 0 , 1 , . . . , K . Together with</text>
<text top="167" left="108" width="56" height="9" font="font3" id="p45_t16" reading_order_no="15" segment_no="2" tag_type="text">( 52 ) it implies</text>
<text top="177" left="249" width="108" height="18" font="font34" id="p45_t17" reading_order_no="16" segment_no="3" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ R 2 0</text>
<text top="185" left="344" width="19" height="16" font="font17" id="p45_t18" reading_order_no="17" segment_no="3" tag_type="formula">γK .</text>
<text top="206" left="108" width="188" height="9" font="font3" id="p45_t19" reading_order_no="18" segment_no="4" tag_type="text">Next, from our stepsize rule ( 49 ) it follows that</text>
<text top="231" left="206" width="101" height="12" font="font34" id="p45_t20" reading_order_no="19" segment_no="5" tag_type="formula">E f ( x K ) − f ( x ∗ ) = O</text>
<text top="226" left="321" width="19" height="10" font="font17" id="p45_t21" reading_order_no="20" segment_no="5" tag_type="formula">GR 0</text>
<text top="238" left="318" width="24" height="13" font="font17" id="p45_t22" reading_order_no="21" segment_no="5" tag_type="formula">K 1 − α α</text>
<text top="226" left="347" width="17" height="16" font="font18" id="p45_t23" reading_order_no="22" segment_no="5" tag_type="formula">+ n</text>
<text top="217" left="364" width="8" height="9" font="font19" id="p45_t24" reading_order_no="23" segment_no="5" tag_type="formula">√</text>
<text top="226" left="372" width="24" height="10" font="font17" id="p45_t25" reading_order_no="24" segment_no="5" tag_type="formula">δGR 0</text>
<text top="238" left="360" width="33" height="13" font="font17" id="p45_t26" reading_order_no="25" segment_no="5" tag_type="formula">mK 1 − α α</text>
<text top="222" left="398" width="8" height="4" font="font29" id="p45_t27" reading_order_no="26" segment_no="5" tag_type="formula">!</text>
<text top="260" left="108" width="72" height="9" font="font3" id="p45_t28" reading_order_no="27" segment_no="6" tag_type="text">meaning that after</text>
<text top="283" left="212" width="30" height="10" font="font17" id="p45_t29" reading_order_no="28" segment_no="7" tag_type="formula">K = O</text>
<text top="270" left="244" width="9" height="4" font="font29" id="p45_t30" reading_order_no="29" segment_no="7" tag_type="formula"></text>
<text top="288" left="244" width="9" height="4" font="font29" id="p45_t31" reading_order_no="30" segment_no="7" tag_type="formula"></text>
<text top="277" left="261" width="20" height="10" font="font17" id="p45_t32" reading_order_no="31" segment_no="7" tag_type="formula">GR 0</text>
<text top="291" left="269" width="5" height="9" font="font17" id="p45_t33" reading_order_no="32" segment_no="7" tag_type="formula">ε</text>
<text top="273" left="291" width="13" height="9" font="font31" id="p45_t34" reading_order_no="33" segment_no="7" tag_type="formula">α α − 1</text>
<text top="284" left="308" width="8" height="9" font="font18" id="p45_t35" reading_order_no="34" segment_no="7" tag_type="formula">+</text>
<text top="277" left="327" width="6" height="9" font="font17" id="p45_t36" reading_order_no="35" segment_no="7" tag_type="formula">n</text>
<text top="268" left="333" width="8" height="9" font="font19" id="p45_t37" reading_order_no="36" segment_no="7" tag_type="formula">√</text>
<text top="277" left="342" width="24" height="10" font="font17" id="p45_t38" reading_order_no="37" segment_no="7" tag_type="formula">δGR 0</text>
<text top="291" left="340" width="13" height="9" font="font17" id="p45_t39" reading_order_no="38" segment_no="7" tag_type="formula">mε</text>
<text top="270" left="367" width="33" height="9" font="font29" id="p45_t40" reading_order_no="39" segment_no="7" tag_type="formula">! α α − 1 </text>
<text top="288" left="391" width="9" height="4" font="font29" id="p45_t41" reading_order_no="40" segment_no="7" tag_type="formula"></text>
<text top="311" left="108" width="284" height="12" font="font3" id="p45_t42" reading_order_no="41" segment_no="8" tag_type="text">iterations BTARD-C LIPPED -SGD guarantees E [ f ( x K ) − f ( x ∗ )] ≤ ε .</text>
<text top="336" left="108" width="396" height="10" font="font3" id="p45_t43" reading_order_no="42" segment_no="9" tag_type="text">First of all, when there are no Byzantine peers ( δ = 0 ) the theorem establishes new result for the</text>
<text top="347" left="108" width="396" height="9" font="font3" id="p45_t44" reading_order_no="43" segment_no="9" tag_type="text">convergence of C LIPPED -SGD for convex objectives, and in the strongly convex case the theorem</text>
<text top="358" left="108" width="396" height="9" font="font3" id="p45_t45" reading_order_no="44" segment_no="9" tag_type="text">recovers the rates from [ 81 ] that are optimal in this setting [ 81 ]. Next, when the number of attacking</text>
<text top="363" left="108" width="396" height="15" font="font3" id="p45_t46" reading_order_no="45" segment_no="9" tag_type="text">Byzantines is known at each iteration and n √ δ / m = O (1) the complexity bound is the same as in</text>
<text top="380" left="108" width="397" height="9" font="font3" id="p45_t47" reading_order_no="46" segment_no="9" tag_type="text">the case when δ = 0 meaning that the negative impact of Byzantine workers is negligible. Finally,</text>
<text top="391" left="108" width="398" height="9" font="font3" id="p45_t48" reading_order_no="47" segment_no="9" tag_type="text">the derived theoretical guarantees do not benefit from the increase of the total number of peers n .</text>
<text top="402" left="108" width="396" height="9" font="font3" id="p45_t49" reading_order_no="48" segment_no="9" tag_type="text">However, the result holds even for non-smooth problems and this is known that parallelization does</text>
<text top="413" left="108" width="396" height="9" font="font3" id="p45_t50" reading_order_no="49" segment_no="9" tag_type="text">not help to improve the complexity bounds in such generality. Nevertheless, our results show that</text>
<text top="424" left="108" width="396" height="9" font="font3" id="p45_t51" reading_order_no="50" segment_no="9" tag_type="text">BTARD-C LIPPED -SGD provably converges to any predefined accuracy ε &gt; 0 – the property that</text>
<text top="435" left="108" width="211" height="9" font="font3" id="p45_t52" reading_order_no="51" segment_no="9" tag_type="text">the majority of previous methods does not have [ 58 ].</text>
<text top="451" left="108" width="358" height="11" font="font3" id="p45_t53" reading_order_no="52" segment_no="10" tag_type="text">Next, we derive the result without assuming that b b k is known to all peers at each iteration.</text>
<text top="466" left="108" width="396" height="11" font="font1" id="p45_t54" reading_order_no="53" segment_no="11" tag_type="text">Theorem F.8. Let As. F.1 hold, Q is bounded, f be convex, x ∗ be some optimum of f , and ∇ f ( x ∗ ) =</text>
<text top="478" left="108" width="396" height="10" font="font18" id="p45_t55" reading_order_no="54" segment_no="11" tag_type="text">0 . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and δ = 0 is used to compute clipping</text>
<text top="490" left="108" width="197" height="9" font="font13" id="p45_t56" reading_order_no="55" segment_no="11" tag_type="text">parameter τ l for CenteredClip . Next, assume that</text>
<text top="514" left="158" width="36" height="9" font="font17" id="p45_t57" reading_order_no="56" segment_no="12" tag_type="formula">γ = min</text>
<text top="507" left="217" width="11" height="10" font="font17" id="p45_t58" reading_order_no="57" segment_no="12" tag_type="formula">R 0</text>
<text top="514" left="204" width="8" height="9" font="font19" id="p45_t59" reading_order_no="58" segment_no="12" tag_type="formula">√</text>
<text top="520" left="212" width="29" height="11" font="font18" id="p45_t60" reading_order_no="59" segment_no="12" tag_type="formula">6 GK 1 α</text>
<text top="514" left="243" width="3" height="9" font="font17" id="p45_t61" reading_order_no="60" segment_no="12" tag_type="formula">,</text>
<text top="507" left="273" width="20" height="10" font="font17" id="p45_t62" reading_order_no="61" segment_no="12" tag_type="formula">mR 0</text>
<text top="522" left="249" width="10" height="9" font="font18" id="p45_t63" reading_order_no="62" segment_no="12" tag_type="formula">12</text>
<text top="514" left="259" width="8" height="9" font="font19" id="p45_t64" reading_order_no="63" segment_no="12" tag_type="formula">√</text>
<text top="520" left="267" width="50" height="12" font="font18" id="p45_t65" reading_order_no="64" segment_no="12" tag_type="formula">2 C 2 GnbK 1 α</text>
<text top="514" left="328" width="3" height="9" font="font17" id="p45_t66" reading_order_no="65" segment_no="12" tag_type="formula">,</text>
<text top="512" left="343" width="12" height="11" font="font18" id="p45_t67" reading_order_no="66" segment_no="12" tag_type="formula">∆ k</text>
<text top="514" left="351" width="55" height="11" font="font18" id="p45_t68" reading_order_no="67" segment_no="12" tag_type="formula">max = 2 λ k =</text>
<text top="507" left="424" width="11" height="9" font="font18" id="p45_t69" reading_order_no="68" segment_no="12" tag_type="formula">2 λ</text>
<text top="513" left="410" width="8" height="9" font="font19" id="p45_t70" reading_order_no="69" segment_no="12" tag_type="formula">√</text>
<text top="514" left="418" width="36" height="17" font="font17" id="p45_t71" reading_order_no="70" segment_no="12" tag_type="formula">n k − m ,</text>
<text top="514" left="487" width="17" height="9" font="font3" id="p45_t72" reading_order_no="71" segment_no="12" tag_type="text">(55)</text>
<text top="540" left="283" width="46" height="12" font="font17" id="p45_t73" reading_order_no="72" segment_no="13" tag_type="formula">λ = GK 1 α ,</text>
<text top="543" left="487" width="17" height="9" font="font3" id="p45_t74" reading_order_no="73" segment_no="13" tag_type="text">(56)</text>
<text top="556" left="108" width="397" height="13" font="font13" id="p45_t75" reading_order_no="74" segment_no="14" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k max is the parameter for verification 3 at iteration k of BTARD-</text>
<text top="568" left="108" width="397" height="12" font="font3" id="p45_t76" reading_order_no="75" segment_no="14" tag_type="text">C LIPPED -SGD . Then, we have E [ f ( x K ) − f ( x ∗ )] ≤ ε after K iterations of BTARD-C LIPPED -SGD ,</text>
<text top="581" left="108" width="24" height="9" font="font13" id="p45_t77" reading_order_no="76" segment_no="14" tag_type="text">where</text>
<text top="599" left="218" width="30" height="10" font="font17" id="p45_t78" reading_order_no="77" segment_no="15" tag_type="formula">K = O</text>
<text top="593" left="266" width="20" height="9" font="font17" id="p45_t79" reading_order_no="78" segment_no="15" tag_type="formula">GR 0</text>
<text top="606" left="274" width="5" height="9" font="font17" id="p45_t80" reading_order_no="79" segment_no="15" tag_type="formula">ε</text>
<text top="588" left="296" width="13" height="10" font="font31" id="p45_t81" reading_order_no="80" segment_no="15" tag_type="formula">α α − 1</text>
<text top="600" left="313" width="8" height="9" font="font18" id="p45_t82" reading_order_no="81" segment_no="15" tag_type="formula">+</text>
<text top="593" left="332" width="29" height="9" font="font17" id="p45_t83" reading_order_no="82" segment_no="15" tag_type="formula">nbGR 0</text>
<text top="606" left="340" width="13" height="9" font="font17" id="p45_t84" reading_order_no="83" segment_no="15" tag_type="formula">mε</text>
<text top="588" left="372" width="23" height="10" font="font29" id="p45_t85" reading_order_no="84" segment_no="15" tag_type="formula">α α − 1 !</text>
<text top="600" left="487" width="17" height="9" font="font3" id="p45_t86" reading_order_no="85" segment_no="15" tag_type="text">(57)</text>
<text top="625" left="108" width="51" height="11" font="font13" id="p45_t87" reading_order_no="86" segment_no="16" tag_type="formula">and x K = 1</text>
<text top="624" left="153" width="38" height="14" font="font29" id="p45_t88" reading_order_no="87" segment_no="16" tag_type="formula">K P K − 1</text>
<text top="627" left="174" width="20" height="11" font="font13" id="p45_t89" reading_order_no="88" segment_no="16" tag_type="formula">k =0 .</text>
<text top="651" left="108" width="396" height="9" font="font13" id="p45_t90" reading_order_no="89" segment_no="17" tag_type="text">Proof. The proof is almost identical to the proof of Theorem F.7 . Following the same steps and using<a href="deeplearning_paper1.html#44">(</a></text>
<text top="661" left="108" width="396" height="9" font="font3" id="p45_t91" reading_order_no="90" segment_no="17" tag_type="text">( 47 ) and ( 48 ) instead of ( 45 ) and ( 46 ) respectively we obtain the same sequence of inequalities up to<a href="deeplearning_paper1.html#44">54</a></text>
<text top="674" left="108" width="301" height="10" font="font3" id="p45_t92" reading_order_no="91" segment_no="17" tag_type="text">the following change: instead of b δ k we should use 1 k,v . Therefore, we have<a href="deeplearning_paper1.html#44">) </a>holds for all</text>
<text top="693" left="129" width="88" height="13" font="font34" id="p45_t93" reading_order_no="92" segment_no="18" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="695" left="232" width="8" height="9" font="font19" id="p45_t94" reading_order_no="93" segment_no="18" tag_type="formula">≤</text>
<text top="692" left="250" width="205" height="13" font="font19" id="p45_t95" reading_order_no="94" segment_no="18" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) + 2 γ 2 G 2 K 2 − α α</text>
<text top="711" left="260" width="125" height="13" font="font19" id="p45_t96" reading_order_no="95" segment_no="18" tag_type="formula">− 2 γ x k − x ∗ , E b g k − g k | x k</text>
<text top="710" left="397" width="86" height="13" font="font18" id="p45_t97" reading_order_no="96" segment_no="18" tag_type="formula">+ 2 γ 2 C 2 G 2 K 2 α 1 k,v .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p45_t98" reading_order_no="97" segment_no="19" tag_type="text">45</text>
</page>
<page number="46" position="absolute" top="0" left="0" height="792" width="612">
<text top="73" left="165" width="125" height="13" font="font19" id="p46_t1" reading_order_no="0" segment_no="0" tag_type="formula">− 2 γ x k − x ∗ , E b g k − g k | x k</text>
<text top="75" left="309" width="8" height="9" font="font19" id="p46_t2" reading_order_no="1" segment_no="0" tag_type="formula">≤</text>
<text top="72" left="327" width="120" height="13" font="font18" id="p46_t3" reading_order_no="2" segment_no="0" tag_type="formula">2 γG k x k − x ∗ k p C 2 K 1 α 1 k,v ,</text>
<text top="97" left="108" width="14" height="9" font="font3" id="p46_t4" reading_order_no="3" segment_no="1" tag_type="text">and</text>
<text top="116" left="134" width="88" height="13" font="font34" id="p46_t5" reading_order_no="4" segment_no="2" tag_type="formula">E k x k +1 − x ∗ k 2 | x k</text>
<text top="118" left="237" width="8" height="9" font="font19" id="p46_t6" reading_order_no="5" segment_no="2" tag_type="formula">≤</text>
<text top="114" left="255" width="205" height="13" font="font19" id="p46_t7" reading_order_no="6" segment_no="2" tag_type="formula">k x k − x ∗ k 2 − 2 γ f ( x k ) − f ( x ∗ ) + 2 γ 2 G 2 K 2 − α α</text>
<text top="133" left="265" width="213" height="12" font="font18" id="p46_t8" reading_order_no="7" segment_no="2" tag_type="formula">+2 γG p C 2 K 1 α k x k − x ∗ k 1 k,v + 2 γ 2 C 2 G 2 K 2 α 1 k,v .</text>
<text top="158" left="108" width="396" height="9" font="font3" id="p46_t9" reading_order_no="8" segment_no="3" tag_type="text">Taking the full expectation from the both sides of the above inequality and summing up the results</text>
<text top="168" left="108" width="135" height="10" font="font3" id="p46_t10" reading_order_no="9" segment_no="3" tag_type="text">for k = 0 , 1 , . . . , T − 1 we derive</text>
<text top="194" left="109" width="10" height="9" font="font18" id="p46_t11" reading_order_no="10" segment_no="4" tag_type="formula">2 γ</text>
<text top="207" left="111" width="6" height="9" font="font17" id="p46_t12" reading_order_no="11" segment_no="4" tag_type="formula">T</text>
<text top="190" left="123" width="16" height="7" font="font28" id="p46_t13" reading_order_no="12" segment_no="4" tag_type="formula">T − 1</text>
<text top="197" left="124" width="14" height="4" font="font29" id="p46_t14" reading_order_no="13" segment_no="4" tag_type="formula">X</text>
<text top="214" left="123" width="15" height="6" font="font28" id="p46_t15" reading_order_no="14" segment_no="4" tag_type="formula">k =0</text>
<text top="198" left="140" width="73" height="13" font="font34" id="p46_t16" reading_order_no="15" segment_no="4" tag_type="formula">E [ f ( x k ) − f ( x ∗ )]</text>
<text top="200" left="223" width="8" height="9" font="font19" id="p46_t17" reading_order_no="16" segment_no="4" tag_type="formula">≤</text>
<text top="194" left="243" width="5" height="9" font="font18" id="p46_t18" reading_order_no="17" segment_no="4" tag_type="formula">1</text>
<text top="207" left="242" width="6" height="9" font="font17" id="p46_t19" reading_order_no="18" segment_no="4" tag_type="formula">T</text>
<text top="190" left="252" width="16" height="7" font="font28" id="p46_t20" reading_order_no="19" segment_no="4" tag_type="formula">T − 1</text>
<text top="197" left="253" width="14" height="4" font="font29" id="p46_t21" reading_order_no="20" segment_no="4" tag_type="formula">X</text>
<text top="214" left="253" width="14" height="6" font="font28" id="p46_t22" reading_order_no="21" segment_no="4" tag_type="formula">k =0</text>
<text top="198" left="274" width="146" height="13" font="font34" id="p46_t23" reading_order_no="22" segment_no="4" tag_type="formula">E k x k − x ∗ k 2 − E k x k +1 − x ∗ k 2</text>
<text top="196" left="431" width="62" height="13" font="font18" id="p46_t24" reading_order_no="23" segment_no="4" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α</text>
<text top="229" left="251" width="28" height="16" font="font18" id="p46_t25" reading_order_no="24" segment_no="4" tag_type="formula">+ 2 γG</text>
<text top="221" left="278" width="8" height="9" font="font19" id="p46_t26" reading_order_no="25" segment_no="4" tag_type="formula">√</text>
<text top="226" left="286" width="27" height="12" font="font17" id="p46_t27" reading_order_no="26" segment_no="4" tag_type="formula">C 2 K 1 α</text>
<text top="242" left="283" width="6" height="9" font="font17" id="p46_t28" reading_order_no="27" segment_no="4" tag_type="formula">T</text>
<text top="225" left="317" width="16" height="7" font="font28" id="p46_t29" reading_order_no="28" segment_no="4" tag_type="formula">T − 1</text>
<text top="233" left="318" width="14" height="4" font="font29" id="p46_t30" reading_order_no="29" segment_no="4" tag_type="formula">X</text>
<text top="250" left="318" width="15" height="6" font="font28" id="p46_t31" reading_order_no="30" segment_no="4" tag_type="formula">k =0</text>
<text top="226" left="335" width="145" height="20" font="font34" id="p46_t32" reading_order_no="31" segment_no="4" tag_type="formula">E k x k − x ∗ k 1 k,v + 2 γ 2 C 2 G 2 K 2 α</text>
<text top="242" left="450" width="6" height="9" font="font17" id="p46_t33" reading_order_no="32" segment_no="4" tag_type="formula">T</text>
<text top="225" left="484" width="16" height="7" font="font28" id="p46_t34" reading_order_no="33" segment_no="4" tag_type="formula">T − 1</text>
<text top="233" left="485" width="14" height="4" font="font29" id="p46_t35" reading_order_no="34" segment_no="4" tag_type="formula">X</text>
<text top="250" left="485" width="14" height="6" font="font28" id="p46_t36" reading_order_no="35" segment_no="4" tag_type="formula">k =0</text>
<text top="236" left="502" width="30" height="10" font="font34" id="p46_t37" reading_order_no="36" segment_no="4" tag_type="formula">E [ 1 k,v ]</text>
<text top="267" left="223" width="8" height="9" font="font19" id="p46_t38" reading_order_no="37" segment_no="4" tag_type="formula">≤</text>
<text top="259" left="242" width="122" height="12" font="font19" id="p46_t39" reading_order_no="38" segment_no="4" tag_type="formula">k x 0 − x ∗ k 2 − E [ k x K − x ∗ k 2 ]</text>
<text top="274" left="298" width="8" height="9" font="font17" id="p46_t40" reading_order_no="39" segment_no="4" tag_type="formula">K</text>
<text top="264" left="367" width="62" height="13" font="font18" id="p46_t41" reading_order_no="40" segment_no="4" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α</text>
<text top="290" left="251" width="28" height="16" font="font18" id="p46_t42" reading_order_no="41" segment_no="4" tag_type="formula">+ 2 γG</text>
<text top="282" left="278" width="8" height="9" font="font19" id="p46_t43" reading_order_no="42" segment_no="4" tag_type="formula">√</text>
<text top="287" left="286" width="27" height="12" font="font17" id="p46_t44" reading_order_no="43" segment_no="4" tag_type="formula">C 2 K 1 α</text>
<text top="303" left="283" width="6" height="9" font="font17" id="p46_t45" reading_order_no="44" segment_no="4" tag_type="formula">T</text>
<text top="286" left="317" width="16" height="7" font="font28" id="p46_t46" reading_order_no="45" segment_no="4" tag_type="formula">T − 1</text>
<text top="294" left="318" width="14" height="4" font="font29" id="p46_t47" reading_order_no="46" segment_no="4" tag_type="formula">X</text>
<text top="311" left="318" width="15" height="6" font="font28" id="p46_t48" reading_order_no="47" segment_no="4" tag_type="formula">k =0</text>
<text top="291" left="335" width="10" height="4" font="font29" id="p46_t49" reading_order_no="48" segment_no="4" tag_type="formula">q</text>
<text top="295" left="345" width="95" height="12" font="font34" id="p46_t50" reading_order_no="49" segment_no="4" tag_type="formula">E [ k x k − x ∗ k 2 ] E [ 1 k,v ]</text>
<text top="322" left="251" width="63" height="19" font="font18" id="p46_t51" reading_order_no="50" segment_no="4" tag_type="formula">+ 2 γ 2 C 2 G 2 K 2 α</text>
<text top="339" left="284" width="6" height="9" font="font17" id="p46_t52" reading_order_no="51" segment_no="4" tag_type="formula">T</text>
<text top="321" left="318" width="16" height="7" font="font28" id="p46_t53" reading_order_no="52" segment_no="4" tag_type="formula">T − 1</text>
<text top="329" left="319" width="14" height="4" font="font29" id="p46_t54" reading_order_no="53" segment_no="4" tag_type="formula">X</text>
<text top="346" left="319" width="14" height="6" font="font28" id="p46_t55" reading_order_no="54" segment_no="4" tag_type="formula">k =0</text>
<text top="332" left="336" width="32" height="10" font="font34" id="p46_t56" reading_order_no="55" segment_no="4" tag_type="formula">E [ 1 k,v ] .</text>
<text top="364" left="108" width="185" height="11" font="font3" id="p46_t57" reading_order_no="56" segment_no="5" tag_type="text">From Jensen’s inequality we have f ( x T ) ≤ 1</text>
<text top="372" left="288" width="5" height="6" font="font28" id="p46_t58" reading_order_no="57" segment_no="5" tag_type="text">T</text>
<text top="363" left="297" width="26" height="7" font="font29" id="p46_t59" reading_order_no="58" segment_no="5" tag_type="text">P T − 1</text>
<text top="364" left="307" width="107" height="13" font="font17" id="p46_t60" reading_order_no="59" segment_no="5" tag_type="text">k =0 f ( x k ) , where x T = 1</text>
<text top="372" left="409" width="5" height="6" font="font28" id="p46_t61" reading_order_no="60" segment_no="5" tag_type="text">T</text>
<text top="363" left="417" width="27" height="7" font="font29" id="p46_t62" reading_order_no="61" segment_no="5" tag_type="text">P T − 1</text>
<text top="365" left="428" width="76" height="12" font="font17" id="p46_t63" reading_order_no="62" segment_no="5" tag_type="text">k =0 x k . Using this</text>
<text top="377" left="108" width="270" height="12" font="font3" id="p46_t64" reading_order_no="63" segment_no="5" tag_type="text">and new notation R k = k x k − x ∗ k , k &gt; 0 , R 0 ≥ k x 0 − x ∗ k we get</text>
<text top="406" left="157" width="103" height="13" font="font18" id="p46_t65" reading_order_no="64" segment_no="6" tag_type="formula">0 ≤ 2 γ E f ( x T ) − f ( x ∗ )</text>
<text top="408" left="274" width="8" height="9" font="font19" id="p46_t66" reading_order_no="65" segment_no="6" tag_type="formula">≤</text>
<text top="400" left="293" width="50" height="12" font="font17" id="p46_t67" reading_order_no="66" segment_no="6" tag_type="formula">R 2 0 − E [ R 2 T ]</text>
<text top="415" left="314" width="6" height="9" font="font17" id="p46_t68" reading_order_no="67" segment_no="6" tag_type="formula">T</text>
<text top="404" left="347" width="61" height="13" font="font18" id="p46_t69" reading_order_no="68" segment_no="6" tag_type="formula">+ 2 γ 2 G 2 K 2 − α α</text>
<text top="431" left="302" width="28" height="15" font="font18" id="p46_t70" reading_order_no="69" segment_no="6" tag_type="formula">+ 2 γG</text>
<text top="422" left="329" width="8" height="9" font="font19" id="p46_t71" reading_order_no="70" segment_no="6" tag_type="formula">√</text>
<text top="428" left="337" width="27" height="12" font="font17" id="p46_t72" reading_order_no="71" segment_no="6" tag_type="formula">C 2 K 1 α</text>
<text top="444" left="334" width="6" height="9" font="font17" id="p46_t73" reading_order_no="72" segment_no="6" tag_type="formula">T</text>
<text top="427" left="368" width="16" height="7" font="font28" id="p46_t74" reading_order_no="73" segment_no="6" tag_type="formula">T − 1</text>
<text top="434" left="369" width="14" height="4" font="font29" id="p46_t75" reading_order_no="74" segment_no="6" tag_type="formula">X</text>
<text top="451" left="369" width="15" height="6" font="font28" id="p46_t76" reading_order_no="75" segment_no="6" tag_type="formula">k =0</text>
<text top="432" left="386" width="10" height="4" font="font29" id="p46_t77" reading_order_no="76" segment_no="6" tag_type="formula">q</text>
<text top="436" left="396" width="60" height="12" font="font34" id="p46_t78" reading_order_no="77" segment_no="6" tag_type="formula">E [ R 2 k ] E [ 1 k,v ]</text>
<text top="463" left="302" width="63" height="19" font="font18" id="p46_t79" reading_order_no="78" segment_no="6" tag_type="formula">+ 2 γ 2 C 2 G 2 K 2 α</text>
<text top="479" left="335" width="6" height="9" font="font17" id="p46_t80" reading_order_no="79" segment_no="6" tag_type="formula">T</text>
<text top="462" left="369" width="16" height="7" font="font28" id="p46_t81" reading_order_no="80" segment_no="6" tag_type="formula">T − 1</text>
<text top="470" left="370" width="14" height="4" font="font29" id="p46_t82" reading_order_no="81" segment_no="6" tag_type="formula">X</text>
<text top="487" left="370" width="14" height="6" font="font28" id="p46_t83" reading_order_no="82" segment_no="6" tag_type="formula">k =0</text>
<text top="473" left="387" width="30" height="10" font="font34" id="p46_t84" reading_order_no="83" segment_no="6" tag_type="formula">E [ 1 k,v ]</text>
<text top="473" left="487" width="17" height="9" font="font3" id="p46_t85" reading_order_no="84" segment_no="6" tag_type="text">(58)</text>
<text top="504" left="108" width="165" height="9" font="font3" id="p46_t86" reading_order_no="85" segment_no="7" tag_type="text">implying (after changing the indices) that</text>
<text top="534" left="162" width="21" height="12" font="font34" id="p46_t87" reading_order_no="86" segment_no="8" tag_type="formula">E [ R 2</text>
<text top="536" left="179" width="7" height="11" font="font18" id="p46_t88" reading_order_no="87" segment_no="8" tag_type="formula">k ]</text>
<text top="536" left="196" width="8" height="9" font="font19" id="p46_t89" reading_order_no="88" segment_no="8" tag_type="formula">≤</text>
<text top="534" left="214" width="12" height="11" font="font17" id="p46_t90" reading_order_no="89" segment_no="8" tag_type="formula">R 2</text>
<text top="532" left="221" width="74" height="15" font="font18" id="p46_t91" reading_order_no="90" segment_no="8" tag_type="formula">0 + 2 γ 2 G 2 kK 2 − α α</text>
<text top="533" left="299" width="65" height="13" font="font18" id="p46_t92" reading_order_no="91" segment_no="8" tag_type="formula">+ 2 γG p C 2 K 1 α</text>
<text top="525" left="367" width="15" height="7" font="font28" id="p46_t93" reading_order_no="92" segment_no="8" tag_type="formula">k − 1</text>
<text top="533" left="367" width="14" height="4" font="font29" id="p46_t94" reading_order_no="93" segment_no="8" tag_type="formula">X</text>
<text top="550" left="368" width="13" height="6" font="font28" id="p46_t95" reading_order_no="94" segment_no="8" tag_type="formula">l =0</text>
<text top="531" left="383" width="10" height="4" font="font29" id="p46_t96" reading_order_no="95" segment_no="8" tag_type="formula">q</text>
<text top="535" left="393" width="58" height="12" font="font34" id="p46_t97" reading_order_no="96" segment_no="8" tag_type="formula">E [ R 2 l ] E [ 1 l,v ]</text>
<text top="568" left="224" width="62" height="13" font="font18" id="p46_t98" reading_order_no="97" segment_no="8" tag_type="formula">+2 γ 2 C 2 G 2 K 2 α</text>
<text top="561" left="289" width="15" height="7" font="font28" id="p46_t99" reading_order_no="98" segment_no="8" tag_type="formula">k − 1</text>
<text top="568" left="289" width="14" height="4" font="font29" id="p46_t100" reading_order_no="99" segment_no="8" tag_type="formula">X</text>
<text top="585" left="290" width="12" height="6" font="font28" id="p46_t101" reading_order_no="100" segment_no="8" tag_type="formula">l =0</text>
<text top="571" left="305" width="28" height="11" font="font34" id="p46_t102" reading_order_no="101" segment_no="8" tag_type="formula">E [ 1 l,v ]</text>
<text top="572" left="487" width="17" height="9" font="font3" id="p46_t103" reading_order_no="102" segment_no="8" tag_type="text">(59)</text>
<text top="603" left="108" width="324" height="9" font="font3" id="p46_t104" reading_order_no="103" segment_no="9" tag_type="text">holds for all k ≥ 0 . In the remaining part of the proof we derive by induction that</text>
<text top="633" left="165" width="12" height="11" font="font17" id="p46_t105" reading_order_no="104" segment_no="10" tag_type="formula">R 2</text>
<text top="631" left="173" width="74" height="15" font="font18" id="p46_t106" reading_order_no="105" segment_no="10" tag_type="formula">0 + 2 γ 2 G 2 kK 2 − α α</text>
<text top="632" left="250" width="66" height="13" font="font18" id="p46_t107" reading_order_no="106" segment_no="10" tag_type="formula">+ 2 γG p C 2 K 1 α</text>
<text top="625" left="319" width="14" height="7" font="font28" id="p46_t108" reading_order_no="107" segment_no="10" tag_type="formula">k − 1</text>
<text top="632" left="319" width="14" height="4" font="font29" id="p46_t109" reading_order_no="108" segment_no="10" tag_type="formula">X</text>
<text top="649" left="320" width="12" height="6" font="font28" id="p46_t110" reading_order_no="109" segment_no="10" tag_type="formula">l =0</text>
<text top="630" left="335" width="10" height="4" font="font29" id="p46_t111" reading_order_no="110" segment_no="10" tag_type="formula">q</text>
<text top="634" left="345" width="57" height="12" font="font34" id="p46_t112" reading_order_no="111" segment_no="10" tag_type="formula">E [ R 2 l ] E [ 1 l,v ]</text>
<text top="667" left="293" width="62" height="13" font="font18" id="p46_t113" reading_order_no="112" segment_no="10" tag_type="formula">+2 γ 2 C 2 G 2 K 2 α</text>
<text top="660" left="358" width="14" height="7" font="font28" id="p46_t114" reading_order_no="113" segment_no="10" tag_type="formula">k − 1</text>
<text top="668" left="358" width="14" height="4" font="font29" id="p46_t115" reading_order_no="114" segment_no="10" tag_type="formula">X</text>
<text top="685" left="359" width="12" height="6" font="font28" id="p46_t116" reading_order_no="115" segment_no="10" tag_type="formula">l =0</text>
<text top="671" left="374" width="28" height="10" font="font34" id="p46_t117" reading_order_no="116" segment_no="10" tag_type="formula">E [ 1 l,v ]</text>
<text top="670" left="412" width="8" height="9" font="font19" id="p46_t118" reading_order_no="117" segment_no="10" tag_type="formula">≤</text>
<text top="668" left="430" width="16" height="12" font="font18" id="p46_t119" reading_order_no="118" segment_no="10" tag_type="formula">2 R 2</text>
<text top="675" left="442" width="4" height="6" font="font30" id="p46_t120" reading_order_no="119" segment_no="10" tag_type="formula">0</text>
<text top="671" left="487" width="17" height="9" font="font3" id="p46_t121" reading_order_no="120" segment_no="10" tag_type="text">(60)</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p46_t122" reading_order_no="121" segment_no="11" tag_type="text">for all k = 0 , . . . , K . For k = 0 this inequality trivially holds. Next, assume that it holds for all</text>
<text top="713" left="108" width="396" height="9" font="font17" id="p46_t123" reading_order_no="122" segment_no="11" tag_type="text">k = 0 , 1 , . . . , T − 1 , T ≤ K − 1 . Let us show that it holds for k = T as well. From ( 33 ) and ( 34 )</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p46_t124" reading_order_no="123" segment_no="12" tag_type="text">46</text>
</page>
<page number="47" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="263" height="12" font="font3" id="p47_t1" reading_order_no="0" segment_no="0" tag_type="text">we have that E [ R 2 k ] ≤ 2 R 2 0 for all k = 0 , 1 , . . . , T − 1 . Therefore,</text>
<text top="102" left="159" width="21" height="12" font="font34" id="p47_t2" reading_order_no="1" segment_no="1" tag_type="formula">E [ R 2</text>
<text top="104" left="176" width="10" height="11" font="font18" id="p47_t3" reading_order_no="2" segment_no="1" tag_type="formula">T ]</text>
<text top="104" left="195" width="8" height="9" font="font19" id="p47_t4" reading_order_no="3" segment_no="1" tag_type="formula">≤</text>
<text top="102" left="213" width="12" height="11" font="font17" id="p47_t5" reading_order_no="4" segment_no="1" tag_type="formula">R 2</text>
<text top="100" left="221" width="75" height="15" font="font18" id="p47_t6" reading_order_no="5" segment_no="1" tag_type="formula">0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="101" left="300" width="65" height="13" font="font18" id="p47_t7" reading_order_no="6" segment_no="1" tag_type="formula">+ 2 γG p C 2 K 1 α</text>
<text top="93" left="368" width="16" height="7" font="font28" id="p47_t8" reading_order_no="7" segment_no="1" tag_type="formula">T − 1</text>
<text top="101" left="369" width="14" height="4" font="font29" id="p47_t9" reading_order_no="8" segment_no="1" tag_type="formula">X</text>
<text top="118" left="370" width="12" height="6" font="font28" id="p47_t10" reading_order_no="9" segment_no="1" tag_type="formula">l =0</text>
<text top="99" left="386" width="10" height="4" font="font29" id="p47_t11" reading_order_no="10" segment_no="1" tag_type="formula">q</text>
<text top="103" left="396" width="57" height="12" font="font34" id="p47_t12" reading_order_no="11" segment_no="1" tag_type="formula">E [ R 2 l ] E [ 1 l,v ]</text>
<text top="136" left="223" width="62" height="13" font="font18" id="p47_t13" reading_order_no="12" segment_no="1" tag_type="formula">+2 γ 2 C 2 G 2 K 2 α</text>
<text top="129" left="288" width="16" height="7" font="font28" id="p47_t14" reading_order_no="13" segment_no="1" tag_type="formula">T − 1</text>
<text top="136" left="289" width="14" height="4" font="font29" id="p47_t15" reading_order_no="14" segment_no="1" tag_type="formula">X</text>
<text top="153" left="290" width="12" height="6" font="font28" id="p47_t16" reading_order_no="15" segment_no="1" tag_type="formula">l =0</text>
<text top="139" left="306" width="28" height="11" font="font34" id="p47_t17" reading_order_no="16" segment_no="1" tag_type="formula">E [ 1 l,v ]</text>
<text top="174" left="195" width="8" height="9" font="font19" id="p47_t18" reading_order_no="17" segment_no="1" tag_type="formula">≤</text>
<text top="171" left="213" width="83" height="14" font="font17" id="p47_t19" reading_order_no="18" segment_no="1" tag_type="formula">R 2 0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="171" left="300" width="82" height="13" font="font18" id="p47_t20" reading_order_no="19" segment_no="1" tag_type="formula">+ 2 γGR 0 p 2 C 2 K 1 α</text>
<text top="164" left="385" width="16" height="7" font="font28" id="p47_t21" reading_order_no="20" segment_no="1" tag_type="formula">T − 1</text>
<text top="172" left="386" width="14" height="4" font="font29" id="p47_t22" reading_order_no="21" segment_no="1" tag_type="formula">X</text>
<text top="189" left="387" width="12" height="6" font="font28" id="p47_t23" reading_order_no="22" segment_no="1" tag_type="formula">l =0</text>
<text top="169" left="403" width="10" height="4" font="font29" id="p47_t24" reading_order_no="23" segment_no="1" tag_type="formula">q</text>
<text top="175" left="413" width="29" height="10" font="font34" id="p47_t25" reading_order_no="24" segment_no="1" tag_type="formula">E [ 1 l,v ]</text>
<text top="206" left="223" width="62" height="13" font="font18" id="p47_t26" reading_order_no="25" segment_no="1" tag_type="formula">+2 γ 2 C 2 G 2 K 2 α</text>
<text top="199" left="288" width="16" height="7" font="font28" id="p47_t27" reading_order_no="26" segment_no="1" tag_type="formula">T − 1</text>
<text top="207" left="289" width="14" height="4" font="font29" id="p47_t28" reading_order_no="27" segment_no="1" tag_type="formula">X</text>
<text top="224" left="290" width="12" height="6" font="font28" id="p47_t29" reading_order_no="28" segment_no="1" tag_type="formula">l =0</text>
<text top="210" left="306" width="28" height="10" font="font34" id="p47_t30" reading_order_no="29" segment_no="1" tag_type="formula">E [ 1 l,v ]</text>
<text top="238" left="108" width="396" height="9" font="font3" id="p47_t31" reading_order_no="30" segment_no="2" tag_type="text">If a Byzantine peer deviates from the protocol at iteration k , it will be detected with some probability</text>
<text top="249" left="108" width="273" height="9" font="font17" id="p47_t32" reading_order_no="31" segment_no="2" tag_type="text">p k during the next iteration. One can lower bound this probability as</text>
<text top="266" left="224" width="57" height="17" font="font17" id="p47_t33" reading_order_no="32" segment_no="3" tag_type="formula">p k ≥ m · |G k |</text>
<text top="280" left="267" width="10" height="10" font="font17" id="p47_t34" reading_order_no="33" segment_no="3" tag_type="formula">n k</text>
<text top="266" left="284" width="14" height="16" font="font19" id="p47_t35" reading_order_no="34" segment_no="3" tag_type="formula">· 1</text>
<text top="280" left="290" width="10" height="10" font="font17" id="p47_t36" reading_order_no="35" segment_no="3" tag_type="formula">n k</text>
<text top="266" left="305" width="55" height="16" font="font18" id="p47_t37" reading_order_no="36" segment_no="3" tag_type="formula">= m (1 − δ k )</text>
<text top="280" left="333" width="10" height="10" font="font17" id="p47_t38" reading_order_no="37" segment_no="3" tag_type="formula">n k</text>
<text top="266" left="364" width="20" height="16" font="font19" id="p47_t39" reading_order_no="38" segment_no="3" tag_type="formula">≥ m</text>
<text top="273" left="377" width="11" height="16" font="font17" id="p47_t40" reading_order_no="39" segment_no="3" tag_type="formula">n .</text>
<text top="297" left="108" width="398" height="9" font="font3" id="p47_t41" reading_order_no="40" segment_no="4" tag_type="text">That is, each individual Byzantine worker can violate the protocol no more than 1 / p times on average.</text>
<text top="307" left="108" width="396" height="12" font="font3" id="p47_t42" reading_order_no="41" segment_no="4" tag_type="text">However, even one Byzantine peer can create a shift of the order ∆ k max at each part of the resulting</text>
<text top="320" left="108" width="396" height="9" font="font3" id="p47_t43" reading_order_no="42" segment_no="4" tag_type="text">vector. Therefore, all Byzantine peers can violate the protocol no more than b / p times on average</text>
<text top="331" left="108" width="53" height="9" font="font3" id="p47_t44" reading_order_no="43" segment_no="4" tag_type="text">implying that</text>
<text top="355" left="147" width="21" height="13" font="font34" id="p47_t45" reading_order_no="44" segment_no="5" tag_type="formula">E [ R 2</text>
<text top="357" left="164" width="9" height="11" font="font18" id="p47_t46" reading_order_no="45" segment_no="5" tag_type="formula">T ]</text>
<text top="357" left="183" width="8" height="9" font="font19" id="p47_t47" reading_order_no="46" segment_no="5" tag_type="formula">≤</text>
<text top="355" left="201" width="11" height="11" font="font17" id="p47_t48" reading_order_no="47" segment_no="5" tag_type="formula">R 2</text>
<text top="353" left="208" width="76" height="15" font="font18" id="p47_t49" reading_order_no="48" segment_no="5" tag_type="formula">0 + 2 γ 2 G 2 T K 2 − α α</text>
<text top="351" left="287" width="41" height="15" font="font18" id="p47_t50" reading_order_no="49" segment_no="5" tag_type="formula">+ 2 γGR 0</text>
<text top="342" left="329" width="8" height="9" font="font19" id="p47_t51" reading_order_no="50" segment_no="5" tag_type="formula">√</text>
<text top="348" left="337" width="43" height="12" font="font18" id="p47_t52" reading_order_no="51" segment_no="5" tag_type="formula">2 C 2 K 1 α nb</text>
<text top="364" left="335" width="9" height="9" font="font17" id="p47_t53" reading_order_no="52" segment_no="5" tag_type="formula">m</text>
<text top="348" left="384" width="77" height="18" font="font18" id="p47_t54" reading_order_no="53" segment_no="5" tag_type="formula">+ 2 γ 2 C 2 G 2 K 2 α nb</text>
<text top="364" left="424" width="9" height="9" font="font17" id="p47_t55" reading_order_no="54" segment_no="5" tag_type="formula">m</text>
<text top="357" left="462" width="3" height="9" font="font17" id="p47_t56" reading_order_no="55" segment_no="5" tag_type="formula">.</text>
<text top="379" left="108" width="27" height="9" font="font3" id="p47_t57" reading_order_no="56" segment_no="6" tag_type="text">Taking</text>
<text top="397" left="222" width="35" height="9" font="font17" id="p47_t58" reading_order_no="57" segment_no="7" tag_type="formula">γ = min</text>
<text top="390" left="280" width="12" height="10" font="font17" id="p47_t59" reading_order_no="58" segment_no="7" tag_type="formula">R 0</text>
<text top="396" left="268" width="8" height="9" font="font19" id="p47_t60" reading_order_no="59" segment_no="7" tag_type="formula">√</text>
<text top="402" left="276" width="28" height="12" font="font18" id="p47_t61" reading_order_no="60" segment_no="7" tag_type="formula">6 GK 1 α</text>
<text top="397" left="307" width="3" height="9" font="font17" id="p47_t62" reading_order_no="61" segment_no="7" tag_type="formula">,</text>
<text top="390" left="337" width="20" height="10" font="font17" id="p47_t63" reading_order_no="62" segment_no="7" tag_type="formula">mR 0</text>
<text top="405" left="312" width="10" height="9" font="font18" id="p47_t64" reading_order_no="63" segment_no="7" tag_type="formula">12</text>
<text top="397" left="322" width="8" height="9" font="font19" id="p47_t65" reading_order_no="64" segment_no="7" tag_type="formula">√</text>
<text top="402" left="330" width="50" height="13" font="font18" id="p47_t66" reading_order_no="65" segment_no="7" tag_type="formula">2 C 2 GnbK 1 α</text>
<text top="419" left="108" width="58" height="9" font="font3" id="p47_t67" reading_order_no="66" segment_no="8" tag_type="text">we ensure that</text>
<text top="439" left="127" width="59" height="13" font="font18" id="p47_t68" reading_order_no="67" segment_no="9" tag_type="formula">2 γ 2 G 2 T K 2 − α α</text>
<text top="437" left="189" width="41" height="15" font="font18" id="p47_t69" reading_order_no="68" segment_no="9" tag_type="formula">+ 2 γGR 0</text>
<text top="428" left="231" width="8" height="9" font="font19" id="p47_t70" reading_order_no="69" segment_no="9" tag_type="formula">√</text>
<text top="434" left="239" width="43" height="12" font="font18" id="p47_t71" reading_order_no="70" segment_no="9" tag_type="formula">2 C 2 K 1 α nb</text>
<text top="450" left="237" width="9" height="9" font="font17" id="p47_t72" reading_order_no="71" segment_no="9" tag_type="formula">m</text>
<text top="434" left="286" width="77" height="18" font="font18" id="p47_t73" reading_order_no="72" segment_no="9" tag_type="formula">+ 2 γ 2 C 2 G 2 K 2 α nb</text>
<text top="450" left="326" width="9" height="9" font="font17" id="p47_t74" reading_order_no="73" segment_no="9" tag_type="formula">m</text>
<text top="443" left="374" width="8" height="9" font="font19" id="p47_t75" reading_order_no="74" segment_no="9" tag_type="formula">≤</text>
<text top="435" left="393" width="12" height="12" font="font17" id="p47_t76" reading_order_no="75" segment_no="9" tag_type="formula">R 2 0</text>
<text top="435" left="397" width="34" height="24" font="font18" id="p47_t77" reading_order_no="76" segment_no="9" tag_type="formula">3 + R 2 0</text>
<text top="435" left="423" width="35" height="24" font="font18" id="p47_t78" reading_order_no="77" segment_no="9" tag_type="formula">3 + R 2 0</text>
<text top="450" left="450" width="5" height="9" font="font18" id="p47_t79" reading_order_no="78" segment_no="9" tag_type="formula">3</text>
<text top="441" left="463" width="22" height="11" font="font18" id="p47_t80" reading_order_no="79" segment_no="9" tag_type="formula">= R 2</text>
<text top="448" left="481" width="4" height="6" font="font30" id="p47_t81" reading_order_no="80" segment_no="9" tag_type="formula">0</text>
<text top="465" left="108" width="396" height="12" font="font3" id="p47_t82" reading_order_no="81" segment_no="10" tag_type="text">and, as a result, we get E [ R 2 T ] ≤ 2 R 2 0 . Therefore, ( 60 ) holds for all k = 0 , 1 , . . . , K . Together with</text>
<text top="477" left="108" width="56" height="9" font="font3" id="p47_t83" reading_order_no="82" segment_no="10" tag_type="text">( 58 ) it implies</text>
<text top="487" left="249" width="108" height="19" font="font34" id="p47_t84" reading_order_no="83" segment_no="11" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ R 2 0</text>
<text top="495" left="344" width="19" height="16" font="font17" id="p47_t85" reading_order_no="84" segment_no="11" tag_type="formula">γK .</text>
<text top="516" left="108" width="188" height="9" font="font3" id="p47_t86" reading_order_no="85" segment_no="12" tag_type="text">Next, from our stepsize rule ( 55 ) it follows that</text>
<text top="538" left="209" width="101" height="13" font="font34" id="p47_t87" reading_order_no="86" segment_no="13" tag_type="formula">E f ( x K ) − f ( x ∗ ) = O</text>
<text top="534" left="323" width="20" height="10" font="font17" id="p47_t88" reading_order_no="87" segment_no="13" tag_type="formula">GR 0</text>
<text top="546" left="320" width="25" height="13" font="font17" id="p47_t89" reading_order_no="88" segment_no="13" tag_type="formula">K 1 − α α</text>
<text top="534" left="349" width="43" height="16" font="font18" id="p47_t90" reading_order_no="89" segment_no="13" tag_type="formula">+ nbGR 0</text>
<text top="546" left="360" width="33" height="13" font="font17" id="p47_t91" reading_order_no="90" segment_no="13" tag_type="formula">mK 1 − α α</text>
<text top="565" left="108" width="72" height="9" font="font3" id="p47_t92" reading_order_no="91" segment_no="14" tag_type="text">meaning that after</text>
<text top="585" left="218" width="30" height="10" font="font17" id="p47_t93" reading_order_no="92" segment_no="15" tag_type="formula">K = O</text>
<text top="579" left="266" width="20" height="10" font="font17" id="p47_t94" reading_order_no="93" segment_no="15" tag_type="formula">GR 0</text>
<text top="593" left="274" width="5" height="9" font="font17" id="p47_t95" reading_order_no="94" segment_no="15" tag_type="formula">ε</text>
<text top="575" left="296" width="13" height="10" font="font31" id="p47_t96" reading_order_no="95" segment_no="15" tag_type="formula">α α − 1</text>
<text top="586" left="313" width="8" height="9" font="font18" id="p47_t97" reading_order_no="96" segment_no="15" tag_type="formula">+</text>
<text top="579" left="332" width="29" height="10" font="font17" id="p47_t98" reading_order_no="97" segment_no="15" tag_type="formula">nbGR 0</text>
<text top="593" left="340" width="13" height="9" font="font17" id="p47_t99" reading_order_no="98" segment_no="15" tag_type="formula">mε</text>
<text top="575" left="372" width="23" height="10" font="font29" id="p47_t100" reading_order_no="99" segment_no="15" tag_type="formula">α α − 1 !</text>
<text top="610" left="108" width="284" height="12" font="font3" id="p47_t101" reading_order_no="100" segment_no="16" tag_type="text">iterations BTARD-C LIPPED -SGD guarantees E [ f ( x K ) − f ( x ∗ )] ≤ ε .</text>
<text top="636" left="108" width="396" height="9" font="font3" id="p47_t102" reading_order_no="101" segment_no="17" tag_type="text">That is, when the number of attacking Byzantines is unknown the complexity bound becomes</text>
<text top="646" left="107" width="194" height="12" font="font18" id="p47_t103" reading_order_no="102" segment_no="17" tag_type="text">( nb / m ) α / ( α − 1) times worse in comparison to ( 51 ).</text>
<text top="673" left="108" width="20" height="9" font="font1" id="p47_t104" reading_order_no="103" segment_no="18" tag_type="title">F.3.3</text>
<text top="673" left="138" width="234" height="9" font="font1" id="p47_t105" reading_order_no="104" segment_no="18" tag_type="title">Strongly convex case: Restarted-BTARD-Clipped-SGD</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p47_t106" reading_order_no="105" segment_no="19" tag_type="text">In this section, we provide the complete statements and the full proofs of the convergence results for</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p47_t107" reading_order_no="106" segment_no="19" tag_type="text">the restarted version of BTARD-C LIPPED -SGD (R ESTARTED -BTARD-C LIPPED -SGD, Alg. 7 )</text>
<text top="713" left="108" width="245" height="9" font="font3" id="p47_t108" reading_order_no="107" segment_no="19" tag_type="text">when the objective function f is smooth and strongly convex.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p47_t109" reading_order_no="108" segment_no="20" tag_type="text">47</text>
</page>
<page number="48" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="210" height="9" font="font1" id="p48_t1" reading_order_no="0" segment_no="0" tag_type="title">Algorithm 9 R ESTARTED -BTARD-C LIPPED -SGD</text>
<text top="90" left="108" width="397" height="12" font="font1" id="p48_t2" reading_order_no="1" segment_no="1" tag_type="code">Input: x 0 – starting point, r – number of restarts, { γ t } r t =1 – stepsizes for BTARD-C LIPPED -SGD,</text>
<text top="101" left="125" width="322" height="14" font="font19" id="p48_t3" reading_order_no="2" segment_no="1" tag_type="code">{ K t } r t =1 – number of iterations for BTARD-C LIPPED -SGD, { s i,k,t } n,K − 1 ,r</text>
<text top="104" left="416" width="88" height="11" font="font3" id="p48_t4" reading_order_no="3" segment_no="1" tag_type="code">i,k,t =0 , 0 , 1 – seeds for</text>
<text top="116" left="125" width="133" height="13" font="font3" id="p48_t5" reading_order_no="4" segment_no="1" tag_type="code">batches computations, { λ k,t } K t ,r</text>
<text top="119" left="242" width="150" height="11" font="font3" id="p48_t6" reading_order_no="5" segment_no="1" tag_type="code">k,t =0 , 1 – gradient clipping parameters</text>
<text top="131" left="113" width="45" height="12" font="font29" id="p48_t7" reading_order_no="6" segment_no="1" tag_type="code">1: b x 0 = x 0</text>
<text top="144" left="113" width="99" height="9" font="font1" id="p48_t8" reading_order_no="7" segment_no="1" tag_type="code">2: for t = 1 , 2 , . . . , r do</text>
<text top="155" left="113" width="7" height="8" font="font9" id="p48_t9" reading_order_no="8" segment_no="1" tag_type="code">3:</text>
<text top="153" left="140" width="365" height="12" font="font3" id="p48_t10" reading_order_no="9" segment_no="1" tag_type="code">Run BTARD-C LIPPED -SGD (Alg. 8 ) for K t iterations with stepsize γ t , starting point b x t − 1 ,</text>
<text top="165" left="125" width="165" height="12" font="font3" id="p48_t11" reading_order_no="10" segment_no="1" tag_type="code">gradient clipping parameters { λ k,t } K − 1</text>
<text top="164" left="272" width="229" height="14" font="font3" id="p48_t12" reading_order_no="11" segment_no="1" tag_type="code">k =0 , and seeds for batches computations { s i,k,t } n,K − 1</text>
<text top="167" left="477" width="29" height="11" font="font3" id="p48_t13" reading_order_no="12" segment_no="1" tag_type="code">i,k =0 , 0 .</text>
<text top="186" left="125" width="81" height="12" font="font3" id="p48_t14" reading_order_no="13" segment_no="1" tag_type="code">Define b x t as b x t = 1</text>
<text top="193" left="199" width="10" height="7" font="font28" id="p48_t15" reading_order_no="14" segment_no="1" tag_type="code">K t</text>
<text top="180" left="214" width="11" height="11" font="font29" id="p48_t16" reading_order_no="15" segment_no="1" tag_type="code">K t P</text>
<text top="199" left="212" width="15" height="6" font="font28" id="p48_t17" reading_order_no="16" segment_no="1" tag_type="code">k =0</text>
<text top="186" left="228" width="277" height="11" font="font17" id="p48_t18" reading_order_no="17" segment_no="1" tag_type="code">x k,t , where x 0 ,t , x 1 ,t , . . . , x K t ,t are the iterates produced by BTARD-</text>
<text top="206" left="125" width="64" height="9" font="font3" id="p48_t19" reading_order_no="18" segment_no="1" tag_type="code">C LIPPED -SGD.</text>
<text top="215" left="108" width="49" height="12" font="font1" id="p48_t20" reading_order_no="19" segment_no="1" tag_type="code">Output: b x r</text>
<text top="251" left="108" width="393" height="9" font="font3" id="p48_t21" reading_order_no="20" segment_no="2" tag_type="text">We start with the case when the number of attacking Byzantine workers is known at each iteration.</text>
<text top="263" left="108" width="396" height="11" font="font1" id="p48_t22" reading_order_no="21" segment_no="3" tag_type="text">Theorem F.9. Let As. F.1 hold, Q is bounded, f be µ -strongly convex (see Def. F.2 ), x ∗ be some</text>
<text top="274" left="108" width="396" height="11" font="font13" id="p48_t23" reading_order_no="22" segment_no="3" tag_type="text">optimum of f , and ∇ f ( x ∗ ) = 0 . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and the</text>
<text top="287" left="108" width="396" height="9" font="font13" id="p48_t24" reading_order_no="23" segment_no="3" tag_type="text">exact number of attacking Byzantine peers is known to all good peers at each iteration. Next, assume</text>
<text top="298" left="108" width="16" height="9" font="font13" id="p48_t25" reading_order_no="24" segment_no="3" tag_type="text">that</text>
<text top="325" left="108" width="35" height="9" font="font17" id="p48_t26" reading_order_no="25" segment_no="4" tag_type="formula">γ = min</text>
<text top="311" left="145" width="9" height="4" font="font29" id="p48_t27" reading_order_no="26" segment_no="4" tag_type="formula"></text>
<text top="320" left="145" width="9" height="4" font="font29" id="p48_t28" reading_order_no="27" segment_no="4" tag_type="formula"></text>
<text top="338" left="145" width="9" height="4" font="font29" id="p48_t29" reading_order_no="28" segment_no="4" tag_type="formula"></text>
<text top="318" left="177" width="12" height="10" font="font17" id="p48_t30" reading_order_no="29" segment_no="4" tag_type="formula">R 0</text>
<text top="327" left="155" width="8" height="9" font="font19" id="p48_t31" reading_order_no="30" segment_no="4" tag_type="formula">√</text>
<text top="333" left="164" width="39" height="12" font="font18" id="p48_t32" reading_order_no="31" segment_no="4" tag_type="formula">6 · 2 t 2 GK</text>
<text top="331" left="203" width="7" height="15" font="font28" id="p48_t33" reading_order_no="32" segment_no="4" tag_type="formula">1 α t</text>
<text top="325" left="213" width="3" height="9" font="font17" id="p48_t34" reading_order_no="33" segment_no="4" tag_type="formula">,</text>
<text top="318" left="284" width="20" height="10" font="font17" id="p48_t35" reading_order_no="34" segment_no="4" tag_type="formula">mR 0</text>
<text top="336" left="218" width="43" height="12" font="font18" id="p48_t36" reading_order_no="35" segment_no="4" tag_type="formula">12 · 2 t 2 Gn</text>
<text top="331" left="261" width="10" height="4" font="font29" id="p48_t37" reading_order_no="36" segment_no="4" tag_type="formula">q</text>
<text top="339" left="271" width="38" height="9" font="font18" id="p48_t38" reading_order_no="37" segment_no="4" tag_type="formula">10 δ ( C 1 K</text>
<text top="333" left="309" width="16" height="16" font="font28" id="p48_t39" reading_order_no="38" segment_no="4" tag_type="formula">4 − α 2 α t</text>
<text top="339" left="328" width="30" height="9" font="font18" id="p48_t40" reading_order_no="39" segment_no="4" tag_type="formula">+ C 2 K</text>
<text top="334" left="358" width="13" height="15" font="font18" id="p48_t41" reading_order_no="40" segment_no="4" tag_type="formula">2 α t )</text>
<text top="311" left="372" width="9" height="4" font="font29" id="p48_t42" reading_order_no="41" segment_no="4" tag_type="formula"></text>
<text top="320" left="372" width="9" height="4" font="font29" id="p48_t43" reading_order_no="42" segment_no="4" tag_type="formula"></text>
<text top="338" left="372" width="9" height="4" font="font29" id="p48_t44" reading_order_no="43" segment_no="4" tag_type="formula"></text>
<text top="325" left="382" width="3" height="9" font="font17" id="p48_t45" reading_order_no="44" segment_no="4" tag_type="formula">,</text>
<text top="323" left="396" width="19" height="11" font="font18" id="p48_t46" reading_order_no="45" segment_no="4" tag_type="formula">∆ k,t</text>
<text top="325" left="405" width="60" height="11" font="font18" id="p48_t47" reading_order_no="46" segment_no="4" tag_type="formula">max = 2 λ k,t =</text>
<text top="318" left="483" width="13" height="10" font="font18" id="p48_t48" reading_order_no="47" segment_no="4" tag_type="formula">2 λ t</text>
<text top="331" left="469" width="42" height="13" font="font29" id="p48_t49" reading_order_no="48" segment_no="4" tag_type="formula">p n t k − m</text>
<text top="325" left="512" width="3" height="9" font="font17" id="p48_t50" reading_order_no="49" segment_no="4" tag_type="formula">,</text>
<text top="350" left="487" width="17" height="9" font="font3" id="p48_t51" reading_order_no="50" segment_no="4" tag_type="text">(61)</text>
<text top="388" left="122" width="44" height="9" font="font17" id="p48_t52" reading_order_no="51" segment_no="5" tag_type="formula">K t = max</text>
<text top="374" left="167" width="9" height="4" font="font29" id="p48_t53" reading_order_no="52" segment_no="5" tag_type="formula"></text>
<text top="383" left="167" width="9" height="4" font="font29" id="p48_t54" reading_order_no="53" segment_no="5" tag_type="formula"></text>
<text top="401" left="167" width="9" height="4" font="font29" id="p48_t55" reading_order_no="54" segment_no="5" tag_type="formula"></text>
<text top="381" left="185" width="5" height="9" font="font18" id="p48_t56" reading_order_no="55" segment_no="5" tag_type="formula">2</text>
<text top="372" left="190" width="8" height="9" font="font19" id="p48_t57" reading_order_no="56" segment_no="5" tag_type="formula">√</text>
<text top="378" left="199" width="29" height="12" font="font18" id="p48_t58" reading_order_no="57" segment_no="5" tag_type="formula">6 G · 2 t 2</text>
<text top="395" left="199" width="17" height="9" font="font17" id="p48_t59" reading_order_no="58" segment_no="5" tag_type="formula">µR 0</text>
<text top="374" left="231" width="22" height="10" font="font29" id="p48_t60" reading_order_no="59" segment_no="5" tag_type="formula">! α α − 1</text>
<text top="388" left="257" width="3" height="9" font="font17" id="p48_t61" reading_order_no="60" segment_no="5" tag_type="formula">,</text>
<text top="378" left="270" width="102" height="13" font="font18" id="p48_t62" reading_order_no="61" segment_no="5" tag_type="formula">24 Gn p 10 δ ( C 1 + C 2 )2 t 2</text>
<text top="395" left="309" width="26" height="9" font="font17" id="p48_t63" reading_order_no="62" segment_no="5" tag_type="formula">mµR 0</text>
<text top="374" left="375" width="33" height="10" font="font29" id="p48_t64" reading_order_no="63" segment_no="5" tag_type="formula">! α α − 1 </text>
<text top="383" left="399" width="9" height="4" font="font29" id="p48_t65" reading_order_no="64" segment_no="5" tag_type="formula"></text>
<text top="401" left="399" width="9" height="4" font="font29" id="p48_t66" reading_order_no="65" segment_no="5" tag_type="formula"></text>
<text top="388" left="409" width="3" height="9" font="font17" id="p48_t67" reading_order_no="66" segment_no="5" tag_type="formula">,</text>
<text top="388" left="424" width="38" height="9" font="font17" id="p48_t68" reading_order_no="67" segment_no="5" tag_type="formula">λ t = GK</text>
<text top="383" left="462" width="12" height="15" font="font17" id="p48_t69" reading_order_no="68" segment_no="5" tag_type="formula">1 α t ,</text>
<text top="388" left="487" width="17" height="9" font="font3" id="p48_t70" reading_order_no="69" segment_no="5" tag_type="text">(62)</text>
<text top="426" left="261" width="16" height="9" font="font17" id="p48_t71" reading_order_no="70" segment_no="6" tag_type="formula">r =</text>
<text top="426" left="285" width="17" height="10" font="font18" id="p48_t72" reading_order_no="71" segment_no="6" tag_type="formula">log 2</text>
<text top="418" left="306" width="17" height="12" font="font17" id="p48_t73" reading_order_no="72" segment_no="6" tag_type="formula">µR 2 0</text>
<text top="433" left="312" width="5" height="9" font="font17" id="p48_t74" reading_order_no="73" segment_no="6" tag_type="formula">ε</text>
<text top="425" left="333" width="18" height="10" font="font19" id="p48_t75" reading_order_no="74" segment_no="6" tag_type="formula">− 1 ,</text>
<text top="426" left="487" width="17" height="9" font="font3" id="p48_t76" reading_order_no="75" segment_no="6" tag_type="text">(63)</text>
<text top="446" left="108" width="138" height="11" font="font13" id="p48_t77" reading_order_no="76" segment_no="7" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k,t</text>
<text top="448" left="236" width="269" height="10" font="font13" id="p48_t78" reading_order_no="77" segment_no="7" tag_type="text">max is the parameter for verification 3 at iteration k of BTARD-</text>
<text top="457" left="108" width="78" height="11" font="font3" id="p48_t79" reading_order_no="78" segment_no="7" tag_type="text">C LIPPED -SGD , n t</text>
<text top="459" left="183" width="321" height="11" font="font13" id="p48_t80" reading_order_no="79" segment_no="7" tag_type="text">k is the total number of workers at iteration k of t -th restart. Then, we have<a href="deeplearning_paper1.html#39">8</a></text>
<text top="468" left="108" width="396" height="12" font="font34" id="p48_t81" reading_order_no="80" segment_no="7" tag_type="text">E [ f ( b x r ) − f ( x ∗ )] ≤ ε after r restarts of BTARD-C LIPPED -SGD and the total number of executed<a href="deeplearning_paper1.html#39">) </a>for</text>
<text top="481" left="108" width="162" height="9" font="font13" id="p48_t82" reading_order_no="81" segment_no="7" tag_type="text">iterations of BTARD-C LIPPED -SGD is</text>
<text top="499" left="189" width="4" height="6" font="font28" id="p48_t83" reading_order_no="82" segment_no="8" tag_type="formula">r</text>
<text top="507" left="183" width="14" height="4" font="font29" id="p48_t84" reading_order_no="83" segment_no="8" tag_type="formula">X</text>
<text top="523" left="184" width="13" height="6" font="font28" id="p48_t85" reading_order_no="84" segment_no="8" tag_type="formula">t =1</text>
<text top="509" left="200" width="33" height="10" font="font17" id="p48_t86" reading_order_no="85" segment_no="8" tag_type="formula">K t = O</text>
<text top="496" left="235" width="9" height="4" font="font29" id="p48_t87" reading_order_no="86" segment_no="8" tag_type="formula"></text>
<text top="514" left="235" width="9" height="4" font="font29" id="p48_t88" reading_order_no="87" segment_no="8" tag_type="formula"></text>
<text top="501" left="252" width="12" height="11" font="font17" id="p48_t89" reading_order_no="88" segment_no="8" tag_type="formula">G 2</text>
<text top="517" left="253" width="11" height="9" font="font17" id="p48_t90" reading_order_no="89" segment_no="8" tag_type="formula">µε</text>
<text top="498" left="274" width="24" height="10" font="font30" id="p48_t91" reading_order_no="90" segment_no="8" tag_type="formula">α 2( α − 1 )</text>
<text top="510" left="300" width="8" height="9" font="font18" id="p48_t92" reading_order_no="91" segment_no="8" tag_type="formula">+</text>
<text top="503" left="319" width="6" height="9" font="font17" id="p48_t93" reading_order_no="92" segment_no="8" tag_type="formula">n</text>
<text top="494" left="325" width="8" height="9" font="font19" id="p48_t94" reading_order_no="93" segment_no="8" tag_type="formula">√</text>
<text top="503" left="334" width="4" height="9" font="font17" id="p48_t95" reading_order_no="94" segment_no="8" tag_type="formula">δ</text>
<text top="517" left="325" width="9" height="9" font="font17" id="p48_t96" reading_order_no="95" segment_no="8" tag_type="formula">m</text>
<text top="495" left="340" width="22" height="10" font="font29" id="p48_t97" reading_order_no="96" segment_no="8" tag_type="formula">! α α − 1</text>
<text top="501" left="374" width="12" height="11" font="font17" id="p48_t98" reading_order_no="97" segment_no="8" tag_type="formula">G 2</text>
<text top="517" left="375" width="11" height="9" font="font17" id="p48_t99" reading_order_no="98" segment_no="8" tag_type="formula">µε</text>
<text top="498" left="396" width="22" height="10" font="font31" id="p48_t100" reading_order_no="99" segment_no="8" tag_type="formula">α 2( α − 1)</text>
<text top="496" left="420" width="9" height="4" font="font29" id="p48_t101" reading_order_no="100" segment_no="8" tag_type="formula"></text>
<text top="514" left="420" width="9" height="4" font="font29" id="p48_t102" reading_order_no="101" segment_no="8" tag_type="formula"></text>
<text top="510" left="487" width="17" height="9" font="font3" id="p48_t103" reading_order_no="102" segment_no="8" tag_type="text">(64)</text>
<text top="545" left="108" width="254" height="9" font="font13" id="p48_t104" reading_order_no="103" segment_no="9" tag_type="text">Proof. Theorem F.7 implies that BTARD-C LIPPED -SGD with</text>
<text top="574" left="188" width="36" height="9" font="font17" id="p48_t105" reading_order_no="104" segment_no="10" tag_type="formula">γ = min</text>
<text top="560" left="225" width="9" height="4" font="font29" id="p48_t106" reading_order_no="105" segment_no="10" tag_type="formula"></text>
<text top="569" left="225" width="9" height="4" font="font29" id="p48_t107" reading_order_no="106" segment_no="10" tag_type="formula"></text>
<text top="587" left="225" width="9" height="4" font="font29" id="p48_t108" reading_order_no="107" segment_no="10" tag_type="formula"></text>
<text top="568" left="248" width="12" height="9" font="font17" id="p48_t109" reading_order_no="108" segment_no="10" tag_type="formula">R 0</text>
<text top="574" left="236" width="8" height="9" font="font19" id="p48_t110" reading_order_no="109" segment_no="10" tag_type="formula">√</text>
<text top="580" left="244" width="28" height="12" font="font18" id="p48_t111" reading_order_no="110" segment_no="10" tag_type="formula">6 GK 1 α</text>
<text top="574" left="274" width="3" height="9" font="font17" id="p48_t112" reading_order_no="111" segment_no="10" tag_type="formula">,</text>
<text top="568" left="337" width="20" height="9" font="font17" id="p48_t113" reading_order_no="112" segment_no="10" tag_type="formula">mR 0</text>
<text top="587" left="280" width="24" height="9" font="font18" id="p48_t114" reading_order_no="113" segment_no="10" tag_type="formula">12 Gn</text>
<text top="581" left="304" width="10" height="4" font="font29" id="p48_t115" reading_order_no="114" segment_no="10" tag_type="formula">q</text>
<text top="583" left="314" width="100" height="13" font="font18" id="p48_t116" reading_order_no="115" segment_no="10" tag_type="formula">10 δ ( C 1 K 4 − α 2 α + C 2 K 2 α )</text>
<text top="560" left="415" width="9" height="4" font="font29" id="p48_t117" reading_order_no="116" segment_no="10" tag_type="formula"></text>
<text top="569" left="415" width="9" height="4" font="font29" id="p48_t118" reading_order_no="117" segment_no="10" tag_type="formula"></text>
<text top="587" left="415" width="9" height="4" font="font29" id="p48_t119" reading_order_no="118" segment_no="10" tag_type="formula"></text>
<text top="604" left="108" width="43" height="9" font="font3" id="p48_t120" reading_order_no="119" segment_no="11" tag_type="text">guarantees</text>
<text top="614" left="251" width="107" height="18" font="font34" id="p48_t121" reading_order_no="120" segment_no="12" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ R 2 0</text>
<text top="629" left="345" width="14" height="9" font="font17" id="p48_t122" reading_order_no="121" segment_no="12" tag_type="formula">γK</text>
<text top="642" left="108" width="232" height="9" font="font3" id="p48_t123" reading_order_no="122" segment_no="13" tag_type="text">after K iterations. Therefore, after the first restart we have</text>
<text top="662" left="233" width="82" height="13" font="font34" id="p48_t124" reading_order_no="123" segment_no="14" tag_type="formula">E [ f ( b x 1 ) − f ( x ∗ )] ≤</text>
<text top="656" left="324" width="12" height="12" font="font17" id="p48_t125" reading_order_no="124" segment_no="14" tag_type="formula">R 2 0</text>
<text top="671" left="319" width="22" height="10" font="font17" id="p48_t126" reading_order_no="125" segment_no="14" tag_type="formula">γ 1 K 1</text>
<text top="656" left="346" width="29" height="17" font="font19" id="p48_t127" reading_order_no="126" segment_no="14" tag_type="formula">≤ µR 2 0</text>
<text top="671" left="364" width="5" height="9" font="font18" id="p48_t128" reading_order_no="127" segment_no="14" tag_type="formula">4</text>
<text top="664" left="377" width="3" height="9" font="font17" id="p48_t129" reading_order_no="128" segment_no="14" tag_type="formula">.</text>
<text top="685" left="108" width="224" height="11" font="font3" id="p48_t130" reading_order_no="129" segment_no="15" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="704" left="187" width="6" height="9" font="font17" id="p48_t131" reading_order_no="130" segment_no="16" tag_type="formula">µ</text>
<text top="703" left="188" width="234" height="24" font="font18" id="p48_t132" reading_order_no="131" segment_no="16" tag_type="formula">2 k b x 1 − x ∗ k 2 ≤ f ( b x 1 ) − f ( x ∗ ) = ⇒ E [ k b x 1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="711" left="414" width="12" height="16" font="font18" id="p48_t133" reading_order_no="132" segment_no="16" tag_type="formula">2 .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p48_t134" reading_order_no="133" segment_no="17" tag_type="text">48</text>
</page>
<page number="49" position="absolute" top="0" left="0" height="792" width="612">
<text top="72" left="108" width="216" height="15" font="font3" id="p49_t1" reading_order_no="0" segment_no="0" tag_type="text">Next, assume that we have E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="72" left="310" width="196" height="16" font="font3" id="p49_t2" reading_order_no="1" segment_no="0" tag_type="text">2 t +1 , E [ k b x t − x ∗ k 2 ] ≤ R 2 0 2 t for some t ≤ r − 1 .</text>
<text top="87" left="108" width="125" height="9" font="font3" id="p49_t3" reading_order_no="2" segment_no="0" tag_type="text">Then, Theorem F.7 implies that</text>
<text top="101" left="224" width="159" height="19" font="font34" id="p49_t4" reading_order_no="3" segment_no="1" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ ) | x t ] ≤ k b x t − x ∗ k 2</text>
<text top="117" left="350" width="20" height="9" font="font17" id="p49_t5" reading_order_no="4" segment_no="1" tag_type="formula">γ t K t</text>
<text top="110" left="385" width="3" height="9" font="font17" id="p49_t6" reading_order_no="5" segment_no="1" tag_type="formula">.</text>
<text top="131" left="108" width="304" height="9" font="font3" id="p49_t7" reading_order_no="6" segment_no="2" tag_type="text">Taking the full expectation from the both sides of previous inequality we get</text>
<text top="145" left="187" width="155" height="19" font="font34" id="p49_t8" reading_order_no="7" segment_no="3" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ )] ≤ E [ k b x t − x ∗ k 2 ]</text>
<text top="161" left="302" width="20" height="9" font="font17" id="p49_t9" reading_order_no="8" segment_no="3" tag_type="formula">γ t K t</text>
<text top="153" left="345" width="8" height="9" font="font19" id="p49_t10" reading_order_no="9" segment_no="3" tag_type="formula">≤</text>
<text top="145" left="366" width="11" height="12" font="font17" id="p49_t11" reading_order_no="10" segment_no="3" tag_type="formula">R 2 0</text>
<text top="160" left="357" width="29" height="10" font="font18" id="p49_t12" reading_order_no="11" segment_no="3" tag_type="formula">2 t γ t K t</text>
<text top="145" left="390" width="30" height="17" font="font19" id="p49_t13" reading_order_no="12" segment_no="3" tag_type="formula">≤ µR 2 0</text>
<text top="154" left="402" width="23" height="16" font="font18" id="p49_t14" reading_order_no="13" segment_no="3" tag_type="formula">2 t +2 .</text>
<text top="174" left="108" width="224" height="11" font="font3" id="p49_t15" reading_order_no="14" segment_no="4" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="192" left="170" width="6" height="9" font="font17" id="p49_t16" reading_order_no="15" segment_no="5" tag_type="formula">µ</text>
<text top="190" left="171" width="264" height="24" font="font18" id="p49_t17" reading_order_no="16" segment_no="5" tag_type="formula">2 k b x t +1 − x ∗ k 2 ≤ f ( b x t +1 ) − f ( x ∗ ) = ⇒ E [ k b x t +1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="199" left="420" width="23" height="15" font="font18" id="p49_t18" reading_order_no="17" segment_no="5" tag_type="formula">2 t +1 .</text>
<text top="218" left="108" width="281" height="9" font="font3" id="p49_t19" reading_order_no="18" segment_no="6" tag_type="text">Therefore, by mathematical induction we have that for all t = 1 , . . . , r</text>
<text top="232" left="199" width="104" height="19" font="font34" id="p49_t20" reading_order_no="19" segment_no="7" tag_type="formula">E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="240" left="285" width="23" height="16" font="font18" id="p49_t21" reading_order_no="20" segment_no="7" tag_type="formula">2 t +1 ,</text>
<text top="238" left="319" width="58" height="13" font="font34" id="p49_t22" reading_order_no="21" segment_no="7" tag_type="formula">E k b x t − x ∗ k 2</text>
<text top="232" left="385" width="23" height="17" font="font19" id="p49_t23" reading_order_no="22" segment_no="7" tag_type="formula">≤ R 2 0</text>
<text top="240" left="398" width="15" height="16" font="font18" id="p49_t24" reading_order_no="23" segment_no="7" tag_type="formula">2 t .</text>
<text top="260" left="108" width="85" height="15" font="font3" id="p49_t25" reading_order_no="24" segment_no="8" tag_type="text">Then, after r = l log 2</text>
<text top="260" left="196" width="14" height="16" font="font28" id="p49_t26" reading_order_no="25" segment_no="8" tag_type="text">µR 2 0 ε</text>
<text top="260" left="212" width="293" height="15" font="font29" id="p49_t27" reading_order_no="26" segment_no="8" tag_type="text">m − 1 restarts of BTARD-C LIPPED -SGD we have E [ f ( b x r ) − f ( x ∗ )] ≤ ε .</text>
<text top="279" left="108" width="282" height="9" font="font3" id="p49_t28" reading_order_no="27" segment_no="8" tag_type="text">The total number of iterations executed by BTARD-C LIPPED -SGD is</text>
<text top="296" left="123" width="4" height="6" font="font28" id="p49_t29" reading_order_no="28" segment_no="9" tag_type="formula">r</text>
<text top="304" left="118" width="14" height="4" font="font29" id="p49_t30" reading_order_no="29" segment_no="9" tag_type="formula">X</text>
<text top="320" left="119" width="13" height="6" font="font28" id="p49_t31" reading_order_no="30" segment_no="9" tag_type="formula">t =1</text>
<text top="307" left="134" width="11" height="9" font="font17" id="p49_t32" reading_order_no="31" segment_no="9" tag_type="formula">K t</text>
<text top="307" left="156" width="8" height="9" font="font18" id="p49_t33" reading_order_no="32" segment_no="9" tag_type="formula">=</text>
<text top="306" left="174" width="8" height="9" font="font19" id="p49_t34" reading_order_no="33" segment_no="9" tag_type="formula">O</text>
<text top="293" left="184" width="9" height="4" font="font29" id="p49_t35" reading_order_no="34" segment_no="9" tag_type="formula"></text>
<text top="311" left="184" width="9" height="4" font="font29" id="p49_t36" reading_order_no="35" segment_no="9" tag_type="formula"></text>
<text top="296" left="197" width="4" height="6" font="font28" id="p49_t37" reading_order_no="36" segment_no="9" tag_type="formula">r</text>
<text top="304" left="192" width="14" height="4" font="font29" id="p49_t38" reading_order_no="37" segment_no="9" tag_type="formula">X</text>
<text top="320" left="193" width="13" height="6" font="font28" id="p49_t39" reading_order_no="38" segment_no="9" tag_type="formula">t =1</text>
<text top="307" left="208" width="19" height="9" font="font18" id="p49_t40" reading_order_no="39" segment_no="9" tag_type="formula">max</text>
<text top="293" left="229" width="9" height="4" font="font29" id="p49_t41" reading_order_no="40" segment_no="9" tag_type="formula"></text>
<text top="302" left="229" width="9" height="4" font="font29" id="p49_t42" reading_order_no="41" segment_no="9" tag_type="formula"></text>
<text top="320" left="229" width="9" height="4" font="font29" id="p49_t43" reading_order_no="42" segment_no="9" tag_type="formula"></text>
<text top="297" left="246" width="25" height="12" font="font17" id="p49_t44" reading_order_no="43" segment_no="9" tag_type="formula">G · 2 t 2</text>
<text top="314" left="251" width="17" height="9" font="font17" id="p49_t45" reading_order_no="44" segment_no="9" tag_type="formula">µR 0</text>
<text top="292" left="274" width="22" height="10" font="font29" id="p49_t46" reading_order_no="45" segment_no="9" tag_type="formula">! α α − 1</text>
<text top="307" left="300" width="3" height="9" font="font17" id="p49_t47" reading_order_no="46" segment_no="9" tag_type="formula">,</text>
<text top="300" left="313" width="14" height="9" font="font17" id="p49_t48" reading_order_no="47" segment_no="9" tag_type="formula">Gn</text>
<text top="291" left="327" width="8" height="9" font="font19" id="p49_t49" reading_order_no="48" segment_no="9" tag_type="formula">√</text>
<text top="297" left="335" width="15" height="12" font="font17" id="p49_t50" reading_order_no="49" segment_no="9" tag_type="formula">δ 2 t 2<a href="deeplearning_paper1.html#42">F.7</a></text>
<text top="314" left="319" width="26" height="9" font="font17" id="p49_t51" reading_order_no="50" segment_no="9" tag_type="formula">mµR 0</text>
<text top="292" left="353" width="33" height="10" font="font29" id="p49_t52" reading_order_no="51" segment_no="9" tag_type="formula">! α α − 1 </text>
<text top="302" left="377" width="9" height="4" font="font29" id="p49_t53" reading_order_no="52" segment_no="9" tag_type="formula"></text>
<text top="320" left="377" width="9" height="4" font="font29" id="p49_t54" reading_order_no="53" segment_no="9" tag_type="formula"></text>
<text top="293" left="386" width="9" height="4" font="font29" id="p49_t55" reading_order_no="54" segment_no="9" tag_type="formula"></text>
<text top="311" left="386" width="9" height="4" font="font29" id="p49_t56" reading_order_no="55" segment_no="9" tag_type="formula"></text>
<text top="347" left="156" width="8" height="9" font="font18" id="p49_t57" reading_order_no="56" segment_no="9" tag_type="formula">=</text>
<text top="346" left="174" width="8" height="9" font="font19" id="p49_t58" reading_order_no="57" segment_no="9" tag_type="formula">O</text>
<text top="333" left="184" width="9" height="4" font="font29" id="p49_t59" reading_order_no="58" segment_no="9" tag_type="formula"></text>
<text top="347" left="184" width="27" height="9" font="font29" id="p49_t60" reading_order_no="59" segment_no="9" tag_type="formula"> max</text>
<text top="333" left="212" width="9" height="4" font="font29" id="p49_t61" reading_order_no="60" segment_no="9" tag_type="formula"></text>
<text top="342" left="212" width="9" height="4" font="font29" id="p49_t62" reading_order_no="61" segment_no="9" tag_type="formula"></text>
<text top="360" left="212" width="9" height="4" font="font29" id="p49_t63" reading_order_no="62" segment_no="9" tag_type="formula"></text>
<text top="340" left="235" width="8" height="9" font="font17" id="p49_t64" reading_order_no="63" segment_no="9" tag_type="formula">G</text>
<text top="353" left="230" width="17" height="10" font="font17" id="p49_t65" reading_order_no="64" segment_no="9" tag_type="formula">µR 0</text>
<text top="335" left="258" width="13" height="10" font="font31" id="p49_t66" reading_order_no="65" segment_no="9" tag_type="formula">α α − 1</text>
<text top="346" left="275" width="10" height="10" font="font19" id="p49_t67" reading_order_no="66" segment_no="9" tag_type="formula">· 2</text>
<text top="342" left="286" width="27" height="14" font="font17" id="p49_t68" reading_order_no="67" segment_no="9" tag_type="formula">rα 2( α − 1) ,</text>
<text top="340" left="323" width="14" height="9" font="font17" id="p49_t69" reading_order_no="68" segment_no="9" tag_type="formula">Gn</text>
<text top="331" left="337" width="8" height="9" font="font19" id="p49_t70" reading_order_no="69" segment_no="9" tag_type="formula">√</text>
<text top="340" left="345" width="4" height="9" font="font17" id="p49_t71" reading_order_no="70" segment_no="9" tag_type="formula">δ</text>
<text top="353" left="323" width="27" height="10" font="font17" id="p49_t72" reading_order_no="71" segment_no="9" tag_type="formula">mµR 0</text>
<text top="332" left="351" width="22" height="10" font="font29" id="p49_t73" reading_order_no="72" segment_no="9" tag_type="formula">! α α − 1</text>
<text top="346" left="378" width="10" height="10" font="font19" id="p49_t74" reading_order_no="73" segment_no="9" tag_type="formula">· 2</text>
<text top="342" left="389" width="22" height="10" font="font31" id="p49_t75" reading_order_no="74" segment_no="9" tag_type="formula">rα 2( α − 1)</text>
<text top="333" left="413" width="9" height="4" font="font29" id="p49_t76" reading_order_no="75" segment_no="9" tag_type="formula"></text>
<text top="342" left="413" width="9" height="4" font="font29" id="p49_t77" reading_order_no="76" segment_no="9" tag_type="formula"></text>
<text top="360" left="413" width="9" height="4" font="font29" id="p49_t78" reading_order_no="77" segment_no="9" tag_type="formula"></text>
<text top="333" left="422" width="9" height="4" font="font29" id="p49_t79" reading_order_no="78" segment_no="9" tag_type="formula"></text>
<text top="351" left="422" width="9" height="4" font="font29" id="p49_t80" reading_order_no="79" segment_no="9" tag_type="formula"></text>
<text top="386" left="156" width="8" height="9" font="font18" id="p49_t81" reading_order_no="80" segment_no="9" tag_type="formula">=</text>
<text top="386" left="174" width="8" height="9" font="font19" id="p49_t82" reading_order_no="81" segment_no="9" tag_type="formula">O</text>
<text top="373" left="184" width="9" height="4" font="font29" id="p49_t83" reading_order_no="82" segment_no="9" tag_type="formula"></text>
<text top="386" left="184" width="27" height="9" font="font29" id="p49_t84" reading_order_no="83" segment_no="9" tag_type="formula"> max</text>
<text top="372" left="212" width="9" height="4" font="font29" id="p49_t85" reading_order_no="84" segment_no="9" tag_type="formula"></text>
<text top="381" left="212" width="9" height="4" font="font29" id="p49_t86" reading_order_no="85" segment_no="9" tag_type="formula"></text>
<text top="399" left="212" width="9" height="4" font="font29" id="p49_t87" reading_order_no="86" segment_no="9" tag_type="formula"></text>
<text top="380" left="235" width="8" height="9" font="font17" id="p49_t88" reading_order_no="87" segment_no="9" tag_type="formula">G</text>
<text top="393" left="230" width="17" height="10" font="font17" id="p49_t89" reading_order_no="88" segment_no="9" tag_type="formula">µR 0</text>
<text top="375" left="258" width="13" height="10" font="font31" id="p49_t90" reading_order_no="89" segment_no="9" tag_type="formula">α α − 1</text>
<text top="386" left="275" width="3" height="9" font="font19" id="p49_t91" reading_order_no="90" segment_no="9" tag_type="formula">·</text>
<text top="378" left="288" width="18" height="12" font="font17" id="p49_t92" reading_order_no="91" segment_no="9" tag_type="formula">µR 2 0</text>
<text top="393" left="295" width="5" height="9" font="font17" id="p49_t93" reading_order_no="92" segment_no="9" tag_type="formula">ε</text>
<text top="375" left="316" width="22" height="10" font="font31" id="p49_t94" reading_order_no="93" segment_no="9" tag_type="formula">α 2( α − 1)</text>
<text top="386" left="342" width="3" height="9" font="font17" id="p49_t95" reading_order_no="94" segment_no="9" tag_type="formula">,</text>
<text top="380" left="355" width="14" height="9" font="font17" id="p49_t96" reading_order_no="95" segment_no="9" tag_type="formula">Gn</text>
<text top="371" left="369" width="8" height="9" font="font19" id="p49_t97" reading_order_no="96" segment_no="9" tag_type="formula">√</text>
<text top="380" left="377" width="4" height="9" font="font17" id="p49_t98" reading_order_no="97" segment_no="9" tag_type="formula">δ</text>
<text top="393" left="355" width="27" height="10" font="font17" id="p49_t99" reading_order_no="98" segment_no="9" tag_type="formula">mµR 0</text>
<text top="372" left="383" width="22" height="10" font="font29" id="p49_t100" reading_order_no="99" segment_no="9" tag_type="formula">! α α − 1</text>
<text top="386" left="410" width="3" height="9" font="font19" id="p49_t101" reading_order_no="100" segment_no="9" tag_type="formula">·</text>
<text top="378" left="423" width="18" height="12" font="font17" id="p49_t102" reading_order_no="101" segment_no="9" tag_type="formula">µR 2 0</text>
<text top="393" left="430" width="5" height="9" font="font17" id="p49_t103" reading_order_no="102" segment_no="9" tag_type="formula">ε</text>
<text top="375" left="451" width="22" height="10" font="font31" id="p49_t104" reading_order_no="103" segment_no="9" tag_type="formula">α 2( α − 1)</text>
<text top="372" left="475" width="9" height="4" font="font29" id="p49_t105" reading_order_no="104" segment_no="9" tag_type="formula"></text>
<text top="381" left="475" width="9" height="4" font="font29" id="p49_t106" reading_order_no="105" segment_no="9" tag_type="formula"></text>
<text top="399" left="475" width="9" height="4" font="font29" id="p49_t107" reading_order_no="106" segment_no="9" tag_type="formula"></text>
<text top="373" left="484" width="9" height="4" font="font29" id="p49_t108" reading_order_no="107" segment_no="9" tag_type="formula"></text>
<text top="391" left="484" width="9" height="4" font="font29" id="p49_t109" reading_order_no="108" segment_no="9" tag_type="formula"></text>
<text top="426" left="156" width="8" height="9" font="font18" id="p49_t110" reading_order_no="109" segment_no="9" tag_type="formula">=</text>
<text top="426" left="174" width="8" height="9" font="font19" id="p49_t111" reading_order_no="110" segment_no="9" tag_type="formula">O</text>
<text top="413" left="184" width="9" height="4" font="font29" id="p49_t112" reading_order_no="111" segment_no="9" tag_type="formula"></text>
<text top="431" left="184" width="9" height="4" font="font29" id="p49_t113" reading_order_no="112" segment_no="9" tag_type="formula"></text>
<text top="418" left="201" width="12" height="10" font="font17" id="p49_t114" reading_order_no="113" segment_no="9" tag_type="formula">G 2</text>
<text top="433" left="202" width="11" height="9" font="font17" id="p49_t115" reading_order_no="114" segment_no="9" tag_type="formula">µε</text>
<text top="415" left="223" width="23" height="10" font="font30" id="p49_t116" reading_order_no="115" segment_no="9" tag_type="formula">α 2( α − 1 )</text>
<text top="426" left="249" width="8" height="9" font="font18" id="p49_t117" reading_order_no="116" segment_no="9" tag_type="formula">+</text>
<text top="419" left="268" width="6" height="9" font="font17" id="p49_t118" reading_order_no="117" segment_no="9" tag_type="formula">n</text>
<text top="410" left="274" width="8" height="9" font="font19" id="p49_t119" reading_order_no="118" segment_no="9" tag_type="formula">√</text>
<text top="419" left="283" width="4" height="9" font="font17" id="p49_t120" reading_order_no="119" segment_no="9" tag_type="formula">δ</text>
<text top="433" left="273" width="9" height="9" font="font17" id="p49_t121" reading_order_no="120" segment_no="9" tag_type="formula">m</text>
<text top="412" left="289" width="22" height="10" font="font29" id="p49_t122" reading_order_no="121" segment_no="9" tag_type="formula">! α α − 1</text>
<text top="418" left="323" width="12" height="10" font="font17" id="p49_t123" reading_order_no="122" segment_no="9" tag_type="formula">G 2</text>
<text top="433" left="324" width="11" height="9" font="font17" id="p49_t124" reading_order_no="123" segment_no="9" tag_type="formula">µε</text>
<text top="415" left="345" width="22" height="10" font="font31" id="p49_t125" reading_order_no="124" segment_no="9" tag_type="formula">α 2( α − 1)</text>
<text top="413" left="369" width="9" height="4" font="font29" id="p49_t126" reading_order_no="125" segment_no="9" tag_type="formula"></text>
<text top="426" left="369" width="13" height="9" font="font29" id="p49_t127" reading_order_no="126" segment_no="9" tag_type="formula"> .</text>
<text top="477" left="108" width="396" height="9" font="font3" id="p49_t128" reading_order_no="127" segment_no="10" tag_type="text">In the strongly convex case, similar observations hold as in the convex case. Next, we derive the</text>
<text top="489" left="108" width="278" height="10" font="font3" id="p49_t129" reading_order_no="128" segment_no="10" tag_type="text">result without assuming that b b k is known to all peers at each iteration.</text>
<text top="502" left="108" width="396" height="11" font="font1" id="p49_t130" reading_order_no="129" segment_no="11" tag_type="text">Theorem F.10. Let As. F.1 hold, Q is bounded, f be µ -strongly convex (see Def. F.2 ), x ∗ be some</text>
<text top="513" left="108" width="396" height="11" font="font13" id="p49_t131" reading_order_no="130" segment_no="11" tag_type="text">optimum of f , and ∇ f ( x ∗ ) = 0 . Moreover, assume that b ≤ 0 . 15( n − m ) , m ≤ ( n − 2 b ) / 2 , and δ = 0</text>
<text top="526" left="108" width="309" height="9" font="font13" id="p49_t132" reading_order_no="131" segment_no="11" tag_type="text">is used to compute clipping parameter τ l for CenteredClip . Next, assume that</text>
<text top="551" left="127" width="36" height="9" font="font17" id="p49_t133" reading_order_no="132" segment_no="12" tag_type="formula">γ = min</text>
<text top="540" left="165" width="8" height="4" font="font29" id="p49_t134" reading_order_no="133" segment_no="12" tag_type="formula">(</text>
<text top="544" left="196" width="11" height="10" font="font17" id="p49_t135" reading_order_no="134" segment_no="12" tag_type="formula">R 0</text>
<text top="553" left="174" width="8" height="9" font="font19" id="p49_t136" reading_order_no="135" segment_no="12" tag_type="formula">√</text>
<text top="559" left="182" width="40" height="12" font="font18" id="p49_t137" reading_order_no="136" segment_no="12" tag_type="formula">6 · 2 t 2 GK</text>
<text top="557" left="222" width="7" height="15" font="font28" id="p49_t138" reading_order_no="137" segment_no="12" tag_type="formula">1 α t</text>
<text top="551" left="231" width="3" height="9" font="font17" id="p49_t139" reading_order_no="138" segment_no="12" tag_type="formula">,</text>
<text top="544" left="270" width="21" height="10" font="font17" id="p49_t140" reading_order_no="139" segment_no="12" tag_type="formula">mR 0</text>
<text top="559" left="237" width="46" height="12" font="font18" id="p49_t141" reading_order_no="140" segment_no="12" tag_type="formula">12 · 2 t 2 Gnb</text>
<text top="553" left="283" width="8" height="9" font="font19" id="p49_t142" reading_order_no="141" segment_no="12" tag_type="formula">√</text>
<text top="562" left="292" width="24" height="9" font="font18" id="p49_t143" reading_order_no="142" segment_no="12" tag_type="formula">2 C 2 K</text>
<text top="557" left="317" width="7" height="15" font="font28" id="p49_t144" reading_order_no="143" segment_no="12" tag_type="formula">1 α t</text>
<text top="540" left="326" width="8" height="4" font="font29" id="p49_t145" reading_order_no="144" segment_no="12" tag_type="formula">)</text>
<text top="551" left="336" width="3" height="9" font="font17" id="p49_t146" reading_order_no="145" segment_no="12" tag_type="formula">,</text>
<text top="549" left="350" width="18" height="11" font="font18" id="p49_t147" reading_order_no="146" segment_no="12" tag_type="formula">∆ k,t</text>
<text top="551" left="358" width="61" height="11" font="font18" id="p49_t148" reading_order_no="147" segment_no="12" tag_type="formula">max = 2 λ k,t =</text>
<text top="544" left="436" width="14" height="10" font="font18" id="p49_t149" reading_order_no="148" segment_no="12" tag_type="formula">2 λ t</text>
<text top="557" left="422" width="42" height="13" font="font29" id="p49_t150" reading_order_no="149" segment_no="12" tag_type="formula">p n t k − m</text>
<text top="551" left="465" width="3" height="9" font="font17" id="p49_t151" reading_order_no="150" segment_no="12" tag_type="formula">,</text>
<text top="551" left="487" width="17" height="9" font="font3" id="p49_t152" reading_order_no="151" segment_no="12" tag_type="text">(65)</text>
<text top="591" left="150" width="43" height="10" font="font17" id="p49_t153" reading_order_no="152" segment_no="13" tag_type="formula">K t = max</text>
<text top="577" left="195" width="9" height="4" font="font29" id="p49_t154" reading_order_no="153" segment_no="13" tag_type="formula"></text>
<text top="586" left="195" width="9" height="4" font="font29" id="p49_t155" reading_order_no="154" segment_no="13" tag_type="formula"></text>
<text top="604" left="195" width="9" height="4" font="font29" id="p49_t156" reading_order_no="155" segment_no="13" tag_type="formula"></text>
<text top="584" left="213" width="5" height="9" font="font18" id="p49_t157" reading_order_no="156" segment_no="13" tag_type="formula">2</text>
<text top="576" left="218" width="8" height="9" font="font19" id="p49_t158" reading_order_no="157" segment_no="13" tag_type="formula">√</text>
<text top="582" left="226" width="30" height="11" font="font18" id="p49_t159" reading_order_no="158" segment_no="13" tag_type="formula">6 G · 2 t 2</text>
<text top="598" left="226" width="18" height="9" font="font17" id="p49_t160" reading_order_no="159" segment_no="13" tag_type="formula">µR 0</text>
<text top="577" left="259" width="22" height="10" font="font29" id="p49_t161" reading_order_no="160" segment_no="13" tag_type="formula">! α α − 1</text>
<text top="591" left="285" width="3" height="9" font="font17" id="p49_t162" reading_order_no="161" segment_no="13" tag_type="formula">,</text>
<text top="584" left="298" width="28" height="9" font="font18" id="p49_t163" reading_order_no="162" segment_no="13" tag_type="formula">24 Gnb</text>
<text top="576" left="326" width="8" height="9" font="font19" id="p49_t164" reading_order_no="163" segment_no="13" tag_type="formula">√</text>
<text top="582" left="334" width="26" height="12" font="font18" id="p49_t165" reading_order_no="164" segment_no="13" tag_type="formula">2 C 2 2 t 2</text>
<text top="598" left="317" width="26" height="9" font="font17" id="p49_t166" reading_order_no="165" segment_no="13" tag_type="formula">mµR 0</text>
<text top="577" left="363" width="34" height="10" font="font29" id="p49_t167" reading_order_no="166" segment_no="13" tag_type="formula">! α α − 1 </text>
<text top="586" left="388" width="9" height="4" font="font29" id="p49_t168" reading_order_no="167" segment_no="13" tag_type="formula"></text>
<text top="604" left="388" width="9" height="4" font="font29" id="p49_t169" reading_order_no="168" segment_no="13" tag_type="formula"></text>
<text top="591" left="398" width="3" height="9" font="font17" id="p49_t170" reading_order_no="169" segment_no="13" tag_type="formula">,</text>
<text top="591" left="413" width="38" height="10" font="font17" id="p49_t171" reading_order_no="170" segment_no="13" tag_type="formula">λ t = GK</text>
<text top="586" left="451" width="12" height="16" font="font17" id="p49_t172" reading_order_no="171" segment_no="13" tag_type="formula">1 α t ,</text>
<text top="591" left="487" width="17" height="9" font="font3" id="p49_t173" reading_order_no="172" segment_no="13" tag_type="text">(66)</text>
<text top="626" left="261" width="16" height="9" font="font17" id="p49_t174" reading_order_no="173" segment_no="14" tag_type="formula">r =</text>
<text top="626" left="285" width="17" height="10" font="font18" id="p49_t175" reading_order_no="174" segment_no="14" tag_type="formula">log 2</text>
<text top="618" left="306" width="17" height="12" font="font17" id="p49_t176" reading_order_no="175" segment_no="14" tag_type="formula">µR 2 0</text>
<text top="633" left="312" width="5" height="9" font="font17" id="p49_t177" reading_order_no="176" segment_no="14" tag_type="formula">ε</text>
<text top="625" left="333" width="18" height="10" font="font19" id="p49_t178" reading_order_no="177" segment_no="14" tag_type="formula">− 1 ,</text>
<text top="626" left="487" width="17" height="9" font="font3" id="p49_t179" reading_order_no="178" segment_no="14" tag_type="text">(67)</text>
<text top="646" left="108" width="138" height="11" font="font13" id="p49_t180" reading_order_no="179" segment_no="15" tag_type="text">where R 0 ≥ k x 0 − x ∗ k and ∆ k,t</text>
<text top="647" left="236" width="269" height="11" font="font13" id="p49_t181" reading_order_no="180" segment_no="15" tag_type="text">max is the parameter for verification 3 at iteration k of BTARD-</text>
<text top="657" left="108" width="396" height="12" font="font3" id="p49_t182" reading_order_no="181" segment_no="15" tag_type="text">C LIPPED -SGD , n t k is the total number of workers at iteration k of t -th restart. Then, we have</text>
<text top="667" left="108" width="396" height="13" font="font34" id="p49_t183" reading_order_no="182" segment_no="15" tag_type="text">E [ f ( b x r ) − f ( x ∗ )] ≤ ε after r restarts of BTARD-C LIPPED -SGD and the total number of executed</text>
<text top="680" left="108" width="162" height="9" font="font13" id="p49_t184" reading_order_no="183" segment_no="15" tag_type="text">iterations of BTARD-C LIPPED -SGD is</text>
<text top="695" left="194" width="4" height="6" font="font28" id="p49_t185" reading_order_no="184" segment_no="16" tag_type="formula">r</text>
<text top="702" left="189" width="14" height="4" font="font29" id="p49_t186" reading_order_no="185" segment_no="16" tag_type="formula">X</text>
<text top="719" left="190" width="13" height="6" font="font28" id="p49_t187" reading_order_no="186" segment_no="16" tag_type="formula">t =1</text>
<text top="705" left="205" width="34" height="10" font="font17" id="p49_t188" reading_order_no="187" segment_no="16" tag_type="formula">K t = O</text>
<text top="697" left="257" width="12" height="11" font="font17" id="p49_t189" reading_order_no="188" segment_no="16" tag_type="formula">G 2</text>
<text top="712" left="258" width="11" height="9" font="font17" id="p49_t190" reading_order_no="189" segment_no="16" tag_type="formula">µε</text>
<text top="694" left="279" width="23" height="10" font="font30" id="p49_t191" reading_order_no="190" segment_no="16" tag_type="formula">α 2( α − 1 )</text>
<text top="705" left="305" width="8" height="9" font="font18" id="p49_t192" reading_order_no="191" segment_no="16" tag_type="formula">+</text>
<text top="699" left="324" width="10" height="9" font="font17" id="p49_t193" reading_order_no="192" segment_no="16" tag_type="formula">nb</text>
<text top="712" left="325" width="9" height="9" font="font17" id="p49_t194" reading_order_no="193" segment_no="16" tag_type="formula">m</text>
<text top="694" left="344" width="13" height="10" font="font31" id="p49_t195" reading_order_no="194" segment_no="16" tag_type="formula">α α − 1</text>
<text top="697" left="369" width="12" height="11" font="font17" id="p49_t196" reading_order_no="195" segment_no="16" tag_type="formula">G 2</text>
<text top="712" left="370" width="11" height="9" font="font17" id="p49_t197" reading_order_no="196" segment_no="16" tag_type="formula">µε</text>
<text top="694" left="391" width="32" height="10" font="font29" id="p49_t198" reading_order_no="197" segment_no="16" tag_type="formula">α 2( α − 1) !</text>
<text top="706" left="487" width="17" height="9" font="font3" id="p49_t199" reading_order_no="198" segment_no="16" tag_type="text">(68)</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p49_t200" reading_order_no="199" segment_no="17" tag_type="text">49</text>
</page>
<page number="50" position="absolute" top="0" left="0" height="792" width="612">
<text top="75" left="108" width="254" height="9" font="font13" id="p50_t1" reading_order_no="0" segment_no="0" tag_type="text">Proof. Theorem F.8 implies that BTARD-C LIPPED -SGD with</text>
<text top="100" left="222" width="35" height="9" font="font17" id="p50_t2" reading_order_no="1" segment_no="1" tag_type="formula">γ = min</text>
<text top="93" left="280" width="12" height="9" font="font17" id="p50_t3" reading_order_no="2" segment_no="1" tag_type="formula">R 0<a href="deeplearning_paper1.html#45">F.8</a></text>
<text top="99" left="268" width="8" height="9" font="font19" id="p50_t4" reading_order_no="3" segment_no="1" tag_type="formula">√</text>
<text top="105" left="276" width="28" height="12" font="font18" id="p50_t5" reading_order_no="4" segment_no="1" tag_type="formula">6 GK 1 α</text>
<text top="100" left="307" width="3" height="9" font="font17" id="p50_t6" reading_order_no="5" segment_no="1" tag_type="formula">,</text>
<text top="93" left="337" width="20" height="9" font="font17" id="p50_t7" reading_order_no="6" segment_no="1" tag_type="formula">mR 0</text>
<text top="108" left="312" width="10" height="9" font="font18" id="p50_t8" reading_order_no="7" segment_no="1" tag_type="formula">12</text>
<text top="100" left="322" width="8" height="9" font="font19" id="p50_t9" reading_order_no="8" segment_no="1" tag_type="formula">√</text>
<text top="105" left="330" width="50" height="12" font="font18" id="p50_t10" reading_order_no="9" segment_no="1" tag_type="formula">2 C 2 GnbK 1 α</text>
<text top="124" left="108" width="43" height="9" font="font3" id="p50_t11" reading_order_no="10" segment_no="2" tag_type="text">guarantees</text>
<text top="133" left="251" width="107" height="19" font="font34" id="p50_t12" reading_order_no="11" segment_no="3" tag_type="formula">E f ( x K ) − f ( x ∗ ) ≤ R 2 0</text>
<text top="148" left="345" width="14" height="9" font="font17" id="p50_t13" reading_order_no="12" segment_no="3" tag_type="formula">γK</text>
<text top="162" left="108" width="232" height="9" font="font3" id="p50_t14" reading_order_no="13" segment_no="4" tag_type="text">after K iterations. Therefore, after the first restart we have</text>
<text top="184" left="233" width="82" height="13" font="font34" id="p50_t15" reading_order_no="14" segment_no="5" tag_type="formula">E [ f ( b x 1 ) − f ( x ∗ )] ≤</text>
<text top="178" left="324" width="12" height="12" font="font17" id="p50_t16" reading_order_no="15" segment_no="5" tag_type="formula">R 2 0</text>
<text top="193" left="319" width="22" height="10" font="font17" id="p50_t17" reading_order_no="16" segment_no="5" tag_type="formula">γ 1 K 1</text>
<text top="178" left="346" width="29" height="17" font="font19" id="p50_t18" reading_order_no="17" segment_no="5" tag_type="formula">≤ µR 2 0</text>
<text top="193" left="364" width="5" height="9" font="font18" id="p50_t19" reading_order_no="18" segment_no="5" tag_type="formula">4</text>
<text top="186" left="377" width="3" height="9" font="font17" id="p50_t20" reading_order_no="19" segment_no="5" tag_type="formula">.</text>
<text top="208" left="108" width="224" height="12" font="font3" id="p50_t21" reading_order_no="20" segment_no="6" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="229" left="187" width="6" height="9" font="font17" id="p50_t22" reading_order_no="21" segment_no="7" tag_type="formula">µ</text>
<text top="243" left="188" width="5" height="9" font="font18" id="p50_t23" reading_order_no="22" segment_no="7" tag_type="formula">2</text>
<text top="227" left="194" width="228" height="19" font="font19" id="p50_t24" reading_order_no="23" segment_no="7" tag_type="formula">k b x 1 − x ∗ k 2 ≤ f ( b x 1 ) − f ( x ∗ ) = ⇒ E [ k b x 1 − x ∗ k 2 ] ≤ R 2</text>
<text top="234" left="418" width="4" height="6" font="font30" id="p50_t25" reading_order_no="24" segment_no="7" tag_type="formula">0</text>
<text top="236" left="414" width="12" height="16" font="font18" id="p50_t26" reading_order_no="25" segment_no="7" tag_type="formula">2 .</text>
<text top="257" left="108" width="216" height="15" font="font3" id="p50_t27" reading_order_no="26" segment_no="8" tag_type="text">Next, assume that we have E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="257" left="310" width="196" height="16" font="font3" id="p50_t28" reading_order_no="27" segment_no="8" tag_type="text">2 t +1 , E [ k b x t − x ∗ k 2 ] ≤ R 2 0 2 t for some t ≤ r − 1 .</text>
<text top="273" left="108" width="125" height="9" font="font3" id="p50_t29" reading_order_no="28" segment_no="8" tag_type="text">Then, Theorem F.8 implies that</text>
<text top="289" left="224" width="159" height="19" font="font34" id="p50_t30" reading_order_no="29" segment_no="9" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ ) | x t ] ≤ k b x t − x ∗ k 2</text>
<text top="305" left="350" width="20" height="9" font="font17" id="p50_t31" reading_order_no="30" segment_no="9" tag_type="formula">γ t K t</text>
<text top="298" left="385" width="3" height="9" font="font17" id="p50_t32" reading_order_no="31" segment_no="9" tag_type="formula">.</text>
<text top="321" left="108" width="304" height="9" font="font3" id="p50_t33" reading_order_no="32" segment_no="10" tag_type="text">Taking the full expectation from the both sides of previous inequality we get</text>
<text top="337" left="187" width="155" height="20" font="font34" id="p50_t34" reading_order_no="33" segment_no="11" tag_type="formula">E [ f ( b x t +1 ) − f ( x ∗ )] ≤ E [ k b x t − x ∗ k 2 ]</text>
<text top="353" left="302" width="20" height="10" font="font17" id="p50_t35" reading_order_no="34" segment_no="11" tag_type="formula">γ t K t</text>
<text top="346" left="345" width="8" height="9" font="font19" id="p50_t36" reading_order_no="35" segment_no="11" tag_type="formula">≤</text>
<text top="338" left="366" width="11" height="12" font="font17" id="p50_t37" reading_order_no="36" segment_no="11" tag_type="formula">R 2 0</text>
<text top="352" left="357" width="29" height="11" font="font18" id="p50_t38" reading_order_no="37" segment_no="11" tag_type="formula">2 t γ t K t</text>
<text top="338" left="390" width="30" height="17" font="font19" id="p50_t39" reading_order_no="38" segment_no="11" tag_type="formula">≤ µR 2 0</text>
<text top="346" left="402" width="23" height="16" font="font18" id="p50_t40" reading_order_no="39" segment_no="11" tag_type="formula">2 t +2 .</text>
<text top="368" left="108" width="224" height="12" font="font3" id="p50_t41" reading_order_no="40" segment_no="12" tag_type="text">From µ -strong convexity of f and ∇ f ( x ∗ ) = 0 we have</text>
<text top="389" left="170" width="6" height="9" font="font17" id="p50_t42" reading_order_no="41" segment_no="13" tag_type="formula">µ</text>
<text top="403" left="171" width="5" height="9" font="font18" id="p50_t43" reading_order_no="42" segment_no="13" tag_type="formula">2</text>
<text top="387" left="177" width="258" height="19" font="font19" id="p50_t44" reading_order_no="43" segment_no="13" tag_type="formula">k b x t +1 − x ∗ k 2 ≤ f ( b x t +1 ) − f ( x ∗ ) = ⇒ E [ k b x t +1 − x ∗ k 2 ] ≤ R 2 0</text>
<text top="396" left="420" width="23" height="16" font="font18" id="p50_t45" reading_order_no="44" segment_no="13" tag_type="formula">2 t +1 .</text>
<text top="417" left="108" width="281" height="9" font="font3" id="p50_t46" reading_order_no="45" segment_no="14" tag_type="text">Therefore, by mathematical induction we have that for all t = 1 , . . . , r</text>
<text top="434" left="199" width="104" height="19" font="font34" id="p50_t47" reading_order_no="46" segment_no="15" tag_type="formula">E [ f ( b x t ) − f ( x ∗ )] ≤ µR 2 0</text>
<text top="442" left="285" width="23" height="16" font="font18" id="p50_t48" reading_order_no="47" segment_no="15" tag_type="formula">2 t +1 ,</text>
<text top="440" left="319" width="58" height="13" font="font34" id="p50_t49" reading_order_no="48" segment_no="15" tag_type="formula">E k b x t − x ∗ k 2</text>
<text top="434" left="385" width="23" height="17" font="font19" id="p50_t50" reading_order_no="49" segment_no="15" tag_type="formula">≤ R 2 0</text>
<text top="442" left="398" width="15" height="16" font="font18" id="p50_t51" reading_order_no="50" segment_no="15" tag_type="formula">2 t .</text>
<text top="464" left="108" width="85" height="15" font="font3" id="p50_t52" reading_order_no="51" segment_no="16" tag_type="text">Then, after r = l log 2</text>
<text top="464" left="196" width="14" height="16" font="font28" id="p50_t53" reading_order_no="52" segment_no="16" tag_type="text">µR 2 0 ε</text>
<text top="464" left="212" width="293" height="15" font="font29" id="p50_t54" reading_order_no="53" segment_no="16" tag_type="text">m − 1 restarts of BTARD-C LIPPED -SGD we have E [ f ( b x r ) − f ( x ∗ )] ≤ ε .</text>
<text top="483" left="108" width="282" height="9" font="font3" id="p50_t55" reading_order_no="54" segment_no="16" tag_type="text">The total number of iterations executed by BTARD-C LIPPED -SGD is</text>
<text top="503" left="125" width="4" height="6" font="font28" id="p50_t56" reading_order_no="55" segment_no="17" tag_type="formula">r</text>
<text top="510" left="120" width="14" height="4" font="font29" id="p50_t57" reading_order_no="56" segment_no="17" tag_type="formula">X</text>
<text top="527" left="121" width="13" height="6" font="font28" id="p50_t58" reading_order_no="57" segment_no="17" tag_type="formula">t =1</text>
<text top="513" left="136" width="12" height="10" font="font17" id="p50_t59" reading_order_no="58" segment_no="17" tag_type="formula">K t</text>
<text top="513" left="158" width="8" height="9" font="font18" id="p50_t60" reading_order_no="59" segment_no="17" tag_type="formula">=</text>
<text top="513" left="176" width="8" height="9" font="font19" id="p50_t61" reading_order_no="60" segment_no="17" tag_type="formula">O</text>
<text top="500" left="186" width="9" height="4" font="font29" id="p50_t62" reading_order_no="61" segment_no="17" tag_type="formula"></text>
<text top="518" left="186" width="9" height="4" font="font29" id="p50_t63" reading_order_no="62" segment_no="17" tag_type="formula"></text>
<text top="503" left="200" width="4" height="6" font="font28" id="p50_t64" reading_order_no="63" segment_no="17" tag_type="formula">r</text>
<text top="510" left="195" width="14" height="4" font="font29" id="p50_t65" reading_order_no="64" segment_no="17" tag_type="formula">X</text>
<text top="527" left="195" width="13" height="6" font="font28" id="p50_t66" reading_order_no="65" segment_no="17" tag_type="formula">t =1</text>
<text top="513" left="211" width="19" height="9" font="font18" id="p50_t67" reading_order_no="66" segment_no="17" tag_type="formula">max</text>
<text top="499" left="231" width="9" height="4" font="font29" id="p50_t68" reading_order_no="67" segment_no="17" tag_type="formula"></text>
<text top="508" left="231" width="9" height="4" font="font29" id="p50_t69" reading_order_no="68" segment_no="17" tag_type="formula"></text>
<text top="526" left="231" width="9" height="4" font="font29" id="p50_t70" reading_order_no="69" segment_no="17" tag_type="formula"></text>
<text top="504" left="249" width="24" height="12" font="font17" id="p50_t71" reading_order_no="70" segment_no="17" tag_type="formula">G · 2 t 2</text>
<text top="520" left="253" width="17" height="10" font="font17" id="p50_t72" reading_order_no="71" segment_no="17" tag_type="formula">µR 0</text>
<text top="499" left="276" width="22" height="10" font="font29" id="p50_t73" reading_order_no="72" segment_no="17" tag_type="formula">! α α − 1</text>
<text top="513" left="302" width="3" height="9" font="font17" id="p50_t74" reading_order_no="73" segment_no="17" tag_type="formula">,</text>
<text top="507" left="315" width="14" height="9" font="font17" id="p50_t75" reading_order_no="74" segment_no="17" tag_type="formula">Gn</text>
<text top="497" left="329" width="8" height="9" font="font19" id="p50_t76" reading_order_no="75" segment_no="17" tag_type="formula">√</text>
<text top="504" left="338" width="14" height="12" font="font17" id="p50_t77" reading_order_no="76" segment_no="17" tag_type="formula">δ 2 t 2</text>
<text top="520" left="321" width="27" height="10" font="font17" id="p50_t78" reading_order_no="77" segment_no="17" tag_type="formula">mµR 0</text>
<text top="499" left="355" width="33" height="10" font="font29" id="p50_t79" reading_order_no="78" segment_no="17" tag_type="formula">! α α − 1 </text>
<text top="508" left="379" width="9" height="4" font="font29" id="p50_t80" reading_order_no="79" segment_no="17" tag_type="formula"></text>
<text top="526" left="379" width="9" height="4" font="font29" id="p50_t81" reading_order_no="80" segment_no="17" tag_type="formula"></text>
<text top="500" left="388" width="9" height="4" font="font29" id="p50_t82" reading_order_no="81" segment_no="17" tag_type="formula"></text>
<text top="518" left="388" width="9" height="4" font="font29" id="p50_t83" reading_order_no="82" segment_no="17" tag_type="formula"></text>
<text top="550" left="158" width="8" height="9" font="font18" id="p50_t84" reading_order_no="83" segment_no="17" tag_type="formula">=</text>
<text top="550" left="176" width="8" height="9" font="font19" id="p50_t85" reading_order_no="84" segment_no="17" tag_type="formula">O</text>
<text top="550" left="194" width="19" height="9" font="font18" id="p50_t86" reading_order_no="85" segment_no="17" tag_type="formula">max</text>
<text top="540" left="214" width="8" height="4" font="font29" id="p50_t87" reading_order_no="86" segment_no="17" tag_type="formula">(</text>
<text top="543" left="236" width="8" height="9" font="font17" id="p50_t88" reading_order_no="87" segment_no="17" tag_type="formula">G</text>
<text top="557" left="230" width="18" height="10" font="font17" id="p50_t89" reading_order_no="88" segment_no="17" tag_type="formula">µR 0</text>
<text top="539" left="258" width="13" height="10" font="font31" id="p50_t90" reading_order_no="89" segment_no="17" tag_type="formula">α α − 1</text>
<text top="550" left="275" width="10" height="9" font="font19" id="p50_t91" reading_order_no="90" segment_no="17" tag_type="formula">· 2</text>
<text top="546" left="287" width="26" height="13" font="font17" id="p50_t92" reading_order_no="91" segment_no="17" tag_type="formula">rα 2( α − 1) ,</text>
<text top="543" left="328" width="18" height="9" font="font17" id="p50_t93" reading_order_no="92" segment_no="17" tag_type="formula">Gnb</text>
<text top="557" left="323" width="27" height="10" font="font17" id="p50_t94" reading_order_no="93" segment_no="17" tag_type="formula">mµR 0</text>
<text top="539" left="360" width="13" height="10" font="font31" id="p50_t95" reading_order_no="94" segment_no="17" tag_type="formula">α α − 1</text>
<text top="550" left="377" width="10" height="9" font="font19" id="p50_t96" reading_order_no="95" segment_no="17" tag_type="formula">· 2</text>
<text top="546" left="388" width="22" height="10" font="font31" id="p50_t97" reading_order_no="96" segment_no="17" tag_type="formula">rα 2( α − 1)</text>
<text top="540" left="412" width="16" height="4" font="font29" id="p50_t98" reading_order_no="97" segment_no="17" tag_type="formula">)!</text>
<text top="584" left="158" width="8" height="9" font="font18" id="p50_t99" reading_order_no="98" segment_no="17" tag_type="formula">=</text>
<text top="583" left="176" width="8" height="9" font="font19" id="p50_t100" reading_order_no="99" segment_no="17" tag_type="formula">O</text>
<text top="584" left="194" width="19" height="9" font="font18" id="p50_t101" reading_order_no="100" segment_no="17" tag_type="formula">max</text>
<text top="573" left="214" width="8" height="4" font="font29" id="p50_t102" reading_order_no="101" segment_no="17" tag_type="formula">(</text>
<text top="577" left="236" width="8" height="9" font="font17" id="p50_t103" reading_order_no="102" segment_no="17" tag_type="formula">G</text>
<text top="591" left="230" width="18" height="9" font="font17" id="p50_t104" reading_order_no="103" segment_no="17" tag_type="formula">µR 0</text>
<text top="573" left="258" width="13" height="10" font="font31" id="p50_t105" reading_order_no="104" segment_no="17" tag_type="formula">α α − 1</text>
<text top="583" left="275" width="3" height="9" font="font19" id="p50_t106" reading_order_no="105" segment_no="17" tag_type="formula">·</text>
<text top="576" left="289" width="18" height="12" font="font17" id="p50_t107" reading_order_no="106" segment_no="17" tag_type="formula">µR 2 0</text>
<text top="591" left="296" width="5" height="9" font="font17" id="p50_t108" reading_order_no="107" segment_no="17" tag_type="formula">ε</text>
<text top="572" left="317" width="22" height="10" font="font31" id="p50_t109" reading_order_no="108" segment_no="17" tag_type="formula">α 2( α − 1)</text>
<text top="584" left="342" width="3" height="9" font="font17" id="p50_t110" reading_order_no="109" segment_no="17" tag_type="formula">,</text>
<text top="577" left="360" width="18" height="9" font="font17" id="p50_t111" reading_order_no="110" segment_no="17" tag_type="formula">Gnb</text>
<text top="591" left="355" width="27" height="9" font="font17" id="p50_t112" reading_order_no="111" segment_no="17" tag_type="formula">mµR 0</text>
<text top="573" left="392" width="13" height="10" font="font31" id="p50_t113" reading_order_no="112" segment_no="17" tag_type="formula">α α − 1</text>
<text top="583" left="409" width="3" height="9" font="font19" id="p50_t114" reading_order_no="113" segment_no="17" tag_type="formula">·</text>
<text top="576" left="423" width="17" height="12" font="font17" id="p50_t115" reading_order_no="114" segment_no="17" tag_type="formula">µR 2 0</text>
<text top="591" left="429" width="5" height="9" font="font17" id="p50_t116" reading_order_no="115" segment_no="17" tag_type="formula">ε</text>
<text top="572" left="450" width="40" height="10" font="font29" id="p50_t117" reading_order_no="116" segment_no="17" tag_type="formula">α 2( α − 1) )!</text>
<text top="618" left="158" width="8" height="9" font="font18" id="p50_t118" reading_order_no="117" segment_no="17" tag_type="formula">=</text>
<text top="617" left="176" width="8" height="9" font="font19" id="p50_t119" reading_order_no="118" segment_no="17" tag_type="formula">O</text>
<text top="610" left="202" width="12" height="10" font="font17" id="p50_t120" reading_order_no="119" segment_no="17" tag_type="formula">G 2</text>
<text top="625" left="203" width="11" height="9" font="font17" id="p50_t121" reading_order_no="120" segment_no="17" tag_type="formula">µε</text>
<text top="606" left="224" width="24" height="10" font="font30" id="p50_t122" reading_order_no="121" segment_no="17" tag_type="formula">α 2( α − 1 )</text>
<text top="618" left="251" width="8" height="9" font="font18" id="p50_t123" reading_order_no="122" segment_no="17" tag_type="formula">+</text>
<text top="611" left="269" width="10" height="9" font="font17" id="p50_t124" reading_order_no="123" segment_no="17" tag_type="formula">nb</text>
<text top="625" left="270" width="9" height="9" font="font17" id="p50_t125" reading_order_no="124" segment_no="17" tag_type="formula">m</text>
<text top="607" left="289" width="13" height="10" font="font31" id="p50_t126" reading_order_no="125" segment_no="17" tag_type="formula">α α − 1</text>
<text top="610" left="314" width="12" height="10" font="font17" id="p50_t127" reading_order_no="126" segment_no="17" tag_type="formula">G 2</text>
<text top="625" left="315" width="11" height="9" font="font17" id="p50_t128" reading_order_no="127" segment_no="17" tag_type="formula">µε</text>
<text top="606" left="336" width="32" height="10" font="font29" id="p50_t129" reading_order_no="128" segment_no="17" tag_type="formula">α 2( α − 1) !</text>
<text top="618" left="370" width="3" height="9" font="font17" id="p50_t130" reading_order_no="129" segment_no="17" tag_type="formula">.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p50_t131" reading_order_no="130" segment_no="18" tag_type="text">50</text>
</page>
<page number="51" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="9" height="11" font="font6" id="p51_t1" reading_order_no="0" segment_no="0" tag_type="title">G</text>
<text top="74" left="129" width="223" height="11" font="font6" id="p51_t2" reading_order_no="1" segment_no="0" tag_type="title">Reputation system for public collaborations</text>
<text top="100" left="108" width="396" height="9" font="font3" id="p51_t3" reading_order_no="2" segment_no="1" tag_type="text">In this section, we address byzantine-tolerant training in a setup where new participants can join or</text>
<text top="111" left="108" width="396" height="9" font="font3" id="p51_t4" reading_order_no="3" segment_no="1" tag_type="text">leave collaboration midway through training. This requirement arises naturally if a given training</text>
<text top="122" left="108" width="396" height="9" font="font3" id="p51_t5" reading_order_no="4" segment_no="1" tag_type="text">run relies on volunteers or an open pool of paid participants [ 13 , 14 , 15 ]. In addition to all existing<a href="deeplearning_paper1.html#11">[</a></text>
<text top="133" left="108" width="396" height="9" font="font3" id="p51_t6" reading_order_no="5" segment_no="1" tag_type="text">concerns from Section 3 , this new setup allows Byzantine attackers to assume new identity each time<a href="deeplearning_paper1.html#11">13</a></text>
<text top="143" left="108" width="396" height="9" font="font3" id="p51_t7" reading_order_no="6" segment_no="1" tag_type="text">they are blocked. Further yet, Byzantine participants can simultaneously use multiple identities in<a href="deeplearning_paper1.html#11">,</a></text>
<text top="154" left="108" width="384" height="9" font="font3" id="p51_t8" reading_order_no="7" segment_no="1" tag_type="text">order to obtain majority in the voting procedure, which is known as Sybil attacks [ 82 , 100 , 101 ].<a href="deeplearning_paper1.html#11">14</a></text>
<text top="171" left="108" width="396" height="9" font="font3" id="p51_t9" reading_order_no="8" segment_no="2" tag_type="text">For the purpose of this analysis, we consider a training run where byzantine peers collectively<a href="deeplearning_paper1.html#11">,</a></text>
<text top="180" left="108" width="313" height="11" font="font3" id="p51_t10" reading_order_no="9" segment_no="2" tag_type="text">possess δ &lt; B m ax of all compute resources (we explore the role of ∆ max &lt; 1<a href="deeplearning_paper1.html#11">15</a></text>
<text top="182" left="417" width="89" height="11" font="font3" id="p51_t11" reading_order_no="10" segment_no="2" tag_type="text">2 later in this section).<a href="deeplearning_paper1.html#11">]. </a>In addition to all existing</text>
<text top="192" left="108" width="396" height="10" font="font3" id="p51_t12" reading_order_no="11" segment_no="2" tag_type="text">Intuitively, one can think of this setting as distributed training with n identical computers, b δ · n c of</text>
<text top="203" left="108" width="397" height="9" font="font3" id="p51_t13" reading_order_no="12" segment_no="2" tag_type="text">which are controlled by Byzantines. The “Byzantine GPUs” can be allocated between an arbitrary<a href="deeplearning_paper1.html#4">3</a></text>
<text top="214" left="108" width="396" height="9" font="font3" id="p51_t14" reading_order_no="13" segment_no="2" tag_type="text">number of identities. For instance, one accelerator can run full BTARD-SGD protocol for one peer or<a href="deeplearning_paper1.html#4">, </a>this new setup allows Byzantine attackers to assume new identity each time</text>
<text top="225" left="108" width="396" height="9" font="font3" id="p51_t15" reading_order_no="14" segment_no="2" tag_type="text">drop some of the computation and use the freed “compute cycles” to run computation for another</text>
<text top="236" left="108" width="396" height="9" font="font3" id="p51_t16" reading_order_no="15" segment_no="2" tag_type="text">participant. Theoretically, a device can run computation for an arbitrarily large number of peers, as<a href="deeplearning_paper1.html#14">[</a></text>
<text top="247" left="108" width="398" height="9" font="font3" id="p51_t17" reading_order_no="16" segment_no="2" tag_type="text">long as it actually computes as many gradients as one benign participant does in the same time-frame.<a href="deeplearning_paper1.html#14">82</a></text>
<text top="263" left="108" width="396" height="9" font="font3" id="p51_t18" reading_order_no="17" segment_no="3" tag_type="text">To protect against this new attack type, we augment BTARD-SGD with a reputation system designed<a href="deeplearning_paper1.html#14">,</a></text>
<text top="274" left="108" width="396" height="9" font="font3" id="p51_t19" reading_order_no="18" segment_no="3" tag_type="text">to limit the impact of pseudonymous identities with the actual underlying compute. We base this<a href="deeplearning_paper1.html#15">100</a></text>
<text top="285" left="108" width="173" height="9" font="font3" id="p51_t20" reading_order_no="19" segment_no="3" tag_type="text">system on the following three assumptions:<a href="deeplearning_paper1.html#15">,</a></text>
<text top="308" left="108" width="396" height="11" font="font3" id="p51_t21" reading_order_no="20" segment_no="4" tag_type="list">1. Unique and optimal computations: the gradients computed by peer i at step k cannot be<a href="deeplearning_paper1.html#15">101</a></text>
<text top="319" left="120" width="251" height="9" font="font3" id="p51_t22" reading_order_no="21" segment_no="4" tag_type="list">circumvented or reused from other peers and/or previous steps.<a href="deeplearning_paper1.html#15">].</a></text>
<text top="336" left="108" width="396" height="9" font="font3" id="p51_t23" reading_order_no="22" segment_no="5" tag_type="list">2. Public key infrastructure: peers have unique public/private key pairs and know each other’s</text>
<text top="347" left="120" width="48" height="9" font="font3" id="p51_t24" reading_order_no="23" segment_no="5" tag_type="list">public keys.</text>
<text top="364" left="108" width="396" height="9" font="font3" id="p51_t25" reading_order_no="24" segment_no="6" tag_type="list">3. Cryptographic hash: peers have access to a hash function hash s.t. finding a vector x such that</text>
<text top="375" left="120" width="350" height="9" font="font3" id="p51_t26" reading_order_no="25" segment_no="6" tag_type="list">satisfies hash ( x ) = y is infeasible for b δ · n c compute over the entire training duration.</text>
<text top="398" left="108" width="396" height="9" font="font3" id="p51_t27" reading_order_no="26" segment_no="7" tag_type="text">We associate each participant with a public record that is used to verify that peer’s legitimacy. When</text>
<text top="409" left="108" width="396" height="9" font="font3" id="p51_t28" reading_order_no="27" segment_no="7" tag_type="text">a new peer joins the network, it begins with an empty record and is therefore “untrusted”. Untrusted</text>
<text top="420" left="108" width="396" height="9" font="font3" id="p51_t29" reading_order_no="28" segment_no="7" tag_type="text">peers compute gradients normally, but cannot aggregate vectors from others and cannot serve as</text>
<text top="431" left="108" width="396" height="9" font="font3" id="p51_t30" reading_order_no="29" segment_no="7" tag_type="text">validators. More importantly, other peers exclude untrusted gradients from aggregation, using them</text>
<text top="442" left="108" width="183" height="9" font="font3" id="p51_t31" reading_order_no="30" segment_no="7" tag_type="text">only for the purpose of validating those peers.</text>
<text top="457" left="108" width="396" height="12" font="font3" id="p51_t32" reading_order_no="31" segment_no="8" tag_type="text">Each time a peer computes gradients g k i over publicly known batch ξ k i , it must write hash ( g k i ) to its</text>
<text top="469" left="108" width="396" height="9" font="font3" id="p51_t33" reading_order_no="32" segment_no="8" tag_type="text">own public record and sign it with its private key. As in the original BTARD-SGD, some of those</text>
<text top="480" left="108" width="396" height="9" font="font3" id="p51_t34" reading_order_no="33" segment_no="8" tag_type="text">entries will be validated by other peers chosen by JPRNG. In turn, the chosen validators will either</text>
<text top="491" left="108" width="217" height="9" font="font3" id="p51_t35" reading_order_no="34" segment_no="8" tag_type="text">approve their entry or invoke A CCUSE to ban the peer.</text>
<text top="507" left="108" width="395" height="9" font="font3" id="p51_t36" reading_order_no="35" segment_no="9" tag_type="text">In order to become trusted, a given peer must report consecutive gradients until it accumulates T</text>
<text top="518" left="108" width="396" height="9" font="font3" id="p51_t37" reading_order_no="36" segment_no="9" tag_type="text">entries approved by (provably) random peers. Once a peer becomes trusted, it must continue reporting</text>
<text top="529" left="108" width="396" height="9" font="font3" id="p51_t38" reading_order_no="37" segment_no="9" tag_type="text">gradient hashes to maintain trust. Even a single missing or invalidated hash breaks the chain and</text>
<text top="540" left="108" width="396" height="9" font="font3" id="p51_t39" reading_order_no="38" segment_no="9" tag_type="text">results in the corresponding peer being banned. To maintain this invariant, peers chosen as a validators</text>
<text top="551" left="108" width="323" height="9" font="font3" id="p51_t40" reading_order_no="39" segment_no="9" tag_type="text">add the recalculated hashes into their own record instead of the skipped iteration.</text>
<text top="567" left="108" width="396" height="9" font="font3" id="p51_t41" reading_order_no="40" segment_no="10" tag_type="text">To protect against dilution attacks, a cooperative training run can simultaneously consider at most as</text>
<text top="578" left="108" width="396" height="9" font="font3" id="p51_t42" reading_order_no="41" segment_no="10" tag_type="text">many “untrusted” peers as there are trusted ones: all subsequent peers wait in a queue until one of the</text>
<text top="589" left="108" width="197" height="9" font="font3" id="p51_t43" reading_order_no="42" segment_no="10" tag_type="text">untrusted peers becomes either trusted or banned.</text>
<text top="615" left="108" width="38" height="9" font="font1" id="p51_t44" reading_order_no="43" segment_no="11" tag_type="text">Analysis.</text>
<text top="615" left="156" width="348" height="9" font="font3" id="p51_t45" reading_order_no="44" segment_no="11" tag_type="text">Under this formalism, a Sybil attacker will attempt to maximize the number of trusted</text>
<text top="626" left="108" width="396" height="9" font="font3" id="p51_t46" reading_order_no="45" segment_no="11" tag_type="text">identities it can control with a limited amount of compute. In the simplest case, an attacker has</text>
<text top="637" left="108" width="396" height="9" font="font3" id="p51_t47" reading_order_no="46" segment_no="11" tag_type="text">exactly one GPU that can be used to either run all computations for identity or partial computation</text>
<text top="648" left="108" width="89" height="9" font="font3" id="p51_t48" reading_order_no="47" segment_no="11" tag_type="text">for multiple identities.</text>
<text top="663" left="108" width="396" height="10" font="font3" id="p51_t49" reading_order_no="48" segment_no="12" tag_type="text">In the latter case, an attacker can honestly compute gradients for identity A with probability p ∈ [0 , 1]</text>
<text top="674" left="108" width="396" height="10" font="font3" id="p51_t50" reading_order_no="49" segment_no="12" tag_type="text">and for identity B with probability 1 − p . To breaking the chain, the identity that does not compute</text>
<text top="684" left="108" width="349" height="12" font="font3" id="p51_t51" reading_order_no="50" segment_no="12" tag_type="text">gradients at a given step can report arbitrary (e.g. random) entries instead of hash ( g k i ) .</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p51_t52" reading_order_no="51" segment_no="13" tag_type="text">Consider the expected number of “trusted” identities after enough steps for T validations by honest</text>
<text top="712" left="108" width="104" height="10" font="font3" id="p51_t53" reading_order_no="52" segment_no="13" tag_type="text">validators (on average, T ·</text>
<text top="711" left="226" width="5" height="6" font="font28" id="p51_t54" reading_order_no="53" segment_no="13" tag_type="text">n</text>
<text top="711" left="215" width="289" height="14" font="font3" id="p51_t55" reading_order_no="54" segment_no="13" tag_type="text">k · (1 − δ ) steps). Identity A becomes trusted with probability p T , otherwise</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p51_t56" reading_order_no="55" segment_no="14" tag_type="text">51</text>
</page>
<page number="52" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="396" height="10" font="font3" id="p52_t1" reading_order_no="0" segment_no="0" tag_type="text">it is banned. Similarly, identitiy B survives with probability (1 − p ) T . Thus, the expected number of</text>
<text top="84" left="108" width="191" height="11" font="font3" id="p52_t2" reading_order_no="1" segment_no="0" tag_type="text">trusted identities after T steps is p T + (1 − p ) T .</text>
<text top="102" left="108" width="396" height="10" font="font3" id="p52_t3" reading_order_no="2" segment_no="1" tag_type="text">For T &gt; 1 , this expectation is maximal iff p ∈ { 0 , 1 } . Thus, if a peer needs more than one validation</text>
<text top="113" left="108" width="396" height="9" font="font3" id="p52_t4" reading_order_no="3" segment_no="1" tag_type="text">to become trusted, the “optimal strategy” for a Sybil attacker is to fully support one identity instead of</text>
<text top="124" left="108" width="396" height="9" font="font3" id="p52_t5" reading_order_no="4" segment_no="1" tag_type="text">spreading the resources between multiple ones. This observation can be generalized for distributing</text>
<text top="135" left="108" width="396" height="9" font="font19" id="p52_t6" reading_order_no="5" segment_no="1" tag_type="text">b δ · n c over an m ≥ b δ · n c pseudonymous identities, where maximizing the expected number of</text>
<text top="145" left="108" width="397" height="10" font="font3" id="p52_t7" reading_order_no="6" segment_no="1" tag_type="text">trusted identities requires fully supporting any b δ · n c identities and disregarding the rest (for T &gt; 1 ,</text>
<text top="157" left="108" width="42" height="9" font="font3" id="p52_t8" reading_order_no="7" segment_no="1" tag_type="text">as before).</text>
<text top="180" left="108" width="101" height="9" font="font1" id="p52_t9" reading_order_no="8" segment_no="2" tag_type="text">Overhead computation.</text>
<text top="180" left="219" width="285" height="9" font="font3" id="p52_t10" reading_order_no="9" segment_no="2" tag_type="text">When training without byzantine participants, this modified version of</text>
<text top="189" left="108" width="172" height="11" font="font3" id="p52_t11" reading_order_no="10" segment_no="2" tag_type="text">BTARD-SGD requires, on average, T · n</text>
<text top="191" left="275" width="229" height="12" font="font3" id="p52_t12" reading_order_no="11" segment_no="2" tag_type="text">k additional gradient computations per participant at the</text>
<text top="202" left="108" width="396" height="9" font="font3" id="p52_t13" reading_order_no="12" segment_no="2" tag_type="text">very beginning. However, once all peers become trusted, the algorithm computes exactly the same</text>
<text top="212" left="108" width="299" height="11" font="font3" id="p52_t14" reading_order_no="13" segment_no="2" tag_type="text">number of gradients as regular BTARD-SGD, effectively training at n − k</text>
<text top="219" left="398" width="5" height="6" font="font28" id="p52_t15" reading_order_no="14" segment_no="2" tag_type="text">n</text>
<text top="214" left="412" width="94" height="9" font="font3" id="p52_t16" reading_order_no="15" segment_no="2" tag_type="text">efficiency of AR-SGD,</text>
<text top="225" left="108" width="160" height="9" font="font3" id="p52_t17" reading_order_no="16" segment_no="2" tag_type="text">plus the same communication overhead.</text>
<text top="248" left="108" width="137" height="9" font="font1" id="p52_t18" reading_order_no="17" segment_no="3" tag_type="text">Remark 1: Temporary majority.</text>
<text top="248" left="255" width="249" height="9" font="font3" id="p52_t19" reading_order_no="18" segment_no="3" tag_type="text">Despite the fact that spreading 1 “compute unit” across multiple</text>
<text top="259" left="108" width="396" height="9" font="font3" id="p52_t20" reading_order_no="19" segment_no="3" tag_type="text">identities reduces the expected number of trusted identities, it may still be useful to establish a</text>
<text top="270" left="108" width="396" height="9" font="font3" id="p52_t21" reading_order_no="20" segment_no="3" tag_type="text">temporary majority, albeit with a small probability. For instance, splitting one compute unit evenly</text>
<text top="281" left="108" width="396" height="9" font="font3" id="p52_t22" reading_order_no="21" segment_no="3" tag_type="text">among m identities (each with p =1 /m ) may result in both m identities temporarily gaining trust</text>
<text top="292" left="108" width="67" height="9" font="font3" id="p52_t23" reading_order_no="22" segment_no="3" tag_type="text">with probability:</text>
<text top="325" left="211" width="113" height="12" font="font17" id="p52_t24" reading_order_no="23" segment_no="4" tag_type="formula">P ( peer 1 ∧ · · · ∧ peer m ) =</text>
<text top="316" left="330" width="7" height="6" font="font28" id="p52_t25" reading_order_no="24" segment_no="4" tag_type="formula">m</text>
<text top="323" left="328" width="13" height="4" font="font29" id="p52_t26" reading_order_no="25" segment_no="4" tag_type="formula">Y</text>
<text top="340" left="327" width="13" height="6" font="font28" id="p52_t27" reading_order_no="26" segment_no="4" tag_type="formula">i =1</text>
<text top="319" left="348" width="5" height="9" font="font18" id="p52_t28" reading_order_no="27" segment_no="4" tag_type="formula">1</text>
<text top="324" left="343" width="58" height="18" font="font17" id="p52_t29" reading_order_no="28" segment_no="4" tag_type="formula">m T = m − T m</text>
<text top="326" left="487" width="17" height="9" font="font3" id="p52_t30" reading_order_no="29" segment_no="4" tag_type="text">(69)</text>
<text top="356" left="108" width="397" height="9" font="font3" id="p52_t31" reading_order_no="30" segment_no="5" tag_type="text">A Sybil attacker can simply repeat this procedure on every step until it can establish a temporary</text>
<text top="367" left="108" width="396" height="9" font="font3" id="p52_t32" reading_order_no="31" segment_no="5" tag_type="text">majority and use this majority to harm training (e.g. ban non-malicious peers). A natural way to</text>
<text top="378" left="108" width="324" height="9" font="font3" id="p52_t33" reading_order_no="32" segment_no="5" tag_type="text">remedy this is to increase T to such an extent that ( 69 ) becomes negligibly small.</text>
<text top="401" left="108" width="198" height="9" font="font1" id="p52_t34" reading_order_no="33" segment_no="6" tag_type="text">Remark 2: extra compute for byzantine nodes.</text>
<text top="401" left="316" width="188" height="9" font="font3" id="p52_t35" reading_order_no="34" segment_no="6" tag_type="text">Unlike benign peers, byzantine attackers do not</text>
<text top="412" left="108" width="396" height="9" font="font3" id="p52_t36" reading_order_no="35" segment_no="6" tag_type="text">need to honestly validate each other. When a byzantine peer is chosen as validator, it can approve its</text>
<text top="423" left="108" width="396" height="9" font="font3" id="p52_t37" reading_order_no="36" segment_no="6" tag_type="text">target without actually computing the gradients. In turn, the freed compute resources can be used to</text>
<text top="434" left="108" width="155" height="9" font="font3" id="p52_t38" reading_order_no="37" segment_no="6" tag_type="text">support additional byzantine identities.</text>
<text top="450" left="108" width="396" height="10" font="font3" id="p52_t39" reading_order_no="38" segment_no="7" tag_type="text">Thus, if a given training run has n trusted peers and chooses k validators on each step, Sybil attackers</text>
<text top="461" left="108" width="396" height="10" font="font3" id="p52_t40" reading_order_no="39" segment_no="7" tag_type="text">can control slightly more than b δ · n c of all identities by using the free compute cycles from validation</text>
<text top="472" left="108" width="396" height="9" font="font3" id="p52_t41" reading_order_no="40" segment_no="7" tag_type="text">to support additional peers. Thus, the proposed reputation system requires that the total computational</text>
<text top="481" left="108" width="201" height="12" font="font3" id="p52_t42" reading_order_no="41" segment_no="7" tag_type="text">power B max available to Byzantines is less than 1</text>
<text top="483" left="305" width="201" height="12" font="font3" id="p52_t43" reading_order_no="42" segment_no="7" tag_type="text">2 by a (typically small) margin that depends on n ,</text>
<text top="494" left="108" width="37" height="9" font="font17" id="p52_t44" reading_order_no="43" segment_no="7" tag_type="text">k , and T .</text>
<text top="517" left="108" width="124" height="9" font="font1" id="p52_t45" reading_order_no="44" segment_no="8" tag_type="text">Remark 3: perpetual attacks.</text>
<text top="518" left="242" width="262" height="9" font="font3" id="p52_t46" reading_order_no="45" segment_no="8" tag_type="text">When training in open collaborations, one cannot ban the byzantine</text>
<text top="528" left="108" width="396" height="9" font="font3" id="p52_t47" reading_order_no="46" segment_no="8" tag_type="text">peers entirely: a byzantine attacker will always be able to assume a new identity at the cost of running</text>
<text top="539" left="108" width="62" height="9" font="font3" id="p52_t48" reading_order_no="47" segment_no="8" tag_type="text">honestly for T ·</text>
<text top="537" left="185" width="5" height="6" font="font28" id="p52_t49" reading_order_no="48" segment_no="8" tag_type="text">n</text>
<text top="539" left="173" width="331" height="12" font="font3" id="p52_t50" reading_order_no="49" segment_no="8" tag_type="text">k · (1 − δ ) gradient steps. Thus, unlike in Appendix F , we cannot make BTARD-SGD</text>
<text top="552" left="108" width="398" height="9" font="font3" id="p52_t51" reading_order_no="50" segment_no="8" tag_type="text">unbiased by increasing τ . However, as we demonstrated in Section 4 , the biased variant of BTARD-</text>
<text top="563" left="108" width="396" height="9" font="font3" id="p52_t52" reading_order_no="51" segment_no="8" tag_type="text">SGD with constant τ can still train real-world deep learning models with the same or virtually the</text>
<text top="574" left="108" width="150" height="9" font="font3" id="p52_t53" reading_order_no="52" segment_no="8" tag_type="text">same learning curves as regular SGD.</text>
<text top="601" left="108" width="9" height="11" font="font6" id="p52_t54" reading_order_no="53" segment_no="9" tag_type="title">H</text>
<text top="601" left="129" width="153" height="11" font="font6" id="p52_t55" reading_order_no="54" segment_no="9" tag_type="title">Secure distributed hash tables</text>
<text top="626" left="108" width="398" height="9" font="font3" id="p52_t56" reading_order_no="55" segment_no="10" tag_type="text">Distributed Hash Tables (DHT) are protocols that establish a decentralized key-value storage over de-</text>
<text top="637" left="108" width="396" height="9" font="font3" id="p52_t57" reading_order_no="56" segment_no="10" tag_type="text">centralized unreliable participants [ 83 , 102 , 84 , 103 ]. To determine which DHT peers are responsible</text>
<text top="648" left="108" width="396" height="9" font="font3" id="p52_t58" reading_order_no="57" segment_no="10" tag_type="text">for a given key-value pair, each participant samples a unique binary identifier (ID) sampled uniformly</text>
<text top="659" left="108" width="396" height="9" font="font3" id="p52_t59" reading_order_no="58" segment_no="10" tag_type="text">from the space of hash function outputs. When “storing a ( key, value ) ” on the DHT, one finds k</text>
<text top="669" left="108" width="396" height="10" font="font3" id="p52_t60" reading_order_no="59" segment_no="10" tag_type="text">peers whose IDs are nearest to hash( key ) and sends the data to each one of those peers. In turn, a</text>
<text top="681" left="108" width="396" height="9" font="font3" id="p52_t61" reading_order_no="60" segment_no="10" tag_type="text">peer that wants to read the value or a given key will also search for neighbors whose IDs are close</text>
<text top="691" left="108" width="396" height="9" font="font3" id="p52_t62" reading_order_no="61" segment_no="10" tag_type="text">to hash( key ) and request the data from those peers. Thus, the data can be accessed as long as at</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p52_t63" reading_order_no="62" segment_no="10" tag_type="text">least one o k chosen peers remains active, with some DHT variants introducing additional replication</text>
<text top="713" left="108" width="40" height="9" font="font3" id="p52_t64" reading_order_no="63" segment_no="10" tag_type="text">protocols.</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p52_t65" reading_order_no="64" segment_no="11" tag_type="text">52</text>
</page>
<page number="53" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font57" size="11" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font58" size="11" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font59" size="13" family="TimesNewRomanPSMT" color="#000000"/>
<text top="181" left="150" width="4" height="10" font="font57" id="p53_t1" reading_order_no="6" segment_no="0" tag_type="figure">0</text>
<text top="181" left="176" width="16" height="10" font="font57" id="p53_t2" reading_order_no="7" segment_no="0" tag_type="figure">1000</text>
<text top="181" left="207" width="16" height="10" font="font57" id="p53_t3" reading_order_no="8" segment_no="0" tag_type="figure">2000</text>
<text top="181" left="239" width="16" height="10" font="font57" id="p53_t4" reading_order_no="9" segment_no="0" tag_type="figure">3000</text>
<text top="181" left="271" width="16" height="10" font="font57" id="p53_t5" reading_order_no="10" segment_no="0" tag_type="figure">4000</text>
<text top="158" left="130" width="10" height="10" font="font57" id="p53_t6" reading_order_no="5" segment_no="0" tag_type="figure">0.2</text>
<text top="137" left="130" width="10" height="10" font="font57" id="p53_t7" reading_order_no="4" segment_no="0" tag_type="figure">0.4</text>
<text top="115" left="130" width="10" height="10" font="font57" id="p53_t8" reading_order_no="3" segment_no="0" tag_type="figure">0.6</text>
<text top="94" left="130" width="10" height="10" font="font57" id="p53_t9" reading_order_no="2" segment_no="0" tag_type="figure">0.8</text>
<text top="146" left="127" width="0" height="10" font="font58" id="p53_t10" reading_order_no="0" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="70" left="159" width="129" height="12" font="font59" id="p53_t11" reading_order_no="1" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 1000</text>
<text top="181" left="347" width="21" height="10" font="font57" id="p53_t12" reading_order_no="18" segment_no="0" tag_type="figure">10000</text>
<text top="181" left="382" width="21" height="10" font="font57" id="p53_t13" reading_order_no="19" segment_no="0" tag_type="figure">11000</text>
<text top="181" left="417" width="21" height="10" font="font57" id="p53_t14" reading_order_no="20" segment_no="0" tag_type="figure">12000</text>
<text top="181" left="453" width="21" height="10" font="font57" id="p53_t15" reading_order_no="21" segment_no="0" tag_type="figure">13000</text>
<text top="174" left="313" width="14" height="10" font="font57" id="p53_t16" reading_order_no="17" segment_no="0" tag_type="figure">0.84</text>
<text top="155" left="313" width="14" height="10" font="font57" id="p53_t17" reading_order_no="16" segment_no="0" tag_type="figure">0.86</text>
<text top="136" left="313" width="14" height="10" font="font57" id="p53_t18" reading_order_no="15" segment_no="0" tag_type="figure">0.88</text>
<text top="116" left="313" width="14" height="10" font="font57" id="p53_t19" reading_order_no="14" segment_no="0" tag_type="figure">0.90</text>
<text top="97" left="313" width="14" height="10" font="font57" id="p53_t20" reading_order_no="13" segment_no="0" tag_type="figure">0.92</text>
<text top="78" left="313" width="14" height="10" font="font57" id="p53_t21" reading_order_no="12" segment_no="0" tag_type="figure">0.94</text>
<text top="70" left="343" width="134" height="12" font="font59" id="p53_t22" reading_order_no="11" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 10000</text>
<text top="308" left="150" width="4" height="10" font="font57" id="p53_t23" reading_order_no="28" segment_no="0" tag_type="figure">0</text>
<text top="308" left="176" width="16" height="10" font="font57" id="p53_t24" reading_order_no="29" segment_no="0" tag_type="figure">1000</text>
<text top="308" left="207" width="16" height="10" font="font57" id="p53_t25" reading_order_no="30" segment_no="0" tag_type="figure">2000</text>
<text top="308" left="239" width="16" height="10" font="font57" id="p53_t26" reading_order_no="31" segment_no="0" tag_type="figure">3000</text>
<text top="308" left="271" width="16" height="10" font="font57" id="p53_t27" reading_order_no="32" segment_no="0" tag_type="figure">4000</text>
<text top="318" left="202" width="44" height="10" font="font57" id="p53_t28" reading_order_no="33" segment_no="0" tag_type="figure">Training step</text>
<text top="286" left="130" width="10" height="10" font="font57" id="p53_t29" reading_order_no="27" segment_no="0" tag_type="figure">0.2</text>
<text top="264" left="130" width="10" height="10" font="font57" id="p53_t30" reading_order_no="26" segment_no="0" tag_type="figure">0.4</text>
<text top="243" left="130" width="10" height="10" font="font57" id="p53_t31" reading_order_no="25" segment_no="0" tag_type="figure">0.6</text>
<text top="222" left="130" width="10" height="10" font="font57" id="p53_t32" reading_order_no="24" segment_no="0" tag_type="figure">0.8</text>
<text top="274" left="127" width="0" height="10" font="font58" id="p53_t33" reading_order_no="22" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="198" left="161" width="124" height="12" font="font59" id="p53_t34" reading_order_no="23" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 1000</text>
<text top="247" left="240" width="33" height="9" font="font48" id="p53_t35" reading_order_no="34" segment_no="0" tag_type="figure">No attacks</text>
<text top="258" left="240" width="41" height="9" font="font48" id="p53_t36" reading_order_no="35" segment_no="0" tag_type="figure">Sign flipping</text>
<text top="269" left="240" width="56" height="9" font="font48" id="p53_t37" reading_order_no="36" segment_no="0" tag_type="figure">Random direction</text>
<text top="280" left="240" width="44" height="9" font="font48" id="p53_t38" reading_order_no="37" segment_no="0" tag_type="figure">Label flipping</text>
<text top="291" left="240" width="56" height="9" font="font48" id="p53_t39" reading_order_no="38" segment_no="0" tag_type="figure">Delayed gradients</text>
<text top="308" left="347" width="21" height="10" font="font57" id="p53_t40" reading_order_no="46" segment_no="0" tag_type="figure">10000</text>
<text top="308" left="382" width="21" height="10" font="font57" id="p53_t41" reading_order_no="47" segment_no="0" tag_type="figure">11000</text>
<text top="308" left="417" width="21" height="10" font="font57" id="p53_t42" reading_order_no="48" segment_no="0" tag_type="figure">12000</text>
<text top="308" left="453" width="21" height="10" font="font57" id="p53_t43" reading_order_no="49" segment_no="0" tag_type="figure">13000</text>
<text top="318" left="388" width="44" height="10" font="font57" id="p53_t44" reading_order_no="50" segment_no="0" tag_type="figure">Training step</text>
<text top="302" left="313" width="14" height="10" font="font57" id="p53_t45" reading_order_no="45" segment_no="0" tag_type="figure">0.84</text>
<text top="283" left="313" width="14" height="10" font="font57" id="p53_t46" reading_order_no="44" segment_no="0" tag_type="figure">0.86</text>
<text top="263" left="313" width="14" height="10" font="font57" id="p53_t47" reading_order_no="43" segment_no="0" tag_type="figure">0.88</text>
<text top="244" left="313" width="14" height="10" font="font57" id="p53_t48" reading_order_no="42" segment_no="0" tag_type="figure">0.90</text>
<text top="225" left="313" width="14" height="10" font="font57" id="p53_t49" reading_order_no="41" segment_no="0" tag_type="figure">0.92</text>
<text top="206" left="313" width="14" height="10" font="font57" id="p53_t50" reading_order_no="40" segment_no="0" tag_type="figure">0.94</text>
<text top="198" left="345" width="129" height="12" font="font59" id="p53_t51" reading_order_no="39" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 10000</text>
<text top="335" left="108" width="396" height="9" font="font3" id="p53_t52" reading_order_no="51" segment_no="1" tag_type="text">Figure 4: Effectiveness of attacks against BTARD-SGD for the case when 3 of 16 participants are</text>
<text top="346" left="108" width="43" height="9" font="font3" id="p53_t53" reading_order_no="52" segment_no="1" tag_type="text">Byzantine.</text>
<text top="361" left="108" width="396" height="9" font="font3" id="p53_t54" reading_order_no="53" segment_no="2" tag_type="text">Our specific implementation is based on Kademlia [ 83 ]: a popular DHT variant that determines<a href="deeplearning_paper1.html#15">[</a></text>
<text top="371" left="108" width="396" height="10" font="font3" id="p53_t55" reading_order_no="54" segment_no="2" tag_type="text">nearest neighbors based on XOR distance function or their IDs: d ( x, y ) = int( x ⊕ y ) . More<a href="deeplearning_paper1.html#15">83</a></text>
<text top="383" left="108" width="398" height="9" font="font3" id="p53_t56" reading_order_no="55" segment_no="2" tag_type="text">importantly, Kademlia protocol organizes nodes in such a way that each individual peer only “knows”<a href="deeplearning_paper1.html#15">]: </a>a popular DHT variant that determines</text>
<text top="394" left="108" width="396" height="10" font="font3" id="p53_t57" reading_order_no="56" segment_no="2" tag_type="text">a small subset of O (log 2 n ) direct neighbors, however, it is possible to navigate the neighborhood</text>
<text top="405" left="108" width="302" height="10" font="font3" id="p53_t58" reading_order_no="57" segment_no="2" tag_type="text">graph to find the globally nearest neighbors in O (log 2 N ) network requests.</text>
<text top="421" left="108" width="396" height="9" font="font3" id="p53_t59" reading_order_no="58" segment_no="3" tag_type="text">DHT protocols were originally designed for large-scale distributed systems such as BitTorrent, IPFS</text>
<text top="432" left="108" width="396" height="9" font="font3" id="p53_t60" reading_order_no="59" segment_no="3" tag_type="text">and several cryptocurrencies. To maintain integrity in these applications, modern DHT protocols also</text>
<text top="443" left="108" width="353" height="9" font="font3" id="p53_t61" reading_order_no="60" segment_no="3" tag_type="text">employ security measures that make them resistant to Byzantine and Sybil attacks [ 104 ].</text>
<text top="459" left="108" width="396" height="9" font="font3" id="p53_t62" reading_order_no="61" segment_no="4" tag_type="text">In our specific scenario, the most sensitive DHT entries are personal records that determine whether</text>
<text top="470" left="108" width="396" height="9" font="font3" id="p53_t63" reading_order_no="62" segment_no="4" tag_type="text">or not a given peer is trusted. We protect thee records by enforcing that every value stored in the DHT</text>
<text top="481" left="108" width="396" height="9" font="font3" id="p53_t64" reading_order_no="63" segment_no="4" tag_type="text">must be signed by their author’s digital signature [ 94 ]. Thus, if a malicious peer attempts to modify a</text>
<text top="492" left="108" width="396" height="9" font="font3" id="p53_t65" reading_order_no="64" segment_no="4" tag_type="text">record it was not supposed to, all other peers will be able to detect that and eliminate such peers from</text>
<text top="503" left="108" width="55" height="9" font="font3" id="p53_t66" reading_order_no="65" segment_no="4" tag_type="text">the collective.</text>
<text top="520" left="108" width="396" height="9" font="font3" id="p53_t67" reading_order_no="66" segment_no="5" tag_type="text">However, digital signature are known to be vulnerable to replay attacks: every time a non-byzantine</text>
<text top="530" left="108" width="396" height="9" font="font3" id="p53_t68" reading_order_no="67" segment_no="5" tag_type="text">peer stores an given key-value pair signed with its private key, a byzantine eavesdropper can record</text>
<text top="541" left="108" width="396" height="9" font="font3" id="p53_t69" reading_order_no="68" segment_no="5" tag_type="text">the signed entry and replay it in future. For ordinary DHTs, this would allow an attacker to revert any</text>
<text top="552" left="108" width="306" height="9" font="font3" id="p53_t70" reading_order_no="69" segment_no="5" tag_type="text">key-value pair to its previous state by replaying such pre-recorded messages.</text>
<text top="569" left="108" width="396" height="9" font="font3" id="p53_t71" reading_order_no="70" segment_no="6" tag_type="text">Our algorithm protects against replay attacks by associating each key-value pair with a third value</text>
<text top="579" left="108" width="396" height="10" font="font3" id="p53_t72" reading_order_no="71" segment_no="6" tag_type="text">denoted as expiration time . Given two entries for the same key, DHT nodes will now prioritize the</text>
<text top="590" left="108" width="396" height="9" font="font3" id="p53_t73" reading_order_no="72" segment_no="6" tag_type="text">ones with the latest expiration time and consider it valid up to that time. Furthermore, in order to</text>
<text top="601" left="108" width="396" height="9" font="font3" id="p53_t74" reading_order_no="73" segment_no="6" tag_type="text">store a new entry to the DHT, a peer must now sign the entire key-value-expiration tuple. Thus, if a</text>
<text top="612" left="108" width="396" height="9" font="font3" id="p53_t75" reading_order_no="74" segment_no="6" tag_type="text">byzantine peer replays a pre-recorded message, it will not be able to overwrite newer DHT entries</text>
<text top="623" left="108" width="202" height="9" font="font3" id="p53_t76" reading_order_no="75" segment_no="6" tag_type="text">that were signed for a more recent expiration time.</text>
<text top="650" left="108" width="5" height="11" font="font6" id="p53_t77" reading_order_no="76" segment_no="7" tag_type="title">I</text>
<text top="650" left="125" width="268" height="11" font="font6" id="p53_t78" reading_order_no="77" segment_no="7" tag_type="title">Extra evaluations on the CIFAR10 classification task</text>
<text top="675" left="108" width="396" height="9" font="font3" id="p53_t79" reading_order_no="78" segment_no="8" tag_type="text">In this section, we perform several additional experiments with BTARD-SGD used to train the</text>
<text top="686" left="108" width="235" height="9" font="font3" id="p53_t80" reading_order_no="79" segment_no="8" tag_type="text">ResNet-18 model to solve the CIFAR10 classification task.</text>
<text top="702" left="108" width="398" height="9" font="font3" id="p53_t81" reading_order_no="80" segment_no="9" tag_type="text">To better explore the space of possible attack vectors, we also evaluate two alternative settings.</text>
<text top="713" left="108" width="396" height="9" font="font3" id="p53_t82" reading_order_no="81" segment_no="9" tag_type="text">First, we consider a situation where Byzantine peers are less numerous. For this experiment, we</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p53_t83" reading_order_no="82" segment_no="10" tag_type="text">53</text>
</page>
<page number="54" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font60" size="10" family="TimesNewRomanPSMT" color="#000000"/>
	<fontspec id="font61" size="12" family="DejaVuSans,Italic" color="#000000"/>
<text top="181" left="150" width="4" height="10" font="font57" id="p54_t1" reading_order_no="6" segment_no="0" tag_type="figure">0</text>
<text top="181" left="176" width="16" height="10" font="font57" id="p54_t2" reading_order_no="7" segment_no="0" tag_type="figure">1000</text>
<text top="181" left="207" width="16" height="10" font="font57" id="p54_t3" reading_order_no="8" segment_no="0" tag_type="figure">2000</text>
<text top="181" left="239" width="16" height="10" font="font57" id="p54_t4" reading_order_no="9" segment_no="0" tag_type="figure">3000</text>
<text top="181" left="271" width="16" height="10" font="font57" id="p54_t5" reading_order_no="10" segment_no="0" tag_type="figure">4000</text>
<text top="158" left="130" width="10" height="10" font="font57" id="p54_t6" reading_order_no="5" segment_no="0" tag_type="figure">0.2</text>
<text top="137" left="130" width="10" height="10" font="font57" id="p54_t7" reading_order_no="4" segment_no="0" tag_type="figure">0.4</text>
<text top="115" left="130" width="10" height="10" font="font57" id="p54_t8" reading_order_no="3" segment_no="0" tag_type="figure">0.6</text>
<text top="94" left="130" width="10" height="10" font="font57" id="p54_t9" reading_order_no="2" segment_no="0" tag_type="figure">0.8</text>
<text top="146" left="127" width="0" height="10" font="font58" id="p54_t10" reading_order_no="0" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="70" left="159" width="129" height="12" font="font59" id="p54_t11" reading_order_no="1" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 1000</text>
<text top="181" left="347" width="21" height="10" font="font57" id="p54_t12" reading_order_no="18" segment_no="0" tag_type="figure">10000</text>
<text top="181" left="382" width="21" height="10" font="font57" id="p54_t13" reading_order_no="19" segment_no="0" tag_type="figure">11000</text>
<text top="181" left="417" width="21" height="10" font="font57" id="p54_t14" reading_order_no="20" segment_no="0" tag_type="figure">12000</text>
<text top="181" left="453" width="21" height="10" font="font57" id="p54_t15" reading_order_no="21" segment_no="0" tag_type="figure">13000</text>
<text top="174" left="313" width="14" height="10" font="font57" id="p54_t16" reading_order_no="17" segment_no="0" tag_type="figure">0.84</text>
<text top="155" left="313" width="14" height="10" font="font57" id="p54_t17" reading_order_no="16" segment_no="0" tag_type="figure">0.86</text>
<text top="136" left="313" width="14" height="10" font="font57" id="p54_t18" reading_order_no="15" segment_no="0" tag_type="figure">0.88</text>
<text top="116" left="313" width="14" height="10" font="font57" id="p54_t19" reading_order_no="14" segment_no="0" tag_type="figure">0.90</text>
<text top="97" left="313" width="14" height="10" font="font57" id="p54_t20" reading_order_no="13" segment_no="0" tag_type="figure">0.92</text>
<text top="78" left="313" width="14" height="10" font="font57" id="p54_t21" reading_order_no="12" segment_no="0" tag_type="figure">0.94</text>
<text top="70" left="343" width="134" height="12" font="font59" id="p54_t22" reading_order_no="11" segment_no="0" tag_type="figure">Ours,   = 10, attack at step 10000</text>
<text top="308" left="150" width="4" height="10" font="font57" id="p54_t23" reading_order_no="28" segment_no="0" tag_type="figure">0</text>
<text top="308" left="176" width="16" height="10" font="font57" id="p54_t24" reading_order_no="29" segment_no="0" tag_type="figure">1000</text>
<text top="308" left="207" width="16" height="10" font="font57" id="p54_t25" reading_order_no="30" segment_no="0" tag_type="figure">2000</text>
<text top="308" left="239" width="16" height="10" font="font57" id="p54_t26" reading_order_no="31" segment_no="0" tag_type="figure">3000</text>
<text top="308" left="271" width="16" height="10" font="font57" id="p54_t27" reading_order_no="32" segment_no="0" tag_type="figure">4000</text>
<text top="318" left="202" width="44" height="10" font="font57" id="p54_t28" reading_order_no="33" segment_no="0" tag_type="figure">Training step</text>
<text top="286" left="130" width="10" height="10" font="font57" id="p54_t29" reading_order_no="27" segment_no="0" tag_type="figure">0.2</text>
<text top="264" left="130" width="10" height="10" font="font57" id="p54_t30" reading_order_no="26" segment_no="0" tag_type="figure">0.4</text>
<text top="243" left="130" width="10" height="10" font="font57" id="p54_t31" reading_order_no="25" segment_no="0" tag_type="figure">0.6</text>
<text top="222" left="130" width="10" height="10" font="font57" id="p54_t32" reading_order_no="24" segment_no="0" tag_type="figure">0.8</text>
<text top="274" left="127" width="0" height="10" font="font58" id="p54_t33" reading_order_no="22" segment_no="0" tag_type="figure">Test accuracy</text>
<text top="198" left="161" width="124" height="12" font="font59" id="p54_t34" reading_order_no="23" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 1000</text>
<text top="247" left="240" width="33" height="9" font="font48" id="p54_t35" reading_order_no="34" segment_no="0" tag_type="figure">No attacks</text>
<text top="258" left="240" width="41" height="9" font="font48" id="p54_t36" reading_order_no="35" segment_no="0" tag_type="figure">Sign flipping</text>
<text top="269" left="240" width="56" height="9" font="font48" id="p54_t37" reading_order_no="36" segment_no="0" tag_type="figure">Random direction</text>
<text top="280" left="240" width="44" height="9" font="font48" id="p54_t38" reading_order_no="37" segment_no="0" tag_type="figure">Label flipping</text>
<text top="291" left="240" width="56" height="9" font="font48" id="p54_t39" reading_order_no="38" segment_no="0" tag_type="figure">Delayed gradients</text>
<text top="308" left="347" width="21" height="10" font="font57" id="p54_t40" reading_order_no="46" segment_no="0" tag_type="figure">10000</text>
<text top="308" left="382" width="21" height="10" font="font57" id="p54_t41" reading_order_no="47" segment_no="0" tag_type="figure">11000</text>
<text top="308" left="417" width="21" height="10" font="font57" id="p54_t42" reading_order_no="48" segment_no="0" tag_type="figure">12000</text>
<text top="308" left="453" width="21" height="10" font="font57" id="p54_t43" reading_order_no="49" segment_no="0" tag_type="figure">13000</text>
<text top="318" left="388" width="44" height="10" font="font57" id="p54_t44" reading_order_no="50" segment_no="0" tag_type="figure">Training step</text>
<text top="302" left="313" width="14" height="10" font="font57" id="p54_t45" reading_order_no="45" segment_no="0" tag_type="figure">0.84</text>
<text top="283" left="313" width="14" height="10" font="font57" id="p54_t46" reading_order_no="44" segment_no="0" tag_type="figure">0.86</text>
<text top="263" left="313" width="14" height="10" font="font57" id="p54_t47" reading_order_no="43" segment_no="0" tag_type="figure">0.88</text>
<text top="244" left="313" width="14" height="10" font="font57" id="p54_t48" reading_order_no="42" segment_no="0" tag_type="figure">0.90</text>
<text top="225" left="313" width="14" height="10" font="font57" id="p54_t49" reading_order_no="41" segment_no="0" tag_type="figure">0.92</text>
<text top="206" left="313" width="14" height="10" font="font57" id="p54_t50" reading_order_no="40" segment_no="0" tag_type="figure">0.94</text>
<text top="198" left="345" width="129" height="12" font="font59" id="p54_t51" reading_order_no="39" segment_no="0" tag_type="figure">Ours,   = 1, attack at step 10000</text>
<text top="335" left="108" width="396" height="9" font="font3" id="p54_t52" reading_order_no="51" segment_no="1" tag_type="text">Figure 5: Effectiveness of attacks against BTARD-SGD for the case when Byzantines send incorrect</text>
<text top="346" left="108" width="130" height="9" font="font3" id="p54_t53" reading_order_no="52" segment_no="1" tag_type="text">gradients once per T = 10 steps.</text>
<text top="482" left="239" width="4" height="9" font="font48" id="p54_t54" reading_order_no="58" segment_no="2" tag_type="figure">0</text>
<text top="482" left="263" width="16" height="9" font="font48" id="p54_t55" reading_order_no="59" segment_no="2" tag_type="figure">5000</text>
<text top="482" left="291" width="20" height="9" font="font48" id="p54_t56" reading_order_no="60" segment_no="2" tag_type="figure">10000</text>
<text top="482" left="321" width="20" height="9" font="font48" id="p54_t57" reading_order_no="61" segment_no="2" tag_type="figure">15000</text>
<text top="482" left="351" width="20" height="9" font="font48" id="p54_t58" reading_order_no="62" segment_no="2" tag_type="figure">20000</text>
<text top="482" left="381" width="20" height="9" font="font48" id="p54_t59" reading_order_no="63" segment_no="2" tag_type="figure">25000</text>
<text top="491" left="295" width="41" height="9" font="font48" id="p54_t60" reading_order_no="64" segment_no="2" tag_type="figure">Training step</text>
<text top="459" left="221" width="10" height="9" font="font48" id="p54_t61" reading_order_no="57" segment_no="2" tag_type="figure">0.2</text>
<text top="436" left="221" width="10" height="9" font="font48" id="p54_t62" reading_order_no="56" segment_no="2" tag_type="figure">0.4</text>
<text top="413" left="221" width="10" height="9" font="font48" id="p54_t63" reading_order_no="55" segment_no="2" tag_type="figure">0.6</text>
<text top="390" left="221" width="10" height="9" font="font48" id="p54_t64" reading_order_no="54" segment_no="2" tag_type="figure">0.8</text>
<text top="442" left="217" width="0" height="9" font="font60" id="p54_t65" reading_order_no="53" segment_no="2" tag_type="figure">Test accuracy</text>
<text top="424" left="285" width="24" height="14" font="font61" id="p54_t66" reading_order_no="65" segment_no="2" tag_type="figure">M = 50</text>
<text top="435" left="285" width="24" height="14" font="font61" id="p54_t67" reading_order_no="66" segment_no="2" tag_type="figure">M = 10</text>
<text top="447" left="285" width="20" height="14" font="font61" id="p54_t68" reading_order_no="67" segment_no="2" tag_type="figure">M = 5</text>
<text top="459" left="285" width="20" height="14" font="font61" id="p54_t69" reading_order_no="68" segment_no="2" tag_type="figure">M = 1<i>M</i></text>
<text top="508" left="108" width="396" height="9" font="font3" id="p54_t70" reading_order_no="69" segment_no="3" tag_type="text">Figure 6: Convergence of BTARD-SGD with τ = 1 depending on the maximal number of iterations</text>
<text top="519" left="108" width="136" height="9" font="font17" id="p54_t71" reading_order_no="70" segment_no="3" tag_type="text">M in the CenteredClip procedure.<i>M</i></text>
<text top="539" left="108" width="396" height="9" font="font3" id="p54_t72" reading_order_no="71" segment_no="4" tag_type="text">use the same configuration as in Section 4.1 , but with only 3 Byzantine peers out of 16 (just under</text>
<text top="550" left="108" width="396" height="9" font="font3" id="p54_t73" reading_order_no="72" segment_no="4" tag_type="text">20%). Figure 4 demonstrates similar behavior to our original setup, but with significantly weaker in<i>M</i></text>
<text top="560" left="108" width="115" height="9" font="font3" id="p54_t74" reading_order_no="73" segment_no="4" tag_type="text">magnitude across all attacks.</text>
<text top="577" left="108" width="396" height="9" font="font3" id="p54_t75" reading_order_no="74" segment_no="5" tag_type="text">Next, we explore a situation where Byzantine peers send incorrect gradients periodically, e.g. once<i>M</i></text>
<text top="588" left="108" width="396" height="9" font="font3" id="p54_t76" reading_order_no="75" segment_no="5" tag_type="text">per T iterations. This reduces the attack intensity, but allows them to stay undetected for longer. In</text>
<text top="599" left="108" width="396" height="9" font="font3" id="p54_t77" reading_order_no="76" segment_no="5" tag_type="text">this setting, we consider 7 Byzantine peers and reuse all parameters from the original setup, except</text>
<text top="609" left="108" width="396" height="10" font="font3" id="p54_t78" reading_order_no="77" segment_no="5" tag_type="text">for the new attack period. We consider T = 10 for both scenarios (early and late attacks). The attacks</text>
<text top="620" left="108" width="396" height="11" font="font3" id="p54_t79" reading_order_no="78" segment_no="5" tag_type="text">are performed at steps s + k · T, k ∈ N until the attacker is eventually banned. As expected, this</text>
<text top="631" left="108" width="396" height="9" font="font3" id="p54_t80" reading_order_no="79" segment_no="5" tag_type="text">setup increases the duration of each attack by a factor of T , but decreases the peak attack influence</text>
<text top="642" left="108" width="58" height="9" font="font3" id="p54_t81" reading_order_no="80" segment_no="5" tag_type="text">(see Figure 5 ).</text>
<text top="659" left="108" width="396" height="9" font="font3" id="p54_t82" reading_order_no="81" segment_no="6" tag_type="text">Finally, we evaluate the convergence and the final test accuracy of the less computationally intensive</text>
<text top="670" left="108" width="396" height="9" font="font3" id="p54_t83" reading_order_no="82" segment_no="6" tag_type="text">variants of BTARD-SGD that limit the maximal number of iterations in the CenteredClip procedure</text>
<text top="680" left="108" width="396" height="10" font="font3" id="p54_t84" reading_order_no="83" segment_no="6" tag_type="text">to M , where M varies from 1 to 50. In the setup with τ = 1 , we observe that M = 50 iterations<a href="deeplearning_paper1.html#8">4.1</a></text>
<text top="691" left="108" width="215" height="9" font="font3" id="p54_t85" reading_order_no="84" segment_no="6" tag_type="text">are always enough for CenteredClip to converge with<a href="deeplearning_paper1.html#8">, </a>but with only 3 Byzantine peers out of 16 (just under</text>
<text top="689" left="332" width="172" height="11" font="font18" id="p54_t86" reading_order_no="85" segment_no="6" tag_type="text">= 10 − 6 in absence of the attacks. Figure 6</text>
<text top="702" left="108" width="396" height="9" font="font3" id="p54_t87" reading_order_no="86" segment_no="6" tag_type="text">demonstrates that stopping the procedure earlier has negative effect on the final test accuracy. The<a href="deeplearning_paper1.html#53">4</a></text>
<text top="713" left="108" width="241" height="9" font="font3" id="p54_t88" reading_order_no="87" segment_no="6" tag_type="text">effect becomes more significant for the smaller values of M .</text>
<text top="743" left="301" width="10" height="9" font="font3" id="p54_t89" reading_order_no="88" segment_no="7" tag_type="text">54</text>
</page>
<page number="55" position="absolute" top="0" left="0" height="792" width="612">
<text top="74" left="108" width="6" height="11" font="font6" id="p55_t1" reading_order_no="0" segment_no="0" tag_type="title">J</text>
<text top="74" left="126" width="140" height="11" font="font6" id="p55_t2" reading_order_no="1" segment_no="0" tag_type="title">ALBERT experiment setup</text>
<text top="98" left="108" width="397" height="9" font="font3" id="p55_t3" reading_order_no="2" segment_no="1" tag_type="text">In the experiment described in Section 4.2 , we pretrain ALBERT [ 90 ] — a self-supervised Trans-</text>
<text top="109" left="108" width="396" height="9" font="font3" id="p55_t4" reading_order_no="3" segment_no="1" tag_type="text">former model for learning representations of language data. We specifically choose ALBERT instead<a href="deeplearning_paper1.html#9">4.2</a></text>
<text top="120" left="108" width="396" height="9" font="font3" id="p55_t5" reading_order_no="4" segment_no="1" tag_type="text">of other models like BERT [ 7 ] due to its high communication efficiency, which is caused by layerwise<a href="deeplearning_paper1.html#9">, </a>we pretrain ALBERT <a href="deeplearning_paper1.html#15">[</a></text>
<text top="131" left="108" width="398" height="9" font="font3" id="p55_t6" reading_order_no="5" segment_no="1" tag_type="text">weight sharing and embedding layer factorization. In particular, we focus on a communication-<a href="deeplearning_paper1.html#15">90</a></text>
<text top="142" left="108" width="396" height="9" font="font3" id="p55_t7" reading_order_no="6" segment_no="1" tag_type="text">efficient model, because the connection speed between the workers can become a noticeable constraint<a href="deeplearning_paper1.html#15">] </a>— a self-supervised Trans-</text>
<text top="153" left="108" width="396" height="9" font="font3" id="p55_t8" reading_order_no="7" segment_no="1" tag_type="text">when averaging gradients of models with hundreds of millions of parameters. We train ALBERT-large</text>
<text top="164" left="108" width="396" height="9" font="font3" id="p55_t9" reading_order_no="8" segment_no="1" tag_type="text">on sequences of 512 tokens from the WikiText-103 [ 91 ] dataset. The training procedure starts from a<a href="deeplearning_paper1.html#10">[</a></text>
<text top="175" left="108" width="396" height="9" font="font3" id="p55_t10" reading_order_no="9" segment_no="1" tag_type="text">random initialization, but the subword vocabulary [ 105 ] is the same as created by the authors of the<a href="deeplearning_paper1.html#10">7</a></text>
<text top="186" left="108" width="105" height="9" font="font3" id="p55_t11" reading_order_no="10" segment_no="1" tag_type="text">original ALBERT models.<a href="deeplearning_paper1.html#10">] </a>due to its high communication efficiency, which is caused by layerwise</text>
<text top="202" left="108" width="396" height="9" font="font3" id="p55_t12" reading_order_no="11" segment_no="2" tag_type="text">This model is trained with two objectives: masked language modeling (given a sentence with several</text>
<text top="213" left="108" width="396" height="9" font="font3" id="p55_t13" reading_order_no="12" segment_no="2" tag_type="text">masked tokens, predict the tokens that were masked) and sentence order prediction (given two</text>
<text top="224" left="108" width="396" height="9" font="font3" id="p55_t14" reading_order_no="13" segment_no="2" tag_type="text">segments from the same document, determine if they were swapped). We use LAMB optimizer [ 50 ]</text>
<text top="235" left="108" width="396" height="9" font="font3" id="p55_t15" reading_order_no="14" segment_no="2" tag_type="text">with batches that contain 4,096 examples, training with a peak learning rate equal to 0,00176 and a<a href="deeplearning_paper1.html#15">[</a></text>
<text top="246" left="108" width="396" height="9" font="font3" id="p55_t16" reading_order_no="15" segment_no="2" tag_type="text">warmup of 5,000 gradient descent steps. In addition, we use gradient clipping with a maximum norm<a href="deeplearning_paper1.html#15">91</a></text>
<text top="257" left="108" width="396" height="9" font="font3" id="p55_t17" reading_order_no="16" segment_no="2" tag_type="text">of 1 and weight decay regularization with the weight of 0,01. We run distributed training on 16 cloud<a href="deeplearning_paper1.html#15">] </a>dataset. The training procedure starts from a</text>
<text top="267" left="108" width="396" height="9" font="font3" id="p55_t18" reading_order_no="17" segment_no="2" tag_type="text">instances, each equipped with a single Tesla T4 GPU. Each training run takes 2–3 days, depending<a href="deeplearning_paper1.html#16">[</a></text>
<text top="278" left="108" width="108" height="9" font="font3" id="p55_t19" reading_order_no="18" segment_no="2" tag_type="text">on the instance availability.<a href="deeplearning_paper1.html#16">105</a></text>
<text top="743" left="301" width="10" height="9" font="font3" id="p55_t20" reading_order_no="19" segment_no="3" tag_type="text">55<a href="deeplearning_paper1.html#16">] </a>is the same as created by the authors of the</text>
</page>
<outline>
<item page="1">1 Introduction</item>
<item page="2">2 Related work</item>
<outline>
<item page="2">2.1 Distributed deep learning</item>
<item page="3">2.2 Byzantine-tolerant optimization</item>
<item page="4">2.3 Security in distributed systems</item>
</outline>
<item page="4">3 Method</item>
<outline>
<item page="4">3.1 Byzantine-Tolerant All-Reduce</item>
<item page="6">3.2 Convergence analysis</item>
<item page="7">3.3 System design considerations</item>
</outline>
<item page="8">4 Experiments</item>
<outline>
<item page="8">4.1 CIFAR10 classification</item>
<item page="9">4.2 Pre-training transformers</item>
</outline>
<item page="9">5 Conclusion</item>
<item page="17">A Table of contents</item>
<item page="17">B Secure distributed systems</item>
<outline>
<item page="17">B.1 Broadcast channels</item>
<item page="17">B.2 Multi-party pseudorandom number generation</item>
</outline>
<item page="18">C Compute and network overhead of BTARD</item>
<item page="18">D Overview of attack vectors</item>
<item page="19">E Detailed algorithm description</item>
<item page="25">F Convergence analysis: missing proofs and extra details</item>
<outline>
<item page="25">F.1 Preliminaries</item>
<item page="25">F.2 Convergence guarantees for BTARD-SGD</item>
<outline>
<item page="25">F.2.1 On Assumption 3.2</item>
<item page="25">F.2.2 Quality of the aggregation</item>
<item page="29">F.2.3 Non-convex case</item>
<item page="31">F.2.4 Convex case</item>
<item page="36">F.2.5 Strongly convex case: Restarted-BTARD-SGD</item>
</outline>
<item page="38">F.3 Convergence guarantees for BTARD-Clipped-SGD</item>
<outline>
<item page="39">F.3.1 Quality of the aggregation</item>
<item page="42">F.3.2 Convex case</item>
<item page="47">F.3.3 Strongly convex case: Restarted-BTARD-Clipped-SGD</item>
</outline>
</outline>
<item page="51">G Reputation system for public collaborations</item>
<item page="52">H Secure distributed hash tables</item>
<item page="53">I Extra evaluations on the CIFAR10 classification task</item>
<item page="55">J ALBERT experiment setup</item>
</outline>
</pdf2xml>
