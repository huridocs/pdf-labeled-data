<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">
<pdf2xml producer="poppler" version="23.04.0">
<page number="1" position="absolute" top="0" left="0" height="3196" width="2249">
	<fontspec id="font0" size="29" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font1" size="30" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font2" size="34" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font3" size="32" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font4" size="4" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font5" size="3" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font6" size="346" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font7" size="347" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font8" size="348" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font9" size="440" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font10" size="31" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font11" size="28" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font12" size="33" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font13" size="37" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font14" size="36" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font15" size="35" family="GlyphLessFont" color="#000000"/>
<text top="96" left="87" width="60" height="39" font="font0" id="p1_t1" reading_order_no="0" segment_no="0" tag_type="text">1138 </text>
<text top="96" left="607" width="1607" height="44" font="font1" id="p1_t2" reading_order_no="1" segment_no="1" tag_type="text">IEEE  TRANSACTIONS  ON  PATTERN  ANALYSIS  AND  MACHINE  INTELLIGENCE,  VOL.  23,  NO.  10,  OCTOBER  2001 </text>
<text top="203" left="1090" width="128" height="46" font="font2" id="p1_t3" reading_order_no="2" segment_no="2" tag_type="title">TABLE  1 </text>
<text top="242" left="606" width="1105" height="45" font="font3" id="p1_t4" reading_order_no="3" segment_no="3" tag_type="text">Comparison  between  Classical  Graph-Matching  Methods  in  Terms  of  Their </text>
<text top="279" left="616" width="1081" height="45" font="font3" id="p1_t5" reading_order_no="4" segment_no="3" tag_type="text">Computational  Complexity  and  the  Ability  to  Perform  an  Inexact  Matching </text>
<text top="364" left="1167" width="193" height="39" font="font0" id="p1_t6" reading_order_no="5" segment_no="4" tag_type="table">Error-tolerant </text>
<text top="364" left="1709" width="15" height="39" font="font0" id="p1_t7" reading_order_no="10" segment_no="4" tag_type="table">| </text>
<text top="407" left="783" width="95" height="42" font="font10" id="p1_t8" reading_order_no="6" segment_no="4" tag_type="table">Graph </text>
<text top="408" left="989" width="125" height="42" font="font10" id="p1_t9" reading_order_no="7" segment_no="4" tag_type="table">Subgraph </text>
<text top="408" left="1207" width="125" height="42" font="font10" id="p1_t10" reading_order_no="8" segment_no="4" tag_type="table">Subgraph </text>
<text top="409" left="1547" width="155" height="42" font="font10" id="p1_t11" reading_order_no="9" segment_no="4" tag_type="table">Complexity </text>
<text top="410" left="1802" width="53" height="42" font="font10" id="p1_t12" reading_order_no="11" segment_no="4" tag_type="table">Key </text>
<text top="453" left="750" width="755" height="44" font="font10" id="p1_t13" reading_order_no="12" segment_no="4" tag_type="table">Isomorphism |  Isomorphism |  Isomorphism  |  Optimal </text>
<text top="455" left="1578" width="81" height="42" font="font10" id="p1_t14" reading_order_no="13" segment_no="4" tag_type="table">Class </text>
<text top="456" left="1754" width="146" height="42" font="font10" id="p1_t15" reading_order_no="14" segment_no="4" tag_type="table">References </text>
<text top="499" left="401" width="331" height="43" font="font10" id="p1_t16" reading_order_no="15" segment_no="4" tag_type="table">Backtrack  tree  search _  | </text>
<text top="500" left="800" width="61" height="42" font="font10" id="p1_t17" reading_order_no="16" segment_no="4" tag_type="table">Yes </text>
<text top="500" left="1018" width="57" height="42" font="font10" id="p1_t18" reading_order_no="17" segment_no="4" tag_type="table">Yes </text>
<text top="501" left="1250" width="39" height="42" font="font10" id="p1_t19" reading_order_no="18" segment_no="4" tag_type="table">No </text>
<text top="501" left="1435" width="42" height="42" font="font10" id="p1_t20" reading_order_no="19" segment_no="4" tag_type="table">eR </text>
<text top="502" left="1604" width="42" height="42" font="font10" id="p1_t21" reading_order_no="20" segment_no="4" tag_type="table">NP </text>
<text top="547" left="399" width="241" height="39" font="font0" id="p1_t22" reading_order_no="21" segment_no="4" tag_type="table">Forward  checking </text>
<text top="548" left="814" width="47" height="39" font="font0" id="p1_t23" reading_order_no="22" segment_no="4" tag_type="table">Yer </text>
<text top="549" left="1014" width="61" height="39" font="font0" id="p1_t24" reading_order_no="23" segment_no="4" tag_type="table">Yes </text>
<text top="549" left="1249" width="41" height="39" font="font0" id="p1_t25" reading_order_no="24" segment_no="4" tag_type="table">No </text>
<text top="550" left="1430" width="47" height="39" font="font0" id="p1_t26" reading_order_no="25" segment_no="4" tag_type="table">Yes </text>
<text top="550" left="1593" width="49" height="39" font="font0" id="p1_t27" reading_order_no="26" segment_no="4" tag_type="table">NP </text>
<text top="551" left="1803" width="50" height="39" font="font0" id="p1_t28" reading_order_no="27" segment_no="4" tag_type="table">[32] </text>
<text top="588" left="400" width="251" height="46" font="font2" id="p1_t29" reading_order_no="28" segment_no="4" tag_type="table">Discrete  relaxation </text>
<text top="589" left="804" width="56" height="46" font="font2" id="p1_t30" reading_order_no="29" segment_no="4" tag_type="table">Yes </text>
<text top="590" left="1017" width="56" height="46" font="font2" id="p1_t31" reading_order_no="30" segment_no="4" tag_type="table">Yes </text>
<text top="590" left="1228" width="69" height="46" font="font2" id="p1_t32" reading_order_no="31" segment_no="4" tag_type="table">Yes! </text>
<text top="591" left="1419" width="56" height="46" font="font2" id="p1_t33" reading_order_no="32" segment_no="4" tag_type="table">Yes </text>
<text top="591" left="1597" width="54" height="46" font="font2" id="p1_t34" reading_order_no="33" segment_no="4" tag_type="table">NP? </text>
<text top="592" left="1803" width="50" height="46" font="font2" id="p1_t35" reading_order_no="34" segment_no="4" tag_type="table">[12] </text>
<text top="638" left="400" width="253" height="42" font="font10" id="p1_t36" reading_order_no="35" segment_no="4" tag_type="table">Association  graphs </text>
<text top="639" left="806" width="55" height="42" font="font10" id="p1_t37" reading_order_no="36" segment_no="4" tag_type="table">axes </text>
<text top="639" left="1017" width="57" height="42" font="font10" id="p1_t38" reading_order_no="37" segment_no="4" tag_type="table">Yes </text>
<text top="640" left="1250" width="39" height="42" font="font10" id="p1_t39" reading_order_no="38" segment_no="4" tag_type="table">No </text>
<text top="640" left="1419" width="57" height="42" font="font10" id="p1_t40" reading_order_no="39" segment_no="4" tag_type="table">Yes </text>
<text top="640" left="1604" width="42" height="42" font="font10" id="p1_t41" reading_order_no="40" segment_no="4" tag_type="table">NP </text>
<text top="641" left="1777" width="101" height="42" font="font10" id="p1_t42" reading_order_no="41" segment_no="4" tag_type="table">[14,  23] </text>
<text top="687" left="400" width="182" height="38" font="font11" id="p1_t43" reading_order_no="42" segment_no="4" tag_type="table">Graph  edition </text>
<text top="688" left="814" width="47" height="38" font="font11" id="p1_t44" reading_order_no="43" segment_no="4" tag_type="table">Yes </text>
<text top="688" left="1015" width="59" height="38" font="font11" id="p1_t45" reading_order_no="44" segment_no="4" tag_type="table">Yes </text>
<text top="689" left="1233" width="60" height="38" font="font11" id="p1_t46" reading_order_no="45" segment_no="4" tag_type="table">Yes </text>
<text top="689" left="1430" width="46" height="38" font="font11" id="p1_t47" reading_order_no="46" segment_no="4" tag_type="table">Yes </text>
<text top="689" left="1591" width="54" height="38" font="font11" id="p1_t48" reading_order_no="47" segment_no="4" tag_type="table">NP </text>
<text top="690" left="1760" width="135" height="38" font="font11" id="p1_t49" reading_order_no="48" segment_no="4" tag_type="table">(724536) </text>
<text top="728" left="399" width="210" height="45" font="font12" id="p1_t50" reading_order_no="49" segment_no="4" tag_type="table">Random  graphs </text>
<text top="729" left="803" width="58" height="45" font="font12" id="p1_t51" reading_order_no="50" segment_no="4" tag_type="table">Yes </text>
<text top="730" left="1017" width="58" height="45" font="font12" id="p1_t52" reading_order_no="51" segment_no="4" tag_type="table">Yes </text>
<text top="730" left="1246" width="47" height="45" font="font12" id="p1_t53" reading_order_no="52" segment_no="4" tag_type="table">Yes </text>
<text top="731" left="1443" width="31" height="45" font="font12" id="p1_t54" reading_order_no="53" segment_no="4" tag_type="table">ce </text>
<text top="731" left="1586" width="60" height="45" font="font12" id="p1_t55" reading_order_no="54" segment_no="4" tag_type="table">NP </text>
<text top="732" left="1778" width="101" height="45" font="font12" id="p1_t56" reading_order_no="55" segment_no="4" tag_type="table">[25,  38] </text>
<text top="779" left="400" width="309" height="38" font="font11" id="p1_t57" reading_order_no="56" segment_no="4" tag_type="table">Probabilistic  relaxation </text>
<text top="780" left="814" width="47" height="38" font="font11" id="p1_t58" reading_order_no="57" segment_no="4" tag_type="table">Yes </text>
<text top="781" left="1016" width="59" height="38" font="font11" id="p1_t59" reading_order_no="58" segment_no="4" tag_type="table">Yes </text>
<text top="781" left="1234" width="59" height="38" font="font11" id="p1_t60" reading_order_no="59" segment_no="4" tag_type="table">Yes </text>
<text top="782" left="1434" width="40" height="38" font="font11" id="p1_t61" reading_order_no="60" segment_no="4" tag_type="table">No </text>
<text top="782" left="1617" width="17" height="38" font="font11" id="p1_t62" reading_order_no="61" segment_no="4" tag_type="table">P </text>
<text top="783" left="1744" width="168" height="38" font="font11" id="p1_t63" reading_order_no="62" segment_no="4" tag_type="table">(520,  11534) </text>
<text top="825" left="400" width="220" height="38" font="font11" id="p1_t64" reading_order_no="63" segment_no="4" tag_type="table">Neural  networks </text>
<text top="826" left="802" width="59" height="38" font="font11" id="p1_t65" reading_order_no="64" segment_no="4" tag_type="table">Yes </text>
<text top="827" left="1016" width="54" height="38" font="font11" id="p1_t66" reading_order_no="65" segment_no="4" tag_type="table">Yes </text>
<text top="827" left="1234" width="58" height="38" font="font11" id="p1_t67" reading_order_no="66" segment_no="4" tag_type="table">Yes </text>
<text top="828" left="1434" width="35" height="38" font="font11" id="p1_t68" reading_order_no="67" segment_no="4" tag_type="table">No </text>
<text top="828" left="1616" width="17" height="38" font="font11" id="p1_t69" reading_order_no="68" segment_no="4" tag_type="table">P </text>
<text top="829" left="1752" width="152" height="38" font="font11" id="p1_t70" reading_order_no="69" segment_no="4" tag_type="table">(16,  29,  28] </text>
<text top="871" left="400" width="253" height="38" font="font11" id="p1_t71" reading_order_no="70" segment_no="4" tag_type="table">Genetic  algorithms </text>
<text top="872" left="814" width="47" height="38" font="font11" id="p1_t72" reading_order_no="71" segment_no="4" tag_type="table">Yes </text>
<text top="873" left="1015" width="60" height="38" font="font11" id="p1_t73" reading_order_no="72" segment_no="4" tag_type="table">Yes </text>
<text top="873" left="1233" width="60" height="38" font="font11" id="p1_t74" reading_order_no="73" segment_no="4" tag_type="table">Yes </text>
<text top="874" left="1433" width="40" height="38" font="font11" id="p1_t75" reading_order_no="74" segment_no="4" tag_type="table">No </text>
<text top="874" left="1616" width="17" height="38" font="font11" id="p1_t76" reading_order_no="75" segment_no="4" tag_type="table">P </text>
<text top="875" left="1769" width="118" height="38" font="font11" id="p1_t77" reading_order_no="76" segment_no="4" tag_type="table">(6,  9,  15] </text>
<text top="914" left="399" width="273" height="42" font="font10" id="p1_t78" reading_order_no="77" segment_no="4" tag_type="table">Eigendecomposition </text>
<text top="915" left="803" width="58" height="42" font="font10" id="p1_t79" reading_order_no="78" segment_no="4" tag_type="table">Yes </text>
<text top="916" left="1032" width="39" height="42" font="font10" id="p1_t80" reading_order_no="79" segment_no="4" tag_type="table">No </text>
<text top="916" left="1230" width="65" height="42" font="font10" id="p1_t81" reading_order_no="80" segment_no="4" tag_type="table">No® </text>
<text top="917" left="1416" width="61" height="42" font="font10" id="p1_t82" reading_order_no="81" segment_no="4" tag_type="table">Yes </text>
<text top="917" left="1615" width="19" height="42" font="font10" id="p1_t83" reading_order_no="82" segment_no="4" tag_type="table">Re </text>
<text top="918" left="1803" width="50" height="42" font="font10" id="p1_t84" reading_order_no="83" segment_no="4" tag_type="table">[33] </text>
<text top="960" left="401" width="275" height="42" font="font10" id="p1_t85" reading_order_no="84" segment_no="4" tag_type="table">Linear  programming </text>
<text top="961" left="804" width="57" height="42" font="font10" id="p1_t86" reading_order_no="85" segment_no="4" tag_type="table">Yes </text>
<text top="962" left="1032" width="40" height="42" font="font10" id="p1_t87" reading_order_no="86" segment_no="4" tag_type="table">No </text>
<text top="962" left="1250" width="40" height="42" font="font10" id="p1_t88" reading_order_no="87" segment_no="4" tag_type="table">No </text>
<text top="963" left="1420" width="57" height="42" font="font10" id="p1_t89" reading_order_no="88" segment_no="4" tag_type="table">Yes </text>
<text top="963" left="1616" width="18" height="42" font="font10" id="p1_t90" reading_order_no="89" segment_no="4" tag_type="table">P </text>
<text top="964" left="1811" width="34" height="42" font="font10" id="p1_t91" reading_order_no="90" segment_no="4" tag_type="table">[2] </text>
<text top="1004" left="399" width="199" height="45" font="font12" id="p1_t92" reading_order_no="91" segment_no="4" tag_type="table">Indexed  search </text>
<text top="1005" left="803" width="58" height="45" font="font12" id="p1_t93" reading_order_no="92" segment_no="4" tag_type="table">Yes </text>
<text top="1006" left="1017" width="55" height="45" font="font12" id="p1_t94" reading_order_no="93" segment_no="4" tag_type="table">Yes </text>
<text top="1006" left="1249" width="40" height="45" font="font12" id="p1_t95" reading_order_no="94" segment_no="4" tag_type="table">No </text>
<text top="1007" left="1419" width="55" height="45" font="font12" id="p1_t96" reading_order_no="95" segment_no="4" tag_type="table">Yes </text>
<text top="1007" left="1608" width="32" height="45" font="font12" id="p1_t97" reading_order_no="96" segment_no="4" tag_type="table">pt </text>
<text top="1008" left="1785" width="86" height="45" font="font12" id="p1_t98" reading_order_no="97" segment_no="4" tag_type="table">[4,  27] </text>
<text top="1050" left="403" width="357" height="46" font="font2" id="p1_t99" reading_order_no="98" segment_no="5" tag_type="text">'  In  some  cases  (e.g.  [12]). </text>
<text top="1100" left="400" width="482" height="41" font="font1" id="p1_t100" reading_order_no="99" segment_no="6" tag_type="text">?  If  backtracking  follows  relaxation. </text>
<text top="1145" left="400" width="1097" height="45" font="font10" id="p1_t101" reading_order_no="100" segment_no="7" tag_type="text">3  Although  is  able  to  find  error-tolerant  graph  isomorphism  between  close  graphs. </text>
<text top="1185" left="401" width="661" height="53" font="font13" id="p1_t102" reading_order_no="101" segment_no="8" tag_type="text">*  Although  the  compilation  of  the  database  is  NP. </text>
<text top="1314" left="89" width="1043" height="50" font="font14" id="p1_t103" reading_order_no="102" segment_no="9" tag_type="text">relaxation  procedure.  Another  continuous  optimization  approach </text>
<text top="1361" left="89" width="1043" height="46" font="font12" id="p1_t104" reading_order_no="103" segment_no="9" tag_type="text">is  based  on  neural  networks  [16],  [28],  [29].  The  nodes  of  a  neural </text>
<text top="1402" left="88" width="1043" height="50" font="font13" id="p1_t105" reading_order_no="104" segment_no="9" tag_type="text">network  can  represent  vertex-to-vertex  mappings  and  the  connec- </text>
<text top="1447" left="89" width="1044" height="49" font="font15" id="p1_t106" reading_order_no="105" segment_no="9" tag_type="text">tion  weights  between  two  network  nodes  represent  a  measure  of </text>
<text top="1492" left="89" width="1042" height="47" font="font15" id="p1_t107" reading_order_no="106" segment_no="9" tag_type="text">the  compatibility  between  the  corresponding  mappings.  The </text>
<text top="1534" left="89" width="1042" height="52" font="font13" id="p1_t108" reading_order_no="107" segment_no="9" tag_type="text">network  is  programmed  in  order  to  minimize  an  energy  (cost) </text>
<text top="1580" left="89" width="1042" height="49" font="font14" id="p1_t109" reading_order_no="108" segment_no="9" tag_type="text">function  which  is  defined  in  terms  of  the  compatibility  between </text>
<text top="1623" left="89" width="1042" height="52" font="font13" id="p1_t110" reading_order_no="109" segment_no="9" tag_type="text">mappings.  The  problem  of  neural  networks  is  that  the  minimiza- </text>
<text top="1668" left="89" width="1042" height="51" font="font14" id="p1_t111" reading_order_no="110" segment_no="9" tag_type="text">tion  procedure  is  strongly  dependent  on  the  initialization  of  the </text>
<text top="1713" left="89" width="1043" height="49" font="font14" id="p1_t112" reading_order_no="111" segment_no="9" tag_type="text">network.  Genetic  algorithms  is  another  technique  used  to  find  the </text>
<text top="1761" left="88" width="1043" height="43" font="font3" id="p1_t113" reading_order_no="112" segment_no="9" tag_type="text">best  match  between  two  graphs  [6],  [9],  [15].  Vectors  of  genes  are </text>
<text top="1801" left="89" width="1043" height="51" font="font14" id="p1_t114" reading_order_no="113" segment_no="9" tag_type="text">defined  to  represent  mappings  from  model  vertices  to  input </text>
<text top="1846" left="89" width="1042" height="50" font="font14" id="p1_t115" reading_order_no="114" segment_no="9" tag_type="text">vertices.  These  solution  vectors  are  combined  by  genetic  operators </text>
<text top="1890" left="89" width="280" height="49" font="font14" id="p1_t116" reading_order_no="115" segment_no="9" tag_type="text">to  find  a  solution. </text>
<text top="1933" left="138" width="995" height="50" font="font13" id="p1_t117" reading_order_no="116" segment_no="10" tag_type="text">Algebraic  Algorithms.  Weighted  graphs  are  a  particular  type  of </text>
<text top="1977" left="89" width="1042" height="50" font="font14" id="p1_t118" reading_order_no="117" segment_no="10" tag_type="text">graphs  which  have  weights  assigned  to  their  edges.  A  weighted </text>
<text top="2021" left="89" width="1042" height="50" font="font13" id="p1_t119" reading_order_no="118" segment_no="10" tag_type="text">graph G  can  be  represented  by  an  adjacency  matrix  A(G),  where  a </text>
<text top="2066" left="89" width="1031" height="49" font="font14" id="p1_t120" reading_order_no="119" segment_no="10" tag_type="text">position  a;;  contains  the  weight  associated  with  the  edge (v,  v;). </text>
<text top="2111" left="90" width="1042" height="49" font="font14" id="p1_t121" reading_order_no="120" segment_no="10" tag_type="text">An  analytic  approach  can  then  be  used  to  solve  the  matching </text>
<text top="2155" left="88" width="1043" height="50" font="font14" id="p1_t122" reading_order_no="121" segment_no="10" tag_type="text">problem.  Interesting  approaches  based  on  algebraic  manipulations </text>
<text top="2200" left="89" width="1042" height="49" font="font14" id="p1_t123" reading_order_no="122" segment_no="10" tag_type="text">of  adjacency  matrices  were  respectively  proposed  by  Umeyama </text>
<text top="2246" left="91" width="1041" height="46" font="font2" id="p1_t124" reading_order_no="123" segment_no="10" tag_type="text">[33]  (eigendecomposition)  and  Almohamad  and  Duffuaa  [2]  (linear </text>
<text top="2287" left="89" width="1042" height="50" font="font13" id="p1_t125" reading_order_no="124" segment_no="10" tag_type="text">programming).  These  methods  only  work  when  both  model  and </text>
<text top="2333" left="89" width="732" height="49" font="font14" id="p1_t126" reading_order_no="125" segment_no="10" tag_type="text">input  graphs  have  the  same  number  of  nodes. </text>
<text top="2376" left="139" width="992" height="49" font="font14" id="p1_t127" reading_order_no="126" segment_no="11" tag_type="text">Indexed  Search.  Graph  matching  is  also  used  in  content-based </text>
<text top="2420" left="89" width="1043" height="49" font="font14" id="p1_t128" reading_order_no="127" segment_no="11" tag_type="text">image  retrieval.  When  image  concepts  can  be  represented  by  graph </text>
<text top="2466" left="90" width="1042" height="47" font="font15" id="p1_t129" reading_order_no="128" segment_no="11" tag_type="text">structures,  the  problem  of  looking  in  the  database  for  an  image  that </text>
<text top="2510" left="88" width="1043" height="47" font="font15" id="p1_t130" reading_order_no="129" segment_no="11" tag_type="text">contains  a  certain  object  can  be  stated  in  terms  of  an  indexed  search </text>
<text top="2554" left="89" width="1042" height="49" font="font14" id="p1_t131" reading_order_no="130" segment_no="11" tag_type="text">in  a  graph  database.  Sossa  and  Horaud  [27]  proposed  using  the </text>
<text top="2597" left="89" width="1043" height="50" font="font13" id="p1_t132" reading_order_no="131" segment_no="11" tag_type="text">second  immanantal  polynomial  of  the  Laplacian  matrix  of  a  graph </text>
<text top="2641" left="89" width="1042" height="52" font="font13" id="p1_t133" reading_order_no="132" segment_no="11" tag_type="text">for  hash-coding  any  graph.  Bunke  and  Messmer  [4]  proposed  a </text>
<text top="2688" left="90" width="1043" height="47" font="font15" id="p1_t134" reading_order_no="133" segment_no="11" tag_type="text">decision  tree  approach  organized  in  terms  of  the  different </text>
<text top="2731" left="88" width="1043" height="49" font="font14" id="p1_t135" reading_order_no="134" segment_no="11" tag_type="text">permutations  of  the  adjacency  matrices  of  the  graphs  in  the </text>
<text top="2774" left="89" width="1042" height="50" font="font13" id="p1_t136" reading_order_no="135" segment_no="11" tag_type="text">database.  Indexed  search  usually  requires  an  exponential  complex- </text>
<text top="2819" left="89" width="614" height="49" font="font14" id="p1_t137" reading_order_no="136" segment_no="11" tag_type="text">ity  for  the  compilation  of  the  database. </text>
<text top="2865" left="139" width="993" height="49" font="font14" id="p1_t138" reading_order_no="137" segment_no="12" tag_type="text">In  this  paper,  an  error-tolerant  subgraph  isomorphism  algo- </text>
<text top="2911" left="89" width="1042" height="51" font="font14" id="p1_t139" reading_order_no="138" segment_no="12" tag_type="text">rithm  for  symbol  recognition  in  a  graphics  recognition  framework  is </text>
<text top="2957" left="89" width="1043" height="50" font="font13" id="p1_t140" reading_order_no="139" segment_no="12" tag_type="text">described.  Graphics  recognition  is  a  growing  area  within  the </text>
<text top="3005" left="90" width="1042" height="47" font="font15" id="p1_t141" reading_order_no="140" segment_no="12" tag_type="text">document  analysis  field  devoted  to  recognizing  graphical  entities  in </text>
<text top="3050" left="89" width="1043" height="49" font="font14" id="p1_t142" reading_order_no="141" segment_no="12" tag_type="text">printed  documents  such  as  maps,  plans,  diagrams,  engineering </text>
<text top="1318" left="1183" width="1039" height="51" font="font14" id="p1_t143" reading_order_no="142" segment_no="13" tag_type="text">drawings,  etc.  Graph  matching  methods  are  often  proposed  to  solve </text>
<text top="1364" left="1183" width="1039" height="52" font="font13" id="p1_t144" reading_order_no="143" segment_no="13" tag_type="text">the  problem  of  recognizing  symbols  in  line  drawings  or  diagrams </text>
<text top="1414" left="1184" width="1038" height="47" font="font12" id="p1_t145" reading_order_no="144" segment_no="13" tag_type="text">[12],  [16],  [17].  The  problem  consists  in  finding  a  model  graph  that </text>
<text top="1458" left="1183" width="1039" height="51" font="font14" id="p1_t146" reading_order_no="145" segment_no="13" tag_type="text">represents  the  prototype  symbol  as  a  subgraph  of  an  input  graph </text>
<text top="1506" left="1183" width="1039" height="49" font="font15" id="p1_t147" reading_order_no="146" segment_no="13" tag_type="text">representing  the  diagram.  We  propose  a  two-level  graph  repre- </text>
<text top="1553" left="1184" width="1038" height="49" font="font15" id="p1_t148" reading_order_no="147" segment_no="13" tag_type="text">sentation.  In  the  first  level,  the  vectorized  document  is  approxi- </text>
<text top="1598" left="1182" width="1039" height="52" font="font13" id="p1_t149" reading_order_no="148" segment_no="13" tag_type="text">mated  by  graphs  whose  nodes  represent  characteristic  points </text>
<text top="1647" left="1184" width="1038" height="49" font="font15" id="p1_t150" reading_order_no="149" segment_no="13" tag_type="text">(junctions,  end,  or  corner  points)  and  whose  edges  approximate  the </text>
<text top="1693" left="1183" width="1039" height="51" font="font14" id="p1_t151" reading_order_no="150" segment_no="13" tag_type="text">segments  between  characteristic  points.  In  the  second  level,  data  is </text>
<text top="1741" left="1184" width="1038" height="49" font="font15" id="p1_t152" reading_order_no="151" segment_no="13" tag_type="text">organized  in  terms  of  Region  Adjacency  Graphs  (RAG).  The  RAG </text>
<text top="1786" left="1182" width="1040" height="52" font="font13" id="p1_t153" reading_order_no="152" segment_no="13" tag_type="text">nodes  represent  the  regions,  i.e.,  minimal  closed  loops  of  the  first- </text>
<text top="1834" left="1183" width="1039" height="50" font="font14" id="p1_t154" reading_order_no="153" segment_no="13" tag_type="text">level  graphs,  and  the  edges  are  the  neighboring  relations  between </text>
<text top="1879" left="1183" width="1040" height="52" font="font13" id="p1_t155" reading_order_no="154" segment_no="13" tag_type="text">loops.  A  given  first-level  graph’  region  (RAG  node)  is  encoded  by </text>
<text top="1928" left="1183" width="1040" height="49" font="font15" id="p1_t156" reading_order_no="155" segment_no="13" tag_type="text">its  shape  description  using  an  attributed  cyclic  string  containing  the </text>
<text top="1974" left="1183" width="1040" height="51" font="font14" id="p1_t157" reading_order_no="156" segment_no="13" tag_type="text">sequence  of  graph  edges  defining  the  region.  Symbols  are  then </text>
<text top="2021" left="1183" width="1040" height="51" font="font14" id="p1_t158" reading_order_no="157" segment_no="13" tag_type="text">recognized  in  terms  of  an  inexact  graph-matching  procedure  that </text>
<text top="2067" left="1183" width="1040" height="52" font="font13" id="p1_t159" reading_order_no="158" segment_no="13" tag_type="text">computes  the  minimum  distance  from  a  model  RAG  to  an  input </text>
<text top="2115" left="1183" width="1039" height="51" font="font14" id="p1_t160" reading_order_no="159" segment_no="13" tag_type="text">RAG.  This  distance  is  considered  to  be  the  weighted  sum  of  the </text>
<text top="2161" left="1183" width="1038" height="52" font="font13" id="p1_t161" reading_order_no="160" segment_no="13" tag_type="text">costs  of  edit  operations  to  transform  one  graph  into  the  other.  The </text>
<text top="2208" left="1183" width="1039" height="52" font="font13" id="p1_t162" reading_order_no="161" segment_no="13" tag_type="text">distance  between  RAGs  conveys  also  a  distance  computation </text>
<text top="2255" left="1182" width="1039" height="52" font="font13" id="p1_t163" reading_order_no="162" segment_no="13" tag_type="text">between  regions.  Since  region  boundaries  are  encoded  by  strings, </text>
<text top="2301" left="1183" width="1038" height="53" font="font13" id="p1_t164" reading_order_no="163" segment_no="13" tag_type="text">their  similarity  is  defined  in  terms  of  a  string  edit  distance </text>
<text top="2352" left="1183" width="261" height="46" font="font2" id="p1_t165" reading_order_no="164" segment_no="13" tag_type="text">formulation  [34]. </text>
<text top="2393" left="1232" width="989" height="50" font="font13" id="p1_t166" reading_order_no="165" segment_no="14" tag_type="text">Since  the  matching  algorithm  is  formulated  in  terms  of  an  error- </text>
<text top="2438" left="1183" width="1038" height="50" font="font14" id="p1_t167" reading_order_no="166" segment_no="14" tag_type="text">tolerant  subgraph  isomorphism,  it  can  also  be  applied  to  disturbed </text>
<text top="2483" left="1184" width="1037" height="49" font="font14" id="p1_t168" reading_order_no="167" segment_no="14" tag_type="text">documents  such  as  hand  drawn,  inaccurately  vectorized,  or </text>
<text top="2532" left="1183" width="1037" height="43" font="font3" id="p1_t169" reading_order_no="168" segment_no="14" tag_type="text">documents  scanned  with  an  insufficient  resolution.  In  addition, </text>
<text top="2572" left="1183" width="1038" height="50" font="font13" id="p1_t170" reading_order_no="169" segment_no="14" tag_type="text">our  graph-matching  algorithm,  proposed  in  the  field  of  graphics </text>
<text top="2616" left="1183" width="1038" height="52" font="font13" id="p1_t171" reading_order_no="170" segment_no="14" tag_type="text">recognition,  could  be  extended  to  other  object  recognition  frame- </text>
<text top="2664" left="1182" width="1040" height="47" font="font15" id="p1_t172" reading_order_no="171" segment_no="14" tag_type="text">works  whenever  a  previous  segmentation  stage  is  assumed,  from </text>
<text top="2707" left="1182" width="1038" height="50" font="font13" id="p1_t173" reading_order_no="172" segment_no="14" tag_type="text">which  regions  are  extracted  from  the  input  image  according  to  a </text>
<text top="2752" left="1182" width="1039" height="50" font="font14" id="p1_t174" reading_order_no="173" segment_no="14" tag_type="text">homogeneity  criterion  such  as  color  or  texture,  a  Voronoi </text>
<text top="2801" left="1183" width="1038" height="45" font="font3" id="p1_t175" reading_order_no="174" segment_no="14" tag_type="text">tessellation  of  the  image  plane,  etc.  Thus,  although  the  low-level </text>
<text top="2842" left="1183" width="1061" height="51" font="font14" id="p1_t176" reading_order_no="175" segment_no="14" tag_type="text">procedure  to  extract  regions  from  the  input  image  is  application-  ‘ </text>
<text top="2886" left="1183" width="1038" height="52" font="font13" id="p1_t177" reading_order_no="176" segment_no="14" tag_type="text">dependent,  the  graph-matching  algorithm  proposed  in  this  paper </text>
<text top="2930" left="1183" width="428" height="50" font="font13" id="p1_t178" reading_order_no="177" segment_no="14" tag_type="text">is  application~independent. </text>
<text top="3019" left="1226" width="995" height="46" font="font12" id="p1_t179" reading_order_no="178" segment_no="15" tag_type="text">1.  In  the  remainder  of  this  paper,  first-level  attributed  graphs  will  be </text>
<text top="3055" left="1183" width="993" height="45" font="font12" id="p1_t180" reading_order_no="179" segment_no="15" tag_type="text">referred  to  as  plain  graphs  or  just  graphs  to  avoid  confusion  with  RAGs.</text>
</page>
</pdf2xml>
