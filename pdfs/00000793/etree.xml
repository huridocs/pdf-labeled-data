<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">
<pdf2xml producer="poppler" version="23.04.0">
<page number="1" position="absolute" top="0" left="0" height="3165" width="2187">
	<fontspec id="font0" size="34" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font1" size="32" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font2" size="33" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font3" size="41" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font4" size="42" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font5" size="3" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font6" size="4" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font7" size="30" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font8" size="40" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font9" size="25" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font10" size="39" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font11" size="47" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font12" size="44" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font13" size="50" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font14" size="28" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font15" size="43" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font16" size="38" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font17" size="36" family="GlyphLessFont" color="#000000"/>
<text top="249" left="143" width="95" height="46" font="font0" id="p1_t1" reading_order_no="0" segment_no="0" tag_type="figure">SE</text>
<text top="249" left="311" width="361" height="47" font="font0" id="p1_t2" reading_order_no="1" segment_no="0" tag_type="figure">RE  a  ay  pee RN</text>
<text top="251" left="784" width="137" height="46" font="font0" id="p1_t3" reading_order_no="2" segment_no="0" tag_type="figure">ERS  (cle</text>
<text top="252" left="1092" width="88" height="46" font="font0" id="p1_t4" reading_order_no="3" segment_no="0" tag_type="figure">ee</text>
<text top="301" left="152" width="1143" height="46" font="font1" id="p1_t5" reading_order_no="4" segment_no="2" tag_type="title">Table  4.  Comparison  of  implementations  using  a  0.13-um  application-</text>
<text top="350" left="152" width="1000" height="47" font="font2" id="p1_t6" reading_order_no="5" segment_no="2" tag_type="title">specific  integrated  circuit  library  and  a  500-kHz  clock  frequency.</text>
<text top="262" left="1372" width="744" height="57" font="font3" id="p1_t7" reading_order_no="94" segment_no="1" tag_type="text">AES  use  permutations  and  expansions  as</text>
<text top="311" left="1372" width="744" height="58" font="font3" id="p1_t8" reading_order_no="95" segment_no="1" tag_type="text">nonlinear  diffusion  elements.  Fixed  shifts</text>
<text top="360" left="1372" width="745" height="61" font="font4" id="p1_t9" reading_order_no="96" segment_no="1" tag_type="text">and  rotations  serve  the  same  purpose  and</text>
<text top="411" left="1372" width="744" height="59" font="font4" id="p1_t10" reading_order_no="97" segment_no="1" tag_type="text">are  frequently  used  in  both  block  ciphers</text>
<text top="442" left="496" width="137" height="41" font="font7" id="p1_t11" reading_order_no="7" segment_no="3" tag_type="table">Power  (pW)</text>
<text top="444" left="899" width="66" height="41" font="font7" id="p1_t12" reading_order_no="8" segment_no="3" tag_type="table">Delay</text>
<text top="444" left="1020" width="64" height="41" font="font7" id="p1_t13" reading_order_no="9" segment_no="3" tag_type="table">Clock</text>
<text top="445" left="1155" width="49" height="41" font="font7" id="p1_t14" reading_order_no="10" segment_no="3" tag_type="table">PDP</text>
<text top="487" left="153" width="185" height="46" font="font0" id="p1_t15" reading_order_no="6" segment_no="3" tag_type="table">Implementation</text>
<text top="487" left="443" width="50" height="46" font="font0" id="p1_t16" reading_order_no="11" segment_no="3" tag_type="table">Poyn</text>
<text top="487" left="554" width="47" height="46" font="font0" id="p1_t17" reading_order_no="12" segment_no="3" tag_type="table">.</text>
<text top="487" left="650" width="178" height="46" font="font0" id="p1_t18" reading_order_no="13" segment_no="3" tag_type="table">Total  =  Area’</text>
<text top="488" left="899" width="45" height="46" font="font0" id="p1_t19" reading_order_no="14" segment_no="3" tag_type="table">(ns)</text>
<text top="488" left="1020" width="248" height="46" font="font0" id="p1_t20" reading_order_no="15" segment_no="3" tag_type="table">cycles?  =  (ns  x  pW)</text>
<text top="488" left="1374" width="741" height="46" font="font0" id="p1_t21" reading_order_no="98" segment_no="1" tag_type="text">(such  as  AES,  MARS,  Serpent,  and  Twofish)</text>
<text top="513" left="1372" width="744" height="56" font="font8" id="p1_t22" reading_order_no="99" segment_no="1" tag_type="text">and  hash  functions  (such  as  MD2,  SHA-1,</text>
<text top="559" left="153" width="206" height="34" font="font9" id="p1_t23" reading_order_no="16" segment_no="3" tag_type="table">oeaae  -</text>
<text top="559" left="446" width="50" height="34" font="font9" id="p1_t24" reading_order_no="17" segment_no="3" tag_type="table">408</text>
<text top="559" left="542" width="46" height="34" font="font9" id="p1_t25" reading_order_no="18" segment_no="3" tag_type="table">“154</text>
<text top="559" left="647" width="45" height="34" font="font9" id="p1_t26" reading_order_no="19" segment_no="3" tag_type="table">19.4</text>
<text top="560" left="771" width="64" height="34" font="font9" id="p1_t27" reading_order_no="20" segment_no="3" tag_type="table">2,850</text>
<text top="560" left="910" width="50" height="34" font="font9" id="p1_t28" reading_order_no="21" segment_no="3" tag_type="table">0.69</text>
<text top="560" left="1019" width="80" height="34" font="font9" id="p1_t29" reading_order_no="22" segment_no="3" tag_type="table">29,225</text>
<text top="560" left="1182" width="64" height="34" font="font9" id="p1_t30" reading_order_no="23" segment_no="3" tag_type="table">13.18</text>
<text top="560" left="1371" width="746" height="34" font="font9" id="p1_t31" reading_order_no="100" segment_no="1" tag_type="text">MD4,  and  MDS).  Common  to all of  these</text>
<text top="617" left="153" width="138" height="53" font="font10" id="p1_t32" reading_order_no="24" segment_no="3" tag_type="table">NtruEnerypt</text>
<text top="617" left="446" width="145" height="53" font="font10" id="p1_t33" reading_order_no="26" segment_no="3" tag_type="table">i0).  as</text>
<text top="617" left="646" width="49" height="53" font="font10" id="p1_t34" reading_order_no="27" segment_no="3" tag_type="table">are</text>
<text top="617" left="771" width="64" height="53" font="font10" id="p1_t35" reading_order_no="28" segment_no="3" tag_type="table">3080</text>
<text top="617" left="910" width="49" height="53" font="font10" id="p1_t36" reading_order_no="29" segment_no="3" tag_type="table">kao</text>
<text top="617" left="1034" width="64" height="53" font="font10" id="p1_t37" reading_order_no="30" segment_no="3" tag_type="table">See</text>
<text top="617" left="1183" width="48" height="53" font="font10" id="p1_t38" reading_order_no="31" segment_no="3" tag_type="table">ae</text>
<text top="617" left="1372" width="744" height="53" font="font10" id="p1_t39" reading_order_no="101" segment_no="1" tag_type="text">functions  is  that  their  implementation  intro-</text>
<text top="665" left="153" width="220" height="55" font="font3" id="p1_t40" reading_order_no="25" segment_no="3" tag_type="table">(8  arithmetic  units)</text>
<text top="665" left="1371" width="745" height="55" font="font3" id="p1_t41" reading_order_no="102" segment_no="1" tag_type="text">duces  virtually  no  cost  because  they  require</text>
<text top="712" left="153" width="140" height="64" font="font11" id="p1_t42" reading_order_no="32" segment_no="3" tag_type="table">NH  (integer)</text>
<text top="713" left="446" width="250" height="64" font="font11" id="p1_t43" reading_order_no="33" segment_no="3" tag_type="table">547  281  336</text>
<text top="714" left="771" width="61" height="63" font="font11" id="p1_t44" reading_order_no="34" segment_no="3" tag_type="table">6,291</text>
<text top="714" left="909" width="50" height="63" font="font11" id="p1_t45" reading_order_no="35" segment_no="3" tag_type="table">9.92</text>
<text top="714" left="1071" width="28" height="64" font="font11" id="p1_t46" reading_order_no="36" segment_no="3" tag_type="table">64.</text>
<text top="714" left="1167" width="75" height="63" font="font11" id="p1_t47" reading_order_no="37" segment_no="3" tag_type="table">333.31</text>
<text top="715" left="1371" width="745" height="65" font="font11" id="p1_t48" reading_order_no="103" segment_no="1" tag_type="text">only  wiring  resources  and  no  logic.  They  are</text>
<text top="762" left="153" width="185" height="64" font="font11" id="p1_t49" reading_order_no="38" segment_no="3" tag_type="table">PH  (polynomial)</text>
<text top="763" left="445" width="250" height="64" font="font11" id="p1_t50" reading_order_no="39" segment_no="3" tag_type="table">341  121°  155</text>
<text top="764" left="770" width="65" height="63" font="font11" id="p1_t51" reading_order_no="40" segment_no="3" tag_type="table">2966</text>
<text top="764" left="911" width="48" height="63" font="font11" id="p1_t52" reading_order_no="41" segment_no="3" tag_type="table">4,08</text>
<text top="764" left="1071" width="174" height="63" font="font11" id="p1_t53" reading_order_no="42" segment_no="3" tag_type="table">64.20.93</text>
<text top="765" left="1371" width="733" height="64" font="font11" id="p1_t54" reading_order_no="104" segment_no="1" tag_type="text">perfect  for  any  hardware  implementation.</text>
<text top="815" left="151" width="204" height="59" font="font12" id="p1_t55" reading_order_no="43" segment_no="3" tag_type="table">AES  S-box  (logic)</text>
<text top="815" left="445" width="50" height="59" font="font12" id="p1_t56" reading_order_no="44" segment_no="3" tag_type="table">Oar:</text>
<text top="815" left="556" width="154" height="59" font="font12" id="p1_t57" reading_order_no="45" segment_no="3" tag_type="table">787  Bt</text>
<text top="815" left="771" width="64" height="59" font="font12" id="p1_t58" reading_order_no="46" segment_no="3" tag_type="table">4ae7</text>
<text top="815" left="911" width="44" height="59" font="font12" id="p1_t59" reading_order_no="47" segment_no="3" tag_type="table">te</text>
<text top="815" left="1087" width="7" height="59" font="font12" id="p1_t60" reading_order_no="48" segment_no="3" tag_type="table">1</text>
<text top="815" left="1182" width="63" height="59" font="font12" id="p1_t61" reading_order_no="49" segment_no="3" tag_type="table">18.04</text>
<text top="815" left="1410" width="707" height="59" font="font12" id="p1_t62" reading_order_no="105" segment_no="1" tag_type="text">Data-dependent  shifts.  Because  of  their</text>
<text top="859" left="151" width="559" height="68" font="font13" id="p1_t63" reading_order_no="50" segment_no="3" tag_type="table">AES  S-box  (algebraic)  1.39  268  407</text>
<text top="860" left="792" width="39" height="68" font="font13" id="p1_t64" reading_order_no="51" segment_no="3" tag_type="table">431</text>
<text top="860" left="909" width="50" height="68" font="font13" id="p1_t65" reading_order_no="52" segment_no="3" tag_type="table">4.68</text>
<text top="861" left="1087" width="7" height="68" font="font13" id="p1_t66" reading_order_no="53" segment_no="3" tag_type="table">1</text>
<text top="861" left="1182" width="63" height="68" font="font13" id="p1_t67" reading_order_no="54" segment_no="3" tag_type="table">19.05</text>
<text top="861" left="1371" width="745" height="68" font="font13" id="p1_t68" reading_order_no="106" segment_no="1" tag_type="text">resistance  to  differential  cryptanalysis,</text>
<text top="943" left="152" width="694" height="40" font="font14" id="p1_t69" reading_order_no="55" segment_no="8" tag_type="text">1  Area  is  given  in  terms  of  equivalent  two-input  NAND  gates</text>
<text top="981" left="151" width="603" height="40" font="font14" id="p1_t70" reading_order_no="56" segment_no="8" tag_type="text">?  Number  of  clock  cycles  to  complete  one  operation</text>
<text top="1109" left="200" width="741" height="57" font="font3" id="p1_t71" reading_order_no="57" segment_no="9" tag_type="text">cuits  often  require  manual  design  changes.</text>
<text top="1157" left="165" width="930" height="60" font="font4" id="p1_t72" reading_order_no="58" segment_no="10" tag_type="list">e  At  the  algorithmic  level,  a  high  degree  of  regularity</text>
<text top="1209" left="201" width="893" height="59" font="font3" id="p1_t73" reading_order_no="59" segment_no="10" tag_type="list">expresses  the  uniformity  of  operations  necessary  to</text>
<text top="1258" left="200" width="894" height="59" font="font4" id="p1_t74" reading_order_no="60" segment_no="10" tag_type="list">perform a  task,  while  irregularity  characterizes  very</text>
<text top="1309" left="200" width="892" height="57" font="font3" id="p1_t75" reading_order_no="61" segment_no="10" tag_type="list">complex  tasks  consisting  of  many  atomic  operations.</text>
<text top="1408" left="163" width="930" height="59" font="font4" id="p1_t76" reading_order_no="62" segment_no="11" tag_type="text">Rabin’s  scheme,  NH,  and  WH  are  examples  of  algo-</text>
<text top="1457" left="125" width="969" height="59" font="font4" id="p1_t77" reading_order_no="63" segment_no="11" tag_type="text">rithms  with  high  regularity.  Each  has  one  simple  under-</text>
<text top="1508" left="126" width="968" height="58" font="font4" id="p1_t78" reading_order_no="64" segment_no="11" tag_type="text">lying  function.  Block  ciphers  require  serialization  of  the</text>
<text top="1558" left="126" width="968" height="59" font="font4" id="p1_t79" reading_order_no="65" segment_no="11" tag_type="text">round  function  because  even  a  single  round  can  take  a</text>
<text top="1607" left="125" width="968" height="61" font="font15" id="p1_t80" reading_order_no="66" segment_no="11" tag_type="text">considerable  amount  of  chip  area.  Ciphers  with  a  homo-</text>
<text top="1658" left="125" width="968" height="59" font="font4" id="p1_t81" reading_order_no="67" segment_no="11" tag_type="text">geneous  round  function,  such  as  AES,  have  high  regular-</text>
<text top="1708" left="126" width="968" height="59" font="font4" id="p1_t82" reading_order_no="68" segment_no="11" tag_type="text">ity  and  therefore  seem  better  suited  for  serialization  than</text>
<text top="1759" left="125" width="910" height="57" font="font3" id="p1_t83" reading_order_no="69" segment_no="11" tag_type="text">ciphers  with  a  heterogeneous  structure,  such  as  DES.</text>
<text top="1808" left="163" width="932" height="59" font="font4" id="p1_t84" reading_order_no="70" segment_no="12" tag_type="text">Energy  equals  the  amount  of  power  dissipated  over</text>
<text top="1858" left="125" width="969" height="59" font="font4" id="p1_t85" reading_order_no="71" segment_no="12" tag_type="text">time.  Increasing  the  degree  of  parallelism  increases</text>
<text top="1909" left="125" width="969" height="57" font="font3" id="p1_t86" reading_order_no="72" segment_no="12" tag_type="text">power  consumption,  but  it  also  decreases  computation</text>
<text top="1962" left="125" width="968" height="54" font="font16" id="p1_t87" reading_order_no="73" segment_no="12" tag_type="text">time.  Because  certain  elements  can  have  constant  size,</text>
<text top="2009" left="125" width="968" height="58" font="font4" id="p1_t88" reading_order_no="74" segment_no="12" tag_type="text">the  power-energy  tradeoff  depends  on  the  architecture’s</text>
<text top="2058" left="125" width="969" height="59" font="font4" id="p1_t89" reading_order_no="75" segment_no="12" tag_type="text">overall  structure.  We  can  find  the  point  of  optimality  by</text>
<text top="2108" left="125" width="969" height="59" font="font4" id="p1_t90" reading_order_no="76" segment_no="12" tag_type="text">modeling  the  energy  consumption  as  a  function  of  the</text>
<text top="2158" left="126" width="968" height="59" font="font4" id="p1_t91" reading_order_no="77" segment_no="12" tag_type="text">degree  of  parallelism.  Energy  per  bit  encrypted  describes</text>
<text top="2209" left="124" width="969" height="58" font="font4" id="p1_t92" reading_order_no="78" segment_no="12" tag_type="text">the  amount  of  energy  needed  to  encrypt  a  single  mes-</text>
<text top="2257" left="125" width="971" height="61" font="font15" id="p1_t93" reading_order_no="79" segment_no="12" tag_type="text">sage  bit.  We  can  use  this  metric,  which  is  independent  of</text>
<text top="2309" left="124" width="969" height="58" font="font4" id="p1_t94" reading_order_no="80" segment_no="12" tag_type="text">the  actual  operand  length,  to  compare  the  energy  effi-</text>
<text top="2358" left="124" width="962" height="59" font="font4" id="p1_t95" reading_order_no="81" segment_no="12" tag_type="text">ciency  of  cryptosystems  at  an  equivalent  security  level.</text>
<text top="2457" left="126" width="435" height="59" font="font15" id="p1_t96" reading_order_no="82" segment_no="13" tag_type="title">Functional  primitives</text>
<text top="2509" left="162" width="931" height="58" font="font4" id="p1_t97" reading_order_no="83" segment_no="14" tag_type="text">Each  group  of  primitives  has  specific  characteristics</text>
<text top="2559" left="125" width="908" height="59" font="font4" id="p1_t98" reading_order_no="84" segment_no="14" tag_type="text">and  suitability  for  ultralow-power  implementation.</text>
<text top="2609" left="162" width="931" height="60" font="font4" id="p1_t99" reading_order_no="85" segment_no="15" tag_type="text">Simple  logic  functions.  In  this  group,  the  logic  func-</text>
<text top="2658" left="125" width="968" height="61" font="font15" id="p1_t100" reading_order_no="86" segment_no="15" tag_type="text">tion  output  depends  ona  small,  fixed  set  of  inputs.  This</text>
<text top="2709" left="126" width="968" height="60" font="font4" id="p1_t101" reading_order_no="87" segment_no="15" tag_type="text">includes  functions  such  as  XORs  of  two  bit  strings</text>
<text top="2761" left="127" width="967" height="57" font="font8" id="p1_t102" reading_order_no="88" segment_no="15" tag_type="text">(AddRoundKey  in  AES),  bit  multipliers,  and  multi-</text>
<text top="2810" left="125" width="969" height="58" font="font3" id="p1_t103" reading_order_no="89" segment_no="15" tag_type="text">plexers.  The  number  of  logic  gates  scales  linearly  with</text>
<text top="2860" left="125" width="382" height="57" font="font4" id="p1_t104" reading_order_no="90" segment_no="15" tag_type="text">the  data  path’s  width.</text>
<text top="2910" left="163" width="930" height="58" font="font3" id="p1_t105" reading_order_no="91" segment_no="16" tag_type="text">Fixed  shifts  and  permutations.  In  this  article’s  con-</text>
<text top="2960" left="125" width="969" height="60" font="font4" id="p1_t106" reading_order_no="92" segment_no="16" tag_type="text">text,  fixed  means  that  the  shifts  and  permutations  aren’t</text>
<text top="3010" left="126" width="968" height="60" font="font4" id="p1_t107" reading_order_no="93" segment_no="16" tag_type="text">data-dependent.  Block  ciphers  such  as  DES,  Serpent,  and</text>
<text top="3116" left="18" width="223" height="49" font="font17" id="p1_t108" reading_order_no="150" segment_no="17" tag_type="text">42]  Computer</text>
<text top="913" left="1372" width="743" height="57" font="font8" id="p1_t109" reading_order_no="107" segment_no="1" tag_type="text">data-dependent  shifts  (or  variable  shifts)</text>
<text top="962" left="1372" width="744" height="59" font="font4" id="p1_t110" reading_order_no="108" segment_no="1" tag_type="text">are  used  in  block  ciphers  such  as  RCS,</text>
<text top="1013" left="1371" width="745" height="58" font="font3" id="p1_t111" reading_order_no="109" segment_no="1" tag_type="text">RC6,  and  MARS.  Implementations  fre-</text>
<text top="1063" left="1371" width="745" height="57" font="font3" id="p1_t112" reading_order_no="110" segment_no="1" tag_type="text">quently  use  barrel  shifters  to  support  all</text>
<text top="1111" left="1149" width="477" height="58" font="font4" id="p1_t113" reading_order_no="111" segment_no="1" tag_type="text">possible  shifts  or  rotations.</text>
<text top="1161" left="1186" width="931" height="60" font="font4" id="p1_t114" reading_order_no="112" segment_no="4" tag_type="text">The  delay  for  one  shift  operation  is  proportional  to</text>
<text top="1212" left="1149" width="968" height="58" font="font3" id="p1_t115" reading_order_no="113" segment_no="4" tag_type="text">log.n,  but  its  area  scales  with  mlog,n.  For  situations  in</text>
<text top="1260" left="1148" width="969" height="61" font="font15" id="p1_t116" reading_order_no="114" segment_no="4" tag_type="text">which  a  register  follows  the  shift  or  rotation,  imple-</text>
<text top="1312" left="1149" width="968" height="58" font="font3" id="p1_t117" reading_order_no="115" segment_no="4" tag_type="text">menting  the  register  as  a  shift  register  with  parallel  load</text>
<text top="1361" left="1149" width="967" height="60" font="font4" id="p1_t118" reading_order_no="116" segment_no="4" tag_type="text">and  combining  it  with  additional  control  logic  and  a</text>
<text top="1411" left="1149" width="968" height="60" font="font4" id="p1_t119" reading_order_no="117" segment_no="4" tag_type="text">counter  might  be  more  power-efficient.  Because  of  the</text>
<text top="1460" left="1149" width="968" height="61" font="font15" id="p1_t120" reading_order_no="118" segment_no="4" tag_type="text">relatively  high  area  cost,  variable  shifts  are  poorly  suited</text>
<text top="1512" left="1150" width="967" height="58" font="font3" id="p1_t121" reading_order_no="119" segment_no="4" tag_type="text">for  ultralow-power  implementations  unless  they’re  com-</text>
<text top="1561" left="1150" width="504" height="57" font="font4" id="p1_t122" reading_order_no="120" segment_no="4" tag_type="text">bined  with  existing  registers.</text>
<text top="1610" left="1187" width="930" height="60" font="font4" id="p1_t123" reading_order_no="121" segment_no="5" tag_type="text">Integer  arithmetic.  Integer  arithmetic  primitives,  such</text>
<text top="1662" left="1149" width="968" height="58" font="font3" id="p1_t124" reading_order_no="122" segment_no="5" tag_type="text">as  addition  and  multiplication,  are  often  the  most  costly</text>
<text top="1711" left="1149" width="967" height="59" font="font4" id="p1_t125" reading_order_no="123" segment_no="5" tag_type="text">functions  in  a  cryptographic  algorithm.  Although  we  can</text>
<text top="1761" left="1149" width="967" height="59" font="font4" id="p1_t126" reading_order_no="124" segment_no="5" tag_type="text">often  implement  them  in  a  bit-serial  fashion  (such  as  mul-</text>
<text top="1810" left="1149" width="967" height="61" font="font4" id="p1_t127" reading_order_no="125" segment_no="5" tag_type="text">tiplication),  the  efficient  propagation  of  carries  presents  a</text>
<text top="1861" left="1149" width="968" height="59" font="font3" id="p1_t128" reading_order_no="126" segment_no="5" tag_type="text">major  problem.  The  carry  propagate,  or  ripple  carry  adder</text>
<text top="1913" left="1150" width="967" height="56" font="font8" id="p1_t129" reading_order_no="127" segment_no="5" tag_type="text">(the  simplest  adder  form),  scales  linearly  with  the  word</text>
<text top="1961" left="1149" width="967" height="59" font="font4" id="p1_t130" reading_order_no="128" segment_no="5" tag_type="text">size  n,  but  glitches  in  the  carry  chain  cause  high  dynamic</text>
<text top="2014" left="1148" width="968" height="55" font="font10" id="p1_t131" reading_order_no="129" segment_no="5" tag_type="text">power  consumption.  Various  alternatives  exist,  but  they</text>
<text top="2062" left="1148" width="968" height="58" font="font3" id="p1_t132" reading_order_no="130" segment_no="5" tag_type="text">carry  a  penalty  in  terms  of  area  and  therefore  static  power</text>
<text top="2112" left="1148" width="969" height="58" font="font3" id="p1_t133" reading_order_no="131" segment_no="5" tag_type="text">consumption.  Because  of  these  costs,  new  ultralow-power</text>
<text top="2161" left="1149" width="738" height="58" font="font4" id="p1_t134" reading_order_no="132" segment_no="5" tag_type="text">algorithms  should  avoid  integer  arithmetic.</text>
<text top="2211" left="1186" width="931" height="59" font="font4" id="p1_t135" reading_order_no="133" segment_no="6" tag_type="text">Arithmetic  primitives  are  frequently  combined  with</text>
<text top="2261" left="1148" width="970" height="60" font="font4" id="p1_t136" reading_order_no="134" segment_no="6" tag_type="text">modular  reduction  steps.  In  trivial  cases,  a  modulus  of</text>
<text top="2311" left="1148" width="968" height="59" font="font4" id="p1_t137" reading_order_no="135" segment_no="6" tag_type="text">2*  means  that  the  algorithm  keeps  only  &amp;  bits  of  the</text>
<text top="2361" left="1148" width="968" height="59" font="font4" id="p1_t138" reading_order_no="136" segment_no="6" tag_type="text">result,  truncating  excess  bits.  Finite  field  arithmetic  with</text>
<text top="2412" left="1149" width="968" height="59" font="font4" id="p1_t139" reading_order_no="137" segment_no="6" tag_type="text">a  nontrivial  modulus  adds a  fair  amount  of  complexity</text>
<text top="2461" left="1149" width="967" height="60" font="font15" id="p1_t140" reading_order_no="138" segment_no="6" tag_type="text">to  the  circuit.  Simple  implementations  perform  condi-</text>
<text top="2515" left="1148" width="968" height="55" font="font10" id="p1_t141" reading_order_no="139" segment_no="6" tag_type="text">tional  subtractions  of  the  modulus  from  the  result,</text>
<text top="2562" left="1149" width="968" height="59" font="font4" id="p1_t142" reading_order_no="140" segment_no="6" tag_type="text">depending  on  its  most  significant  bit’s  value.  For  certain</text>
<text top="2613" left="1148" width="968" height="59" font="font4" id="p1_t143" reading_order_no="141" segment_no="6" tag_type="text">classes  of  public-key  algorithms  that  depend  heavily  on</text>
<text top="2663" left="1149" width="967" height="58" font="font3" id="p1_t144" reading_order_no="142" segment_no="6" tag_type="text">modular  arithmetic,  using  residue  number  system  arith-</text>
<text top="2711" left="1149" width="963" height="60" font="font15" id="p1_t145" reading_order_no="143" segment_no="6" tag_type="text">metic  has  proven  effective  for  efficient  implementation.</text>
<text top="2761" left="1187" width="929" height="59" font="font4" id="p1_t146" reading_order_no="144" segment_no="7" tag_type="text">Polynomial  arithmetic.  Polynomial  arithmetic—arith-</text>
<text top="2811" left="1149" width="968" height="60" font="font15" id="p1_t147" reading_order_no="145" segment_no="7" tag_type="text">metic  in  extension  fields—is  preferable  for  ultralow-power</text>
<text top="2862" left="1149" width="967" height="59" font="font4" id="p1_t148" reading_order_no="146" segment_no="7" tag_type="text">implementations  because  of  limited  carry  propagation  and</text>
<text top="2913" left="1148" width="968" height="58" font="font4" id="p1_t149" reading_order_no="147" segment_no="7" tag_type="text">improved  regularity.  Therefore,  several  algorithms,  includ-</text>
<text top="2962" left="1148" width="966" height="61" font="font15" id="p1_t150" reading_order_no="148" segment_no="7" tag_type="text">ing  AES,  are  specifically  tailored  for  arithmetic  in  GF(2‘).</text>
<text top="3012" left="1148" width="969" height="61" font="font15" id="p1_t151" reading_order_no="149" segment_no="7" tag_type="text">We  can  implement  additions  in  fields  of  characteristic  two</text>
</page>
</pdf2xml>
