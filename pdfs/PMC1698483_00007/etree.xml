<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">
<pdf2xml producer="poppler" version="23.04.0">
<page number="1" position="absolute" top="0" left="0" height="792" width="612">
	<fontspec id="font0" size="9" family="Arial,Italic" color="#000000"/>
	<fontspec id="font1" size="9" family="Arial" color="#000000"/>
	<fontspec id="font2" size="9" family="Arial,Bold" color="#000000"/>
	<fontspec id="font3" size="7" family="Arial,Italic" color="#000000"/>
	<fontspec id="font4" size="9" family="GillSans,Italic" color="#000000"/>
	<fontspec id="font5" size="10" family="Giovanni-Book" color="#000000"/>
	<fontspec id="font6" size="10" family="Mathematica5" color="#000000"/>
	<fontspec id="font7" size="10" family="SymbolMT" color="#000000"/>
	<fontspec id="font8" size="7" family="Giovanni-BookItalic,Italic" color="#000000"/>
	<fontspec id="font9" size="10" family="Giovanni-BookItalic,Italic" color="#000000"/>
	<fontspec id="font10" size="7" family="Giovanni-Book" color="#000000"/>
	<fontspec id="font11" size="10" family="MathematicalPi-Six" color="#000000"/>
	<fontspec id="font12" size="8" family="Giovanni-BookItalic,Italic" color="#000000"/>
	<fontspec id="font13" size="6" family="Giovanni-BookItalic,Italic" color="#000000"/>
	<fontspec id="font14" size="10" family="Symbol" color="#000000"/>
	<fontspec id="font15" size="8" family="Symbol" color="#000000"/>
	<fontspec id="font16" size="15" family="Symbol" color="#000000"/>
	<fontspec id="font17" size="8" family="Giovanni-Book" color="#000000"/>
	<fontspec id="font18" size="8" family="GillSans,Bold" color="#000000"/>
	<fontspec id="font19" size="8" family="SymbolMT" color="#000000"/>
	<fontspec id="font20" size="6" family="GillSans,Bold" color="#000000"/>
	<fontspec id="font21" size="8" family="GillSans" color="#000000"/>
<text top="41" left="55" width="129" height="10" font="font0" id="p1_t1" reading_order_no="0" segment_no="0" tag_type="title"><i>Algorithms for Molecular Biology</i></text>
<text top="41" left="184" width="28" height="10" font="font1" id="p1_t2" reading_order_no="1" segment_no="0" tag_type="title"> 2006, </text>
<text top="41" left="211" width="5" height="10" font="font2" id="p1_t3" reading_order_no="2" segment_no="0" tag_type="title"><b>1</b></text>
<text top="41" left="216" width="12" height="10" font="font1" id="p1_t4" reading_order_no="3" segment_no="0" tag_type="title">:21</text>
<text top="41" left="410" width="144" height="10" font="font1" id="p1_t5" reading_order_no="4" segment_no="1" tag_type="text">http://www.almob.org/content/1/1/21</text>
<text top="756" left="503" width="51" height="10" font="font1" id="p1_t6" reading_order_no="238" segment_no="10" tag_type="text">Page 8 of 18</text>
<text top="769" left="432" width="122" height="8" font="font3" id="p1_t7" reading_order_no="239" segment_no="11" tag_type="text"><i>(page number not for citation purposes)</i></text>
<text top="251" left="55" width="80" height="9" font="font4" id="p1_t8" reading_order_no="49" segment_no="4" tag_type="title"><i>Determining neighbors</i></text>
<text top="265" left="55" width="241" height="9" font="font5" id="p1_t9" reading_order_no="50" segment_no="6" tag_type="text">In order to quickly find all the existing neighbors of a</text>
<text top="278" left="55" width="241" height="9" font="font5" id="p1_t10" reading_order_no="51" segment_no="6" tag_type="text">motif within the allowed error thresholds, EXMOTIF first</text>
<text top="291" left="55" width="241" height="9" font="font5" id="p1_t11" reading_order_no="52" segment_no="6" tag_type="text">computes all the exact structured motifs, and stores them</text>
<text top="304" left="55" width="241" height="9" font="font5" id="p1_t12" reading_order_no="53" segment_no="6" tag_type="text">into a hash table to facilitate fast lookup. Then for each</text>
<text top="320" left="55" width="109" height="9" font="font5" id="p1_t13" reading_order_no="54" segment_no="6" tag_type="text">extracted structured motif </text>
<text top="319" left="165" width="10" height="10" font="font6" id="p1_t14" reading_order_no="55" segment_no="6" tag_type="text"></text>
<text top="320" left="175" width="121" height="9" font="font5" id="p1_t15" reading_order_no="56" segment_no="6" tag_type="text">, EXMOTIF enumerates all its</text>
<text top="335" left="55" width="241" height="9" font="font5" id="p1_t16" reading_order_no="57" segment_no="6" tag_type="text">possible neighbors and checks whether they exist in the</text>
<text top="348" left="55" width="241" height="9" font="font5" id="p1_t17" reading_order_no="58" segment_no="6" tag_type="text">hash table. One problem is that the number of possible</text>
<text top="363" left="55" width="56" height="9" font="font5" id="p1_t18" reading_order_no="59" segment_no="6" tag_type="text">neighbors of </text>
<text top="362" left="111" width="10" height="10" font="font6" id="p1_t19" reading_order_no="60" segment_no="6" tag_type="text"></text>
<text top="363" left="121" width="149" height="9" font="font5" id="p1_t20" reading_order_no="61" segment_no="6" tag_type="text"> can be quite large. When we allow </text>
<text top="360" left="270" width="4" height="13" font="font7" id="p1_t21" reading_order_no="62" segment_no="6" tag_type="text">ε</text>
<text top="368" left="274" width="4" height="6" font="font8" id="p1_t22" reading_order_no="63" segment_no="6" tag_type="text"><i>i </i></text>
<text top="363" left="278" width="18" height="9" font="font5" id="p1_t23" reading_order_no="64" segment_no="6" tag_type="text">sub-</text>
<text top="380" left="55" width="138" height="9" font="font5" id="p1_t24" reading_order_no="65" segment_no="6" tag_type="text">stitutions for simple component </text>
<text top="380" left="193" width="9" height="9" font="font9" id="p1_t25" reading_order_no="66" segment_no="6" tag_type="text"><i>M</i></text>
<text top="385" left="201" width="4" height="6" font="font8" id="p1_t26" reading_order_no="67" segment_no="6" tag_type="text"><i>i </i></text>
<text top="380" left="205" width="11" height="9" font="font5" id="p1_t27" reading_order_no="68" segment_no="6" tag_type="text">in </text>
<text top="380" left="216" width="10" height="10" font="font6" id="p1_t28" reading_order_no="69" segment_no="6" tag_type="text"></text>
<text top="380" left="226" width="27" height="9" font="font5" id="p1_t29" reading_order_no="70" segment_no="6" tag_type="text">, for 1 </text>
<text top="378" left="253" width="5" height="12" font="font7" id="p1_t30" reading_order_no="71" segment_no="6" tag_type="text">≤</text>
<text top="380" left="261" width="5" height="9" font="font9" id="p1_t31" reading_order_no="72" segment_no="6" tag_type="text"><i>i </i></text>
<text top="378" left="266" width="5" height="12" font="font7" id="p1_t32" reading_order_no="73" segment_no="6" tag_type="text">≤</text>
<text top="380" left="273" width="5" height="9" font="font9" id="p1_t33" reading_order_no="74" segment_no="6" tag_type="text"><i>k</i></text>
<text top="380" left="278" width="18" height="9" font="font5" id="p1_t34" reading_order_no="75" segment_no="6" tag_type="text">, the</text>
<text top="398" left="55" width="76" height="9" font="font5" id="p1_t35" reading_order_no="76" segment_no="6" tag_type="text">number of </text>
<text top="397" left="132" width="10" height="10" font="font6" id="p1_t36" reading_order_no="77" segment_no="6" tag_type="text"></text>
<text top="398" left="142" width="154" height="9" font="font5" id="p1_t37" reading_order_no="78" segment_no="6" tag_type="text">'s neighbors is given as</text>
<text top="423" left="157" width="112" height="9" font="font5" id="p1_t38" reading_order_no="103" segment_no="6" tag_type="text">. For example, for </text>
<text top="422" left="269" width="10" height="10" font="font6" id="p1_t39" reading_order_no="104" segment_no="6" tag_type="text"></text>
<text top="423" left="279" width="17" height="9" font="font5" id="p1_t40" reading_order_no="105" segment_no="6" tag_type="text">  =</text>
<text top="448" left="55" width="241" height="9" font="font5" id="p1_t41" reading_order_no="106" segment_no="6" tag_type="text">AACGTT[1,5]AGTTCC, when we allow one substitution</text>
<text top="461" left="55" width="241" height="9" font="font5" id="p1_t42" reading_order_no="107" segment_no="6" tag_type="text">for each simple motif, the number of its neighbors is 361;</text>
<text top="474" left="55" width="241" height="9" font="font5" id="p1_t43" reading_order_no="108" segment_no="6" tag_type="text">when we allow two substitutions per component, the</text>
<text top="487" left="55" width="241" height="9" font="font5" id="p1_t44" reading_order_no="109" segment_no="6" tag_type="text">number of its neighbors is 23,716. Instead of enumerating</text>
<text top="500" left="55" width="241" height="9" font="font5" id="p1_t45" reading_order_no="110" segment_no="6" tag_type="text">the potentially large number of neighbors (many of which</text>
<text top="516" left="55" width="168" height="9" font="font5" id="p1_t46" reading_order_no="111" segment_no="6" tag_type="text">may not even occur in the sequence set </text>
<text top="515" left="223" width="7" height="10" font="font6" id="p1_t47" reading_order_no="112" segment_no="6" tag_type="text"></text>
<text top="516" left="230" width="66" height="9" font="font5" id="p1_t48" reading_order_no="113" segment_no="6" tag_type="text">) for each struc-</text>
<text top="533" left="55" width="51" height="9" font="font5" id="p1_t49" reading_order_no="114" segment_no="6" tag_type="text">tured motif </text>
<text top="532" left="107" width="10" height="10" font="font6" id="p1_t50" reading_order_no="115" segment_no="6" tag_type="text"></text>
<text top="533" left="117" width="179" height="9" font="font5" id="p1_t51" reading_order_no="116" segment_no="6" tag_type="text"> individually, EXMOTIF utilizes the obser-</text>
<text top="548" left="55" width="241" height="9" font="font5" id="p1_t52" reading_order_no="117" segment_no="6" tag_type="text">vation that many motifs have shared neighbors, and thus</text>
<text top="561" left="55" width="241" height="9" font="font5" id="p1_t53" reading_order_no="118" segment_no="6" tag_type="text">previously computed support information can be reused.</text>
<text top="574" left="55" width="241" height="9" font="font5" id="p1_t54" reading_order_no="119" segment_no="6" tag_type="text">EXMOTIF enumerates neighbors in two steps. In the first</text>
<text top="589" left="55" width="57" height="9" font="font5" id="p1_t55" reading_order_no="120" segment_no="6" tag_type="text">step, for each </text>
<text top="589" left="113" width="10" height="10" font="font6" id="p1_t56" reading_order_no="121" segment_no="6" tag_type="text"></text>
<text top="589" left="123" width="64" height="9" font="font5" id="p1_t57" reading_order_no="122" segment_no="6" tag_type="text">, it enumerates </text>
<text top="589" left="187" width="39" height="9" font="font9" id="p1_t58" reading_order_no="123" segment_no="6" tag_type="text"><i>aggregate </i></text>
<text top="589" left="226" width="70" height="9" font="font5" id="p1_t59" reading_order_no="124" segment_no="6" tag_type="text">neighbor motifs,</text>
<text top="605" left="55" width="164" height="9" font="font5" id="p1_t60" reading_order_no="125" segment_no="6" tag_type="text">replacing the allowed number of errors </text>
<text top="605" left="219" width="4" height="9" font="font9" id="p1_t61" reading_order_no="126" segment_no="6" tag_type="text"><i>e</i></text>
<text top="609" left="223" width="4" height="6" font="font8" id="p1_t62" reading_order_no="127" segment_no="6" tag_type="text"><i>i </i></text>
<text top="605" left="227" width="69" height="9" font="font5" id="p1_t63" reading_order_no="128" segment_no="6" tag_type="text">with as many 'N'</text>
<text top="619" left="55" width="241" height="9" font="font5" id="p1_t64" reading_order_no="129" segment_no="6" tag_type="text">symbols (which stands for A,C,G, or T). The number of</text>
<text top="643" left="55" width="180" height="9" font="font5" id="p1_t65" reading_order_no="130" segment_no="6" tag_type="text">possible aggregate neighbors is given as </text>
<text top="643" left="294" width="3" height="9" font="font5" id="p1_t66" reading_order_no="146" segment_no="6" tag_type="formula">.</text>
<text top="667" left="55" width="241" height="9" font="font5" id="p1_t67" reading_order_no="147" segment_no="6" tag_type="text">The second step, it computes the support for each aggre-</text>
<text top="681" left="55" width="241" height="9" font="font5" id="p1_t68" reading_order_no="148" segment_no="6" tag_type="text">gate neighbor by expanding each 'N' with each DNA sym-</text>
<text top="694" left="55" width="241" height="9" font="font5" id="p1_t69" reading_order_no="149" segment_no="6" tag_type="text">bol, looking up the hash table for the support of the</text>
<text top="707" left="55" width="241" height="9" font="font5" id="p1_t70" reading_order_no="150" segment_no="6" tag_type="text">corresponding motif, and adding the supports for all</text>
<text top="720" left="55" width="241" height="9" font="font5" id="p1_t71" reading_order_no="151" segment_no="6" tag_type="text">matching motifs. Since the motifs matching an aggregate</text>
<text top="251" left="313" width="241" height="9" font="font5" id="p1_t72" reading_order_no="152" segment_no="5" tag_type="text">are also neighbors of each other, the support of the aggre-</text>
<text top="265" left="313" width="241" height="9" font="font5" id="p1_t73" reading_order_no="153" segment_no="5" tag_type="text">gate can be re-used to compute the support of other</text>
<text top="278" left="313" width="241" height="9" font="font5" id="p1_t74" reading_order_no="154" segment_no="5" tag_type="text">matching motifs as well. Once the supports for all aggre-</text>
<text top="291" left="313" width="241" height="9" font="font5" id="p1_t75" reading_order_no="155" segment_no="5" tag_type="text">gate neighbors have been computed, the final support of</text>
<text top="306" left="313" width="85" height="9" font="font5" id="p1_t76" reading_order_no="156" segment_no="5" tag_type="text">the structured motif </text>
<text top="305" left="399" width="10" height="10" font="font6" id="p1_t77" reading_order_no="157" segment_no="5" tag_type="text"></text>
<text top="306" left="409" width="132" height="9" font="font5" id="p1_t78" reading_order_no="158" segment_no="5" tag_type="text"> can be obtained. Thus for each </text>
<text top="305" left="541" width="10" height="10" font="font6" id="p1_t79" reading_order_no="159" segment_no="5" tag_type="text"></text>
<text top="306" left="552" width="3" height="9" font="font5" id="p1_t80" reading_order_no="160" segment_no="5" tag_type="text">,</text>
<text top="321" left="313" width="241" height="9" font="font5" id="p1_t81" reading_order_no="161" segment_no="5" tag_type="text">the number of "neighbors" to consider can be as low as</text>
<text top="345" left="371" width="4" height="9" font="font5" id="p1_t82" reading_order_no="177" segment_no="7" tag_type="formula">!</text>
<text top="379" left="313" width="241" height="9" font="font5" id="p1_t83" reading_order_no="178" segment_no="8" tag_type="text">For example, consider the example shown in<a href=""> Figure 4.</a></text>
<text top="391" left="313" width="125" height="9" font="font5" id="p1_t84" reading_order_no="179" segment_no="8" tag_type="text">Consider the structured motif </text>
<text top="390" left="438" width="10" height="10" font="font6" id="p1_t85" reading_order_no="180" segment_no="8" tag_type="text"></text>
<text top="391" left="449" width="106" height="9" font="font5" id="p1_t86" reading_order_no="181" segment_no="8" tag_type="text"> = TAA[0,3]GG[1,3]CCTT</text>
<text top="403" left="313" width="215" height="9" font="font5" id="p1_t87" reading_order_no="182" segment_no="8" tag_type="text">(taken from our example in Ta<a href="">ble 1); assum</a>e that </text>
<text top="399" left="528" width="4" height="13" font="font7" id="p1_t88" reading_order_no="183" segment_no="8" tag_type="text">ε</text>
<text top="407" left="532" width="6" height="6" font="font10" id="p1_t89" reading_order_no="184" segment_no="8" tag_type="text">1 </text>
<text top="403" left="538" width="16" height="9" font="font5" id="p1_t90" reading_order_no="185" segment_no="8" tag_type="text">= 1,</text>
<text top="411" left="313" width="4" height="13" font="font7" id="p1_t91" reading_order_no="186" segment_no="8" tag_type="text">ε</text>
<text top="419" left="317" width="6" height="6" font="font10" id="p1_t92" reading_order_no="187" segment_no="8" tag_type="text">2 </text>
<text top="414" left="323" width="37" height="9" font="font5" id="p1_t93" reading_order_no="188" segment_no="8" tag_type="text">= 0 and </text>
<text top="411" left="360" width="4" height="13" font="font7" id="p1_t94" reading_order_no="189" segment_no="8" tag_type="text">ε</text>
<text top="419" left="365" width="6" height="6" font="font10" id="p1_t95" reading_order_no="190" segment_no="8" tag_type="text">3 </text>
<text top="414" left="371" width="183" height="9" font="font5" id="p1_t96" reading_order_no="191" segment_no="8" tag_type="text">= 1. There are three possible aggregates for</text>
<text top="426" left="313" width="241" height="9" font="font5" id="p1_t97" reading_order_no="192" segment_no="8" tag_type="text">TAA, namely TAN, TNA, and NAA, and four aggregates for</text>
<text top="438" left="313" width="241" height="9" font="font5" id="p1_t98" reading_order_no="193" segment_no="8" tag_type="text">CCTT, namely CCTN, CCNT, CNTT, and NCTT, giving a</text>
<text top="450" left="313" width="146" height="9" font="font5" id="p1_t99" reading_order_no="194" segment_no="8" tag_type="text">total of 12 aggregate neighbors for </text>
<text top="449" left="459" width="10" height="10" font="font6" id="p1_t100" reading_order_no="195" segment_no="8" tag_type="text"></text>
<text top="450" left="469" width="85" height="9" font="font5" id="p1_t101" reading_order_no="196" segment_no="8" tag_type="text">, as illustrated in the</text>
<text top="461" left="313" width="241" height="9" font="font5" id="p1_t102" reading_order_no="197" segment_no="8" tag_type="text">figure. EXMOTIF processes each aggregate neighbor in</text>
<text top="473" left="313" width="241" height="9" font="font5" id="p1_t103" reading_order_no="198" segment_no="8" tag_type="text">turn. Using a hash-table (or direct lookup table if there are</text>
<text top="485" left="313" width="241" height="9" font="font5" id="p1_t104" reading_order_no="199" segment_no="8" tag_type="text">only a few neighbors), it checks if the aggregate neighbor</text>
<text top="497" left="313" width="241" height="9" font="font5" id="p1_t105" reading_order_no="200" segment_no="8" tag_type="text">has been processed previously. If yes, it moves on to the</text>
<text top="508" left="313" width="241" height="9" font="font5" id="p1_t106" reading_order_no="201" segment_no="8" tag_type="text">next aggregate. If not, it gathers the support information</text>
<text top="520" left="313" width="241" height="9" font="font5" id="p1_t107" reading_order_no="202" segment_no="8" tag_type="text">from all of its matching structured motifs, to compute its</text>
<text top="532" left="313" width="241" height="9" font="font5" id="p1_t108" reading_order_no="203" segment_no="8" tag_type="text">total support. Next, it also updates the neighbor support</text>
<text top="544" left="313" width="241" height="9" font="font5" id="p1_t109" reading_order_no="204" segment_no="8" tag_type="text">value for each of the matching motifs, so that once an</text>
<text top="555" left="313" width="241" height="9" font="font5" id="p1_t110" reading_order_no="205" segment_no="8" tag_type="text">aggregate is processed, we no longer require its informa-</text>
<text top="567" left="313" width="241" height="9" font="font5" id="p1_t111" reading_order_no="206" segment_no="8" tag_type="text">tion. All we need to know is whether it has been processed</text>
<text top="579" left="313" width="241" height="9" font="font5" id="p1_t112" reading_order_no="207" segment_no="8" tag_type="text">or not. For example, once the support of the first aggregate</text>
<text top="591" left="313" width="194" height="9" font="font5" id="p1_t113" reading_order_no="208" segment_no="8" tag_type="text">TAN[0,3]GG[1,3]CCTN for the example motif </text>
<text top="590" left="508" width="10" height="10" font="font6" id="p1_t114" reading_order_no="209" segment_no="8" tag_type="text"></text>
<text top="591" left="518" width="36" height="9" font="font5" id="p1_t115" reading_order_no="210" segment_no="8" tag_type="text"> above is</text>
<text top="602" left="313" width="241" height="9" font="font5" id="p1_t116" reading_order_no="211" segment_no="8" tag_type="text">computed, EXMOTIF also updates the neighbor supports</text>
<text top="614" left="313" width="219" height="9" font="font5" id="p1_t117" reading_order_no="212" segment_no="8" tag_type="text">for all other matching structured motifs, such as </text>
<text top="613" left="532" width="10" height="10" font="font6" id="p1_t118" reading_order_no="213" segment_no="8" tag_type="text"></text>
<text top="614" left="542" width="12" height="9" font="font5" id="p1_t119" reading_order_no="214" segment_no="8" tag_type="text">' =</text>
<text top="626" left="313" width="226" height="9" font="font5" id="p1_t120" reading_order_no="215" segment_no="8" tag_type="text">TAC[0,3]GG[1,3]CCTG. Later when processing </text>
<text top="625" left="539" width="10" height="10" font="font6" id="p1_t121" reading_order_no="216" segment_no="8" tag_type="text"></text>
<text top="626" left="549" width="5" height="9" font="font5" id="p1_t122" reading_order_no="217" segment_no="8" tag_type="text">',</text>
<text top="638" left="313" width="241" height="9" font="font5" id="p1_t123" reading_order_no="218" segment_no="8" tag_type="text">EXMOTIF can skip the above aggregate and focus on the</text>
<text top="649" left="313" width="241" height="9" font="font5" id="p1_t124" reading_order_no="219" segment_no="8" tag_type="text">not yet processed aggregates, e.g., NAC[0,3]GG</text>
<text top="661" left="313" width="96" height="9" font="font5" id="p1_t125" reading_order_no="220" segment_no="8" tag_type="text">[1,3]NCTG, and so on.</text>
<text top="685" left="313" width="241" height="9" font="font5" id="p1_t126" reading_order_no="221" segment_no="9" tag_type="text">The pseudo-code for arbitrary substitutions is given in Fig-</text>
<text top="696" left="313" width="212" height="9" font="font5" id="p1_t127" reading_order_no="222" segment_no="9" tag_type="text"><a href="">ure 5.</a> The procedure takes as input the hash-table </text>
<text top="694" left="525" width="8" height="13" font="font11" id="p1_t128" reading_order_no="223" segment_no="9" tag_type="text">⺘</text>
<text top="696" left="533" width="21" height="9" font="font5" id="p1_t129" reading_order_no="224" segment_no="9" tag_type="text"> con-</text>
<text top="708" left="313" width="121" height="9" font="font5" id="p1_t130" reading_order_no="225" segment_no="9" tag_type="text">taining all structured motifs </text>
<text top="707" left="434" width="10" height="10" font="font6" id="p1_t131" reading_order_no="226" segment_no="9" tag_type="text"></text>
<text top="708" left="444" width="83" height="9" font="font5" id="p1_t132" reading_order_no="227" segment_no="9" tag_type="text"> and their supports </text>
<text top="705" left="528" width="5" height="13" font="font7" id="p1_t133" reading_order_no="228" segment_no="9" tag_type="text">π</text>
<text top="708" left="533" width="4" height="9" font="font5" id="p1_t134" reading_order_no="229" segment_no="9" tag_type="text">(</text>
<text top="707" left="537" width="10" height="10" font="font6" id="p1_t135" reading_order_no="230" segment_no="9" tag_type="text"></text>
<text top="708" left="548" width="6" height="9" font="font5" id="p1_t136" reading_order_no="231" segment_no="9" tag_type="text">),</text>
<text top="720" left="313" width="52" height="9" font="font5" id="p1_t137" reading_order_no="232" segment_no="9" tag_type="text">the quorum </text>
<text top="720" left="365" width="5" height="9" font="font9" id="p1_t138" reading_order_no="233" segment_no="9" tag_type="text"><i>q</i></text>
<text top="720" left="369" width="135" height="9" font="font5" id="p1_t139" reading_order_no="234" segment_no="9" tag_type="text">, and the per simple motif errors </text>
<text top="720" left="504" width="4" height="9" font="font9" id="p1_t140" reading_order_no="235" segment_no="9" tag_type="text"><i>e</i></text>
<text top="724" left="508" width="4" height="6" font="font8" id="p1_t141" reading_order_no="236" segment_no="9" tag_type="text"><i>i </i></text>
<text top="720" left="512" width="42" height="9" font="font5" id="p1_t142" reading_order_no="237" segment_no="9" tag_type="text">or the glo-</text>
<text top="423" left="81" width="4" height="10" font="font5" id="p1_t143" reading_order_no="84" segment_no="6" tag_type="formula">[</text>
<text top="423" left="153" width="4" height="10" font="font5" id="p1_t144" reading_order_no="102" segment_no="6" tag_type="formula">]</text>
<text top="416" left="118" width="9" height="10" font="font9" id="p1_t145" reading_order_no="94" segment_no="6" tag_type="formula"><i>M</i></text>
<text top="431" left="123" width="3" height="10" font="font9" id="p1_t146" reading_order_no="96" segment_no="6" tag_type="formula"><i>j</i></text>
<text top="420" left="126" width="2" height="8" font="font12" id="p1_t147" reading_order_no="95" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="420" left="150" width="2" height="8" font="font12" id="p1_t148" reading_order_no="101" segment_no="6" tag_type="formula"><i>j</i></text>
<text top="429" left="96" width="2" height="8" font="font12" id="p1_t149" reading_order_no="88" segment_no="6" tag_type="formula"><i>j</i></text>
<text top="419" left="95" width="3" height="8" font="font12" id="p1_t150" reading_order_no="86" segment_no="6" tag_type="formula"><i>e</i></text>
<text top="429" left="70" width="2" height="8" font="font12" id="p1_t151" reading_order_no="81" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="418" left="70" width="4" height="8" font="font12" id="p1_t152" reading_order_no="80" segment_no="6" tag_type="formula"><i>k</i></text>
<text top="422" left="99" width="2" height="6" font="font13" id="p1_t153" reading_order_no="87" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="413" left="109" width="4" height="13" font="font14" id="p1_t154" reading_order_no="91" segment_no="6" tag_type="formula">⎛</text>
<text top="431" left="109" width="4" height="13" font="font14" id="p1_t155" reading_order_no="93" segment_no="6" tag_type="formula">⎝</text>
<text top="422" left="109" width="4" height="13" font="font14" id="p1_t156" reading_order_no="92" segment_no="6" tag_type="formula">⎜</text>
<text top="413" left="134" width="4" height="13" font="font14" id="p1_t157" reading_order_no="97" segment_no="6" tag_type="formula">⎞</text>
<text top="431" left="134" width="4" height="13" font="font14" id="p1_t158" reading_order_no="99" segment_no="6" tag_type="formula">⎠</text>
<text top="422" left="134" width="8" height="13" font="font14" id="p1_t159" reading_order_no="98" segment_no="6" tag_type="formula">⎟ ⋅</text>
<text top="427" left="99" width="4" height="10" font="font15" id="p1_t160" reading_order_no="89" segment_no="6" tag_type="formula">=</text>
<text top="427" left="72" width="4" height="10" font="font15" id="p1_t161" reading_order_no="82" segment_no="6" tag_type="formula">=</text>
<text top="418" left="84" width="11" height="20" font="font16" id="p1_t162" reading_order_no="85" segment_no="6" tag_type="formula">∑</text>
<text top="418" left="57" width="12" height="20" font="font16" id="p1_t163" reading_order_no="79" segment_no="6" tag_type="formula">∏</text>
<text top="423" left="144" width="6" height="10" font="font5" id="p1_t164" reading_order_no="100" segment_no="6" tag_type="formula">3</text>
<text top="429" left="103" width="4" height="8" font="font17" id="p1_t165" reading_order_no="90" segment_no="6" tag_type="formula">0</text>
<text top="429" left="76" width="4" height="8" font="font17" id="p1_t166" reading_order_no="83" segment_no="6" tag_type="formula">1</text>
<text top="636" left="271" width="9" height="10" font="font9" id="p1_t167" reading_order_no="139" segment_no="6" tag_type="formula"><i>M</i></text>
<text top="640" left="279" width="2" height="8" font="font12" id="p1_t168" reading_order_no="140" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="655" left="277" width="2" height="8" font="font12" id="p1_t169" reading_order_no="142" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="649" left="250" width="2" height="8" font="font12" id="p1_t170" reading_order_no="133" segment_no="6" tag_type="formula"><i>i</i></text>
<text top="638" left="250" width="4" height="8" font="font12" id="p1_t171" reading_order_no="132" segment_no="6" tag_type="formula"><i>k</i></text>
<text top="648" left="272" width="4" height="13" font="font14" id="p1_t172" reading_order_no="141" segment_no="6" tag_type="formula">ε</text>
<text top="633" left="262" width="4" height="13" font="font14" id="p1_t173" reading_order_no="136" segment_no="6" tag_type="formula">⎛</text>
<text top="651" left="262" width="4" height="13" font="font14" id="p1_t174" reading_order_no="138" segment_no="6" tag_type="formula">⎝</text>
<text top="642" left="262" width="4" height="13" font="font14" id="p1_t175" reading_order_no="137" segment_no="6" tag_type="formula">⎜</text>
<text top="633" left="287" width="4" height="13" font="font14" id="p1_t176" reading_order_no="143" segment_no="6" tag_type="formula">⎞</text>
<text top="651" left="287" width="4" height="13" font="font14" id="p1_t177" reading_order_no="145" segment_no="6" tag_type="formula">⎠</text>
<text top="642" left="287" width="4" height="13" font="font14" id="p1_t178" reading_order_no="144" segment_no="6" tag_type="formula">⎟</text>
<text top="647" left="253" width="4" height="10" font="font15" id="p1_t179" reading_order_no="134" segment_no="6" tag_type="formula">=</text>
<text top="638" left="237" width="12" height="20" font="font16" id="p1_t180" reading_order_no="131" segment_no="6" tag_type="formula">∏</text>
<text top="649" left="257" width="4" height="8" font="font17" id="p1_t181" reading_order_no="135" segment_no="6" tag_type="formula">1</text>
<text top="338" left="348" width="9" height="10" font="font9" id="p1_t182" reading_order_no="170" segment_no="7" tag_type="formula"><i>M</i></text>
<text top="342" left="356" width="2" height="8" font="font12" id="p1_t183" reading_order_no="171" segment_no="7" tag_type="formula"><i>i</i></text>
<text top="357" left="355" width="2" height="8" font="font12" id="p1_t184" reading_order_no="173" segment_no="7" tag_type="formula"><i>i</i></text>
<text top="351" left="328" width="2" height="8" font="font12" id="p1_t185" reading_order_no="164" segment_no="7" tag_type="formula"><i>i</i></text>
<text top="340" left="328" width="4" height="8" font="font12" id="p1_t186" reading_order_no="163" segment_no="7" tag_type="formula"><i>k</i></text>
<text top="350" left="350" width="4" height="13" font="font14" id="p1_t187" reading_order_no="172" segment_no="7" tag_type="formula">ε</text>
<text top="335" left="339" width="4" height="13" font="font14" id="p1_t188" reading_order_no="167" segment_no="7" tag_type="formula">⎛</text>
<text top="353" left="339" width="4" height="13" font="font14" id="p1_t189" reading_order_no="169" segment_no="7" tag_type="formula">⎝</text>
<text top="344" left="339" width="4" height="13" font="font14" id="p1_t190" reading_order_no="168" segment_no="7" tag_type="formula">⎜</text>
<text top="335" left="365" width="4" height="13" font="font14" id="p1_t191" reading_order_no="174" segment_no="7" tag_type="formula">⎞</text>
<text top="353" left="365" width="4" height="13" font="font14" id="p1_t192" reading_order_no="176" segment_no="7" tag_type="formula">⎠</text>
<text top="344" left="365" width="4" height="13" font="font14" id="p1_t193" reading_order_no="175" segment_no="7" tag_type="formula">⎟</text>
<text top="349" left="330" width="4" height="10" font="font15" id="p1_t194" reading_order_no="165" segment_no="7" tag_type="formula">=</text>
<text top="340" left="315" width="12" height="20" font="font16" id="p1_t195" reading_order_no="162" segment_no="7" tag_type="formula">∏</text>
<text top="351" left="334" width="4" height="8" font="font17" id="p1_t196" reading_order_no="166" segment_no="7" tag_type="formula">1</text>
<text top="87" left="55" width="99" height="7" font="font18" id="p1_t197" reading_order_no="5" segment_no="2" tag_type="title"><b>Table 3: IUPAC alphabet (</b></text>
<text top="84" left="154" width="5" height="10" font="font19" id="p1_t198" reading_order_no="6" segment_no="2" tag_type="title">Σ</text>
<text top="91" left="159" width="19" height="5" font="font20" id="p1_t199" reading_order_no="7" segment_no="2" tag_type="title"><b>IUPAC</b></text>
<text top="87" left="178" width="5" height="7" font="font18" id="p1_t200" reading_order_no="8" segment_no="2" tag_type="title"><b>).</b></text>
<text top="106" left="93" width="24" height="7" font="font21" id="p1_t201" reading_order_no="9" segment_no="3" tag_type="table">Symbol</text>
<text top="106" left="202" width="5" height="7" font="font21" id="p1_t202" reading_order_no="10" segment_no="3" tag_type="table">A</text>
<text top="106" left="302" width="6" height="7" font="font21" id="p1_t203" reading_order_no="11" segment_no="3" tag_type="table">C</text>
<text top="106" left="401" width="6" height="7" font="font21" id="p1_t204" reading_order_no="12" segment_no="3" tag_type="table">G</text>
<text top="106" left="502" width="5" height="7" font="font21" id="p1_t205" reading_order_no="13" segment_no="3" tag_type="table">T</text>
<text top="116" left="96" width="18" height="7" font="font21" id="p1_t206" reading_order_no="14" segment_no="3" tag_type="table">Bases</text>
<text top="116" left="202" width="5" height="7" font="font21" id="p1_t207" reading_order_no="15" segment_no="3" tag_type="table">A</text>
<text top="116" left="302" width="6" height="7" font="font21" id="p1_t208" reading_order_no="16" segment_no="3" tag_type="table">C</text>
<text top="116" left="401" width="6" height="7" font="font21" id="p1_t209" reading_order_no="17" segment_no="3" tag_type="table">G</text>
<text top="116" left="502" width="5" height="7" font="font21" id="p1_t210" reading_order_no="18" segment_no="3" tag_type="table">T</text>
<text top="139" left="93" width="24" height="7" font="font21" id="p1_t211" reading_order_no="19" segment_no="3" tag_type="table">Symbol</text>
<text top="139" left="202" width="6" height="7" font="font21" id="p1_t212" reading_order_no="20" segment_no="3" tag_type="table">U</text>
<text top="139" left="302" width="5" height="7" font="font21" id="p1_t213" reading_order_no="21" segment_no="3" tag_type="table">R</text>
<text top="139" left="402" width="5" height="7" font="font21" id="p1_t214" reading_order_no="22" segment_no="3" tag_type="table">Y</text>
<text top="139" left="501" width="5" height="7" font="font21" id="p1_t215" reading_order_no="23" segment_no="3" tag_type="table">K</text>
<text top="149" left="96" width="18" height="7" font="font21" id="p1_t216" reading_order_no="24" segment_no="3" tag_type="table">Bases</text>
<text top="149" left="202" width="6" height="7" font="font21" id="p1_t217" reading_order_no="25" segment_no="3" tag_type="table">U</text>
<text top="149" left="298" width="13" height="7" font="font21" id="p1_t218" reading_order_no="26" segment_no="3" tag_type="table">A,G</text>
<text top="149" left="398" width="13" height="7" font="font21" id="p1_t219" reading_order_no="27" segment_no="3" tag_type="table">C,T</text>
<text top="149" left="498" width="13" height="7" font="font21" id="p1_t220" reading_order_no="28" segment_no="3" tag_type="table">G,T</text>
<text top="171" left="93" width="24" height="7" font="font21" id="p1_t221" reading_order_no="29" segment_no="3" tag_type="table">Symbol</text>
<text top="171" left="202" width="6" height="7" font="font21" id="p1_t222" reading_order_no="30" segment_no="3" tag_type="table">M</text>
<text top="171" left="303" width="4" height="7" font="font21" id="p1_t223" reading_order_no="31" segment_no="3" tag_type="table">S</text>
<text top="171" left="400" width="9" height="7" font="font21" id="p1_t224" reading_order_no="32" segment_no="3" tag_type="table">W</text>
<text top="171" left="502" width="5" height="7" font="font21" id="p1_t225" reading_order_no="33" segment_no="3" tag_type="table">B</text>
<text top="181" left="96" width="18" height="7" font="font21" id="p1_t226" reading_order_no="34" segment_no="3" tag_type="table">Bases</text>
<text top="181" left="198" width="13" height="7" font="font21" id="p1_t227" reading_order_no="35" segment_no="3" tag_type="table">A,C</text>
<text top="181" left="298" width="14" height="7" font="font21" id="p1_t228" reading_order_no="36" segment_no="3" tag_type="table">G,C</text>
<text top="181" left="398" width="12" height="7" font="font21" id="p1_t229" reading_order_no="37" segment_no="3" tag_type="table">A,T</text>
<text top="181" left="494" width="21" height="7" font="font21" id="p1_t230" reading_order_no="38" segment_no="3" tag_type="table">C,G,T</text>
<text top="204" left="93" width="24" height="7" font="font21" id="p1_t231" reading_order_no="39" segment_no="3" tag_type="table">Symbol</text>
<text top="204" left="202" width="6" height="7" font="font21" id="p1_t232" reading_order_no="40" segment_no="3" tag_type="table">D</text>
<text top="204" left="302" width="6" height="7" font="font21" id="p1_t233" reading_order_no="41" segment_no="3" tag_type="table">H</text>
<text top="204" left="402" width="5" height="7" font="font21" id="p1_t234" reading_order_no="42" segment_no="3" tag_type="table">V</text>
<text top="204" left="501" width="6" height="7" font="font21" id="p1_t235" reading_order_no="43" segment_no="3" tag_type="table">N</text>
<text top="214" left="96" width="18" height="7" font="font21" id="p1_t236" reading_order_no="44" segment_no="3" tag_type="table">Bases</text>
<text top="214" left="195" width="20" height="7" font="font21" id="p1_t237" reading_order_no="45" segment_no="3" tag_type="table">A,G,T</text>
<text top="214" left="295" width="20" height="7" font="font21" id="p1_t238" reading_order_no="46" segment_no="3" tag_type="table">A,C,T</text>
<text top="214" left="394" width="21" height="7" font="font21" id="p1_t239" reading_order_no="47" segment_no="3" tag_type="table">A,C,G</text>
<text top="214" left="490" width="28" height="7" font="font21" id="p1_t240" reading_order_no="48" segment_no="3" tag_type="table">A,C,G,T</text>
</page>
</pdf2xml>
