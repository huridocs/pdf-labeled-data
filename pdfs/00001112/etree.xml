<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">
<pdf2xml producer="poppler" version="23.04.0">
<page number="1" position="absolute" top="0" left="0" height="3233" width="2219">
	<fontspec id="font0" size="57" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font1" size="2" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font2" size="48" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font3" size="47" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font4" size="46" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font5" size="40" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font6" size="39" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font7" size="24" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font8" size="41" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font9" size="42" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font10" size="43" family="GlyphLessFont" color="#000000"/>
	<fontspec id="font11" size="45" family="GlyphLessFont" color="#000000"/>
<text top="609" left="405" width="1565" height="77" font="font0" id="p1_t1" reading_order_no="0" segment_no="0" tag_type="text">WHATEVER  THE  REASON  FOR  THE  SOFTWARE  FAILURE,</text>
<text top="686" left="322" width="1730" height="77" font="font0" id="p1_t2" reading_order_no="1" segment_no="0" tag_type="text">WE  WOULD  LIKE  THE  SOFTWARE  TO  BE  ABLE  TO  RECOGNIZE</text>
<text top="758" left="343" width="1690" height="77" font="font0" id="p1_t3" reading_order_no="2" segment_no="0" tag_type="text">THAT  IT  HAS  FAILED  AND  TO  RECOVER  FROM  THE  FAILURE.</text>
<text top="1236" left="244" width="919" height="65" font="font2" id="p1_t4" reading_order_no="3" segment_no="2" tag_type="text">Adding  dynamic  intelligent  fault  awareness  and</text>
<text top="1289" left="196" width="967" height="63" font="font3" id="p1_t5" reading_order_no="4" segment_no="2" tag_type="text">recovery  to  running  systems  enables  the  identification</text>
<text top="1341" left="196" width="973" height="62" font="font4" id="p1_t6" reading_order_no="5" segment_no="2" tag_type="text">of  unanticipated  failures  and  the  construction  of</text>
<text top="1392" left="197" width="965" height="63" font="font3" id="p1_t7" reading_order_no="6" segment_no="2" tag_type="text">novel  workarounds  to  these  failures.  Our  approach  is</text>
<text top="1446" left="196" width="967" height="62" font="font4" id="p1_t8" reading_order_no="7" segment_no="2" tag_type="text">pervasive  and  incremental.  It  is  pervasive  in  that</text>
<text top="1497" left="196" width="968" height="62" font="font4" id="p1_t9" reading_order_no="8" segment_no="2" tag_type="text">it  applies  to  all  components  of  a  large,  complex</text>
<text top="1549" left="196" width="966" height="62" font="font4" id="p1_t10" reading_order_no="9" segment_no="2" tag_type="text">system—not  just  the  “firewall”  services.  It  is  incre-</text>
<text top="1602" left="197" width="966" height="63" font="font3" id="p1_t11" reading_order_no="10" segment_no="2" tag_type="text">mental  in  that  it  coexists  with  existing  faulty,  unsafe</text>
<text top="1660" left="196" width="967" height="54" font="font5" id="p1_t12" reading_order_no="11" segment_no="2" tag_type="text">systems,  and  it  is  possible  to  incrementally  increase</text>
<text top="1705" left="197" width="966" height="63" font="font3" id="p1_t13" reading_order_no="12" segment_no="2" tag_type="text">the  safety  and  reliability  of  large  systems.  The</text>
<text top="1759" left="196" width="973" height="62" font="font4" id="p1_t14" reading_order_no="13" segment_no="2" tag_type="text">approach  aims  to  minimize  the  cost,  in  terms  of</text>
<text top="1811" left="196" width="967" height="63" font="font3" id="p1_t15" reading_order_no="14" segment_no="2" tag_type="text">hand-coded  specifications  with  respect  to  how  to  iso-</text>
<text top="1863" left="196" width="539" height="65" font="font2" id="p1_t16" reading_order_no="15" segment_no="2" tag_type="text">late  and  recover  from  failures.</text>
<text top="1916" left="246" width="917" height="62" font="font4" id="p1_t17" reading_order_no="16" segment_no="3" tag_type="text">There  are  many  reasons  why  software  fails,  the</text>
<text top="1968" left="197" width="422" height="63" font="font3" id="p1_t18" reading_order_no="17" segment_no="3" tag_type="text">most  common  include:</text>
<text top="2071" left="198" width="917" height="63" font="font3" id="p1_t19" reading_order_no="18" segment_no="8" tag_type="list">*  Assumptions  made  by  the  software  turn  out  not</text>
<text top="2122" left="230" width="887" height="63" font="font3" id="p1_t20" reading_order_no="19" segment_no="8" tag_type="list">to  be  true  at  some  point.  For  example,  if  a  piece</text>
<text top="2174" left="229" width="847" height="65" font="font2" id="p1_t21" reading_order_no="20" segment_no="8" tag_type="list">of  software  must  open a file  with  a  given  path</text>
<text top="2228" left="230" width="912" height="65" font="font2" id="p1_t22" reading_order_no="21" segment_no="8" tag_type="list">name,  it  will  usually  succeed;  but  if  the  particular</text>
<text top="2279" left="229" width="892" height="65" font="font2" id="p1_t23" reading_order_no="22" segment_no="8" tag_type="list">disk  that  corresponds  to  the  path  name  fails,  the</text>
<text top="2332" left="230" width="907" height="65" font="font2" id="p1_t24" reading_order_no="23" segment_no="8" tag_type="list">file  will  not  be  accessible.  If  the  program  assumes</text>
<text top="2385" left="230" width="905" height="65" font="font2" id="p1_t25" reading_order_no="24" segment_no="8" tag_type="list">that  the  file  is  accessible,  the  program  will  fail.  In</text>
<text top="2438" left="228" width="926" height="63" font="font3" id="p1_t26" reading_order_no="25" segment_no="8" tag_type="list">highly  constrained  situations,  it  is  possible  to  enu-</text>
<text top="2490" left="230" width="854" height="62" font="font4" id="p1_t27" reading_order_no="26" segment_no="8" tag_type="list">merate  all  such  failures  and  hand  code  specific</text>
<text top="2541" left="230" width="837" height="65" font="font2" id="p1_t28" reading_order_no="27" segment_no="8" tag_type="list">exception  handlers—and  such  is  the  standard</text>
<text top="2601" left="229" width="892" height="53" font="font6" id="p1_t29" reading_order_no="28" segment_no="8" tag_type="list">practice  in  the  industry.  In  many  cases,  however,</text>
<text top="2646" left="229" width="894" height="62" font="font4" id="p1_t30" reading_order_no="29" segment_no="8" tag_type="list">particularly  in  embedded  applications,  the  num-</text>
<text top="2697" left="230" width="915" height="63" font="font3" id="p1_t31" reading_order_no="30" segment_no="8" tag_type="list">ber  of  ways  the  environment  can  change  becomes</text>
<text top="2751" left="229" width="893" height="63" font="font3" id="p1_t32" reading_order_no="31" segment_no="8" tag_type="list">so  large  that  the  programmer  cannot  realistically</text>
<text top="2802" left="229" width="583" height="65" font="font2" id="p1_t33" reading_order_no="32" segment_no="8" tag_type="list">anticipate  every  possible  failure.</text>
<text top="2855" left="199" width="953" height="63" font="font3" id="p1_t34" reading_order_no="33" segment_no="9" tag_type="list">*  Software  is  attacked  by  a  hostile  agent.  This  form</text>
<text top="2908" left="229" width="856" height="65" font="font2" id="p1_t35" reading_order_no="34" segment_no="9" tag_type="list">of  failure  is  similar  to  the  first  one  except  that</text>
<text top="2961" left="230" width="838" height="62" font="font4" id="p1_t36" reading_order_no="35" segment_no="9" tag_type="list">change  in  the  environment  is  done  explicitly,</text>
<text top="3012" left="229" width="814" height="63" font="font3" id="p1_t37" reading_order_no="36" segment_no="9" tag_type="list">with  the  intent  to  cause  the  software  to  fail.</text>
<text top="3151" left="197" width="47" height="32" font="font7" id="p1_t38" reading_order_no="70" segment_no="10" tag_type="text">42</text>
<text top="3151" left="290" width="699" height="32" font="font7" id="p1_t39" reading_order_no="71" segment_no="11" tag_type="text">March  2006/Vol.  49,  No.  3  COMMUNICATIONS  OF  THE  ACM</text>
<text top="1235" left="1216" width="872" height="65" font="font2" id="p1_t40" reading_order_no="37" segment_no="1" tag_type="list">*  Software  changes  introduce  incompatibilities.</text>
<text top="1288" left="1248" width="889" height="65" font="font2" id="p1_t41" reading_order_no="38" segment_no="1" tag_type="list">Most  software  evolves  during  its  lifetime.  When</text>
<text top="1339" left="1248" width="859" height="64" font="font3" id="p1_t42" reading_order_no="39" segment_no="1" tag_type="list">incompatibilities  are  inadvertently  introduced,</text>
<text top="1391" left="1247" width="871" height="64" font="font3" id="p1_t43" reading_order_no="40" segment_no="1" tag_type="list">software  that  previously  did  not  fail  for  a  given</text>
<text top="1445" left="1247" width="425" height="62" font="font4" id="p1_t44" reading_order_no="41" segment_no="1" tag_type="list">situation  may  now  fail.</text>
<text top="1554" left="1264" width="912" height="55" font="font8" id="p1_t45" reading_order_no="42" segment_no="4" tag_type="text">Whatever  the  reason  for  the  software  failure,  we</text>
<text top="1605" left="1214" width="963" height="57" font="font9" id="p1_t46" reading_order_no="43" segment_no="4" tag_type="text">would  like  the  software  to  be  able  to  recognize  that  it</text>
<text top="1658" left="1216" width="961" height="57" font="font9" id="p1_t47" reading_order_no="44" segment_no="4" tag_type="text">has  failed  and  to  recover  from  the  failure.  There  are</text>
<text top="1703" left="1216" width="960" height="65" font="font2" id="p1_t48" reading_order_no="45" segment_no="4" tag_type="text">three  steps  to  doing  this:  noticing  the  software  has</text>
<text top="1763" left="1216" width="961" height="54" font="font5" id="p1_t49" reading_order_no="46" segment_no="4" tag_type="text">failed;  diagnosing  exactly  what  software  component</text>
<text top="1817" left="1216" width="962" height="55" font="font8" id="p1_t50" reading_order_no="47" segment_no="4" tag_type="text">has  failed;  and  finding  an  alternative  way  of  achieving</text>
<text top="1868" left="1216" width="403" height="55" font="font8" id="p1_t51" reading_order_no="48" segment_no="4" tag_type="text">the  intended  behavior.</text>
<text top="1970" left="1215" width="177" height="58" font="font10" id="p1_t52" reading_order_no="49" segment_no="5" tag_type="title">APPROACH</text>
<text top="2018" left="1216" width="960" height="62" font="font4" id="p1_t53" reading_order_no="50" segment_no="6" tag_type="text">In  order  for  the  runtime  system  to  reason  about  its</text>
<text top="2078" left="1216" width="959" height="54" font="font5" id="p1_t54" reading_order_no="51" segment_no="6" tag_type="text">own  behavior  and  intended  behavior  in  this  way,</text>
<text top="2122" left="1216" width="961" height="62" font="font4" id="p1_t55" reading_order_no="52" segment_no="6" tag_type="text">certain  extra  information  and  algorithms  must  be</text>
<text top="2177" left="1215" width="961" height="61" font="font11" id="p1_t56" reading_order_no="53" segment_no="6" tag_type="text">present  at  runtime.  In  our  system,  these  extra  pieces</text>
<text top="2226" left="1217" width="960" height="65" font="font2" id="p1_t57" reading_order_no="54" segment_no="6" tag_type="text">include  models  of  the  causal  relationships  between</text>
<text top="2280" left="1216" width="961" height="63" font="font3" id="p1_t58" reading_order_no="55" segment_no="6" tag_type="text">the  software  components,  models  of  intended</text>
<text top="2337" left="1216" width="960" height="57" font="font9" id="p1_t59" reading_order_no="56" segment_no="6" tag_type="text">behavior,  and  models  of  correct  (nominal)  execution</text>
<text top="2385" left="1216" width="960" height="65" font="font2" id="p1_t60" reading_order_no="57" segment_no="6" tag_type="text">of  the  software.  Additionally,  models  of  known  fail-</text>
<text top="2438" left="1217" width="957" height="63" font="font3" id="p1_t61" reading_order_no="58" segment_no="6" tag_type="text">ure  modes  can  be  very  helpful  but  are  not  required.</text>
<text top="2488" left="1216" width="960" height="63" font="font3" id="p1_t62" reading_order_no="59" segment_no="6" tag_type="text">Finally,  the  system  must  be  able  to  sense,  at  least  par-</text>
<text top="2548" left="1217" width="960" height="54" font="font5" id="p1_t63" reading_order_no="60" segment_no="6" tag_type="text">tially,  its  state;  to  reason  about  the  difference</text>
<text top="2599" left="1216" width="958" height="54" font="font5" id="p1_t64" reading_order_no="61" segment_no="6" tag_type="text">between  the  expected  state  and  the  observed  state;</text>
<text top="2645" left="1215" width="963" height="62" font="font4" id="p1_t65" reading_order_no="62" segment_no="6" tag_type="text">and  to  modify  the  running  software  (for  example,  by</text>
<text top="2700" left="1216" width="729" height="58" font="font10" id="p1_t66" reading_order_no="63" segment_no="6" tag_type="text">choosing  alternative  runtime  methods).</text>
<text top="2750" left="1267" width="910" height="62" font="font4" id="p1_t67" reading_order_no="64" segment_no="7" tag_type="text">Building  software  systems  in  this  way  comes  with  a</text>
<text top="2802" left="1216" width="960" height="63" font="font3" id="p1_t68" reading_order_no="65" segment_no="7" tag_type="text">certain  cost.  Models  of  the  software  components  and</text>
<text top="2852" left="1217" width="960" height="65" font="font2" id="p1_t69" reading_order_no="66" segment_no="7" tag_type="text">their  causal  relationships,  which  might  otherwise  have</text>
<text top="2907" left="1216" width="961" height="63" font="font3" id="p1_t70" reading_order_no="67" segment_no="7" tag_type="text">existed  only  in  the  programmer's  head,  must  be  made</text>
<text top="2960" left="1216" width="959" height="63" font="font3" id="p1_t71" reading_order_no="68" segment_no="7" tag_type="text">explicit;  the  reasoning  engine  must  also  be  linked  in</text>
<text top="3017" left="1217" width="960" height="54" font="font5" id="p1_t72" reading_order_no="69" segment_no="7" tag_type="text">to  the  running  program,  and  the  computational  cost</text>
</page>
</pdf2xml>
